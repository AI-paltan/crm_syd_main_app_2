2023-04-10 15:37:17+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-10 15:37:17+0530 - sLogger - DEBUG - {'fileid': '799c2113-aeea-48ea-8725-1a7818d448cd', 'filename': '20 MAA -  Financial Report  (Signed).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/20 MAA -  Financial Report  (Signed).pdf'}
2023-04-10 15:37:17+0530 - sLogger - DEBUG - save file completed
2023-04-10 15:37:17+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-10 15:37:17+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-10 15:37:17+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-10 15:37:17+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-10 15:37:17+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-10 15:37:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:19+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:19+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:37+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:37+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:45+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:45+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:37:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:37:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:37:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:37:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:37:57+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:37:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:37:57+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:11+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:11+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:19+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:20+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:28+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:28+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:37+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:37+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:46+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:46+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:38:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:38:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:38:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:38:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:38:55+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:38:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:38:55+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:03+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:32+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:32+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:40+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:40+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:49+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:49+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:39:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:39:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:39:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:39:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:39:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:39:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:39:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:09+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:29+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:29+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:39+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:39+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:44+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:44+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:40:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:40:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:40:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:40:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:40:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:40:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:40:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:41:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:41:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:41:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:41:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:41:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:41:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:41:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:41:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:41:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:41:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:41:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:41:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:41:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:41:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:41:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:41:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:41:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:41:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:41:14+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:41:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:41:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:41:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:41:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:41:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:41:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:41:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:41:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-10 15:41:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-10 15:41:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-10 15:41:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-10 15:41:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-10 15:41:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-10 15:41:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-10 15:41:27+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-10 15:41:27+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [7], 'predicted_cpl_pages': [6], 'predicted_ccf_pages': [9], 'filtered_cbs_pages': [7], 'filtered_cpl_pages': [6], 'filtered_ccf_pages': [9], 'month': 'december'}
2023-04-10 15:41:27+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-10 15:41:27+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-10 15:41:27+0530 - sLogger - DEBUG - process file completed
2023-04-10 15:41:27+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-10 15:41:27+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-10 15:41:27+0530 - sLogger - DEBUG - TE process file started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-10 15:46:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-10 15:46:27+0530 - sLogger - DEBUG - process_main_pages started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-10 15:46:27+0530 - sLogger - DEBUG - start_refactoring started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-10 15:46:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-10 15:46:27+0530 - sLogger - DEBUG - start_refactoring started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-10 15:46:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-10 15:46:27+0530 - sLogger - DEBUG - start_refactoring started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-10 15:46:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-10 15:46:27+0530 - sLogger - DEBUG - set_section_details started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-10 15:46:27+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-10 15:46:27+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-10 15:46:27+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-10 15:46:27+0530 - sLogger - DEBUG - set_section_details started
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-10 15:46:27+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:30+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-10 15:46:30+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:30+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:30+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-10 15:46:30+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-10 15:46:31+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-10 15:46:31+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-10 15:46:31+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-10 15:46:31+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-10 15:46:31+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:32:41+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-11 15:32:41+0530 - sLogger - DEBUG - {'fileid': '514a0356-06ec-4ca5-9d99-3049354c60cf', 'filename': '20 MAA -  Financial Report  (Signed).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/20 MAA -  Financial Report  (Signed).pdf'}
2023-04-11 15:32:41+0530 - sLogger - DEBUG - save file completed
2023-04-11 15:32:41+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-11 15:32:41+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-11 15:32:41+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-11 15:32:41+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-11 15:32:41+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-11 15:32:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:32:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:32:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:32:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:32:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:32:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:32:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:32:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:32:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:32:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:32:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:32:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:32:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:32:46+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:32:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:32:46+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:32:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:32:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:32:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:32:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:32:52+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:32:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:32:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:03+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:03+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:12+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:12+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:32+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:33+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:39+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:39+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:33:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:33:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:33:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:33:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:33:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:33:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:33:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:34:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:34:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:34:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:34:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:34:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:34:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:34:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:34:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:34:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:34:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:34:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:34:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:34:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:34:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:34:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:34:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:34:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:34:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:34:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:34:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:34:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:34:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:34:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:34:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:34:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:34:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:34:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:34:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:34:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:34:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:34:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:34:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:34:44+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:34:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:34:44+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:34:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:34:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:34:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:34:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:34:55+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:34:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:34:55+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:12+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:12+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:26+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:26+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:51+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:51+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:35:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:35:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:35:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:35:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:35:56+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:35:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:35:56+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:05+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:10+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:10+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:20+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:20+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:20+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:20+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:30+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:30+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:45+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:45+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:36:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:36:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:36:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:36:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:36:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:36:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:36:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:37:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:37:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:37:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:37:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:37:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:37:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-11 15:37:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-11 15:37:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-11 15:37:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-11 15:37:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-11 15:37:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-11 15:37:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-11 15:37:06+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-11 15:37:06+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [7], 'predicted_cpl_pages': [6], 'predicted_ccf_pages': [9], 'filtered_cbs_pages': [7], 'filtered_cpl_pages': [6], 'filtered_ccf_pages': [9], 'month': 'december'}
2023-04-11 15:37:06+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-11 15:37:06+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-11 15:37:06+0530 - sLogger - DEBUG - process file completed
2023-04-11 15:37:06+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-11 15:37:06+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-11 15:37:06+0530 - sLogger - DEBUG - TE process file started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-11 15:42:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-11 15:42:04+0530 - sLogger - DEBUG - process_main_pages started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-11 15:42:04+0530 - sLogger - DEBUG - start_refactoring started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-11 15:42:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-11 15:42:04+0530 - sLogger - DEBUG - start_refactoring started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-11 15:42:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-11 15:42:04+0530 - sLogger - DEBUG - start_refactoring started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-11 15:42:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-11 15:42:04+0530 - sLogger - DEBUG - set_section_details started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Income tax receivable from related parties | [('current assets', 30), ('current liabilities', 30), ('equity and liabilities', 28), ('noncurrent liabilities', 26), ('equity liabilities', 26), ('noncurrent assets', 22), ('liabilities', 21), ('assets', 16), ('equity', 15)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD current liabilities | score 48
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent assets | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD noncurrent liabilities | score 41
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current assets | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD non current liabilities | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity and liabilities | score 40
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Income tax receivable from related parties | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Investment in joint ventures | [('noncurrent assets', 44), ('current assets', 38), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 16)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent assets | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD noncurrent liabilities | score 40
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current assets | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD non current liabilities | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity and liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Investment in joint ventures | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Financial assets | [('noncurrent assets', 69), ('assets', 56), ('current assets', 54), ('equity and liabilities', 47), ('equity liabilities', 46), ('current liabilities', 44), ('noncurrent liabilities', 37), ('liabilities', 32), ('equity', 32)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current assets | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD noncurrent liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current assets | score 59
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD non current liabilities | score 41
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity and liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Financial liabilities | [('equity liabilities', 67), ('equity and liabilities', 65), ('liabilities', 60), ('current liabilities', 57), ('noncurrent liabilities', 43), ('noncurrent assets', 22), ('equity', 20), ('current assets', 15), ('assets', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current assets | score 29
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD current liabilities | score 69
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent assets | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current assets | score 36
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD non current liabilities | score 68
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity and liabilities | score 70
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Financial liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equity and liabilities', 48), ('equity liabilities', 41), ('current liabilities', 40), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-11 15:42:04+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-11 15:42:04+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-11 15:42:04+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-11 15:42:04+0530 - sLogger - DEBUG - set_section_details started
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from government grants | operating profit before working capital changes
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts of income tax (from related party) | operating profit before working capital changes
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | changes in operating assets and liabilities
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of principal portion lease liabilities | operating profit before changes in assets and liabilities
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from bank borrowings | operating profit before working capital changes
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of bank borrowings | operating profit before working capital changes
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease )increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of the year | changes in operating assets and liabilities
2023-04-11 15:42:04+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-11 15:42:06+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 28259.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [28259.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('cash and bank balances', 36), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 28), ('other bank balances', 27), ('bank balances other than above', 25)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('bank balances other than above', 40), ('bank balances other than cash and cash equivalents', 39), ('cash and cash equivalents', 33), ('cash and bank balances', 30), ('other bank balances', 28)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19589.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['6'], 'line_item_value': [19589.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 26953.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [26953.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 27198.0, 'line_item_label': ['Inventories'], 'note_numbers': ['8'], 'line_item_value': [27198.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 30081.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 29753.0, 328.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other financial assets', 81), ('other current financial assets', 65), ('other assets', 50), ('other current assets', 44)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35), ('other financial assets', 31), ('other current financial assets', 30), ('other assets', 23)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Financial assets', 'Other current assets'], 'note_numbers': [nan, '9', '10'], 'line_item_value': [0.0, 0.0, 489.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = current foreign exchange derivatives at fair value , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 33), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = current electricity derivatives at fair value , res_fuzz_match = [('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('prepaid expenditure', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = non-current electricity derivatives at fair value , res_fuzz_match = [('prepaid expense', 36), ('prepaid expenditure', 33), ('prepayments', 33), ('prepaid', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other current assets', 44)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('other current assets', 35)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 100, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 328.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 328.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('current assets', 54)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('current assets', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 489.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 489.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:06+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-11 15:42:06+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-11 15:42:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:06+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:06+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1476.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1476.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('righttouse', 33), ('capital work in progress', 32), ('tangible', 29), ('work in progress', 23), ('rightofuse', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('capital work in progress', 23), ('work in progress', 23), ('rightofuse', 22), ('righttouse', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 1007.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['13'], 'line_item_value': [1007.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('tangible assets', 31)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('tangible assets', 69)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 42)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('intangible assets under development', 77), ('intangible', 67), ('intangible under development', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('donations', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('donations', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 54535.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [54535.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 53)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 47672.0, 'line_item_label': ['Investment in joint ventures'], 'note_numbers': ['11'], 'line_item_value': [47672.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 12309.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [12309.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('deferred tax assets', 29), ('deferred tax', 21), ('deferred charges', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('deferred tax assets', 57), ('deferred tax', 27), ('deferred charges', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 24223.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [24223.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('other assets', 47)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('other assets', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 678.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 678.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('non-current assets total', 37)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('non-current assets total', 56)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 15], 'score': 84, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 4471.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [4000.0, 471.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('lease liabilities', 64), ('borrowings', 10), ('short term debt', 7), ('short-term debt', 7), ('shortterm debt', 7), ('shortterm borrowings', 7)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 24], 'score': 100, 'value': 412.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['16', '13'], 'line_item_value': [0.0, 412.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current liabilities', 47), ('current maturities', 22), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('current maturities', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('current maturities', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('current maturities', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('current maturities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('current maturities', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('current maturities', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [25662.0], 'label': [' Current'], 'year': [], 'colname_found': ['rows']}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 26101.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [26101.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('accounts payable', 43), ('small enterprises', 34), ('trade payable', 31), ('micro enterprises and small enterprises', 29), ('micro enterprises', 28), ('other than micro and small enterprises', 28), ('other trade payables', 25), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 90, 'value': 22315.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': [nan], 'line_item_value': [22315.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other financial liabilities', 82), ('other current financial liabilities', 67), ('other current liabilities', 47), ('other liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19, 23], 'score': 82, 'value': 2935.0, 'line_item_label': ['Current liabilities', 'Financial liabilities'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 2935.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = electricity derivatives at fair value through oci , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = lease liabilities , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = current , res_fuzz_match = [('accrued expenses', 43), ('interest accrued', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = non-current , res_fuzz_match = [('accrued expenses', 29), ('interest accrued', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('other current liabilities', 47)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial liabilities , res_fuzz_match = [('current liabilities', 57)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 1042.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [1042.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 641.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [641.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 23326.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [23326.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 18466.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['5'], 'line_item_value': [18466.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('equity share capital', 59), ('perpetual equity instrument', 39), ('share capital', 37), ('common stock', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('common stock', 33), ('equity share capital', 27), ('share capital', 26), ('perpetual equity instrument', 16)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('additional paid in capital', 38), ('additional paid up capital', 38), ('other reserves', 36), ('reserves and surplus', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other equity', 43), ('reserves surplus', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other equity', 25), ('reserves surplus', 16)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('non controlling interest', 50), ('minority interest', 40), ('noncontrolling interest', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('noncontrolling interest', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 3731.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [3731.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = investment in joint ventures , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 91, 'value': 17531.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17531.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 12, 13, 14, 15, 16, 24, 25, 26, 27, 28, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [90430.0, 376.0, -149.0, 74.0, 90731.0, 314181.0, 5232.0, -1122.0, -74.0, 318217.0, 1628.0, 34643.0, 0.0, 0.0, 36271.0, 2538.0, 2538.0, 0.0, 0.0, -65.0, -65.0, 0.0, 0.0, 2473.0, 2473.0, 795.0, 0.0, 0.0, 0.0, 795.0, 1678.0, 0.0, 408777.0, 40251.0, -1336.0, 0.0, 447692.0], 'label': ['Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020', 'Cost At 1 January 2020', 'Construction in progress $000', 'Cost Additions', 'Construction in progress $000', 'Cost Disposals', 'Construction in progress $000', 'Cost Transfer', 'Construction in progress $000', 'Cost At 31 December 2020', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Construction in progress $000', 'Cost At 1 January 2020', 'Cost Additions', 'Cost Disposals', 'Cost Transfer', 'Cost At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = freehold land and buildings $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = plant and equipment $000 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = asset retirement obligation** $000 , res_fuzz_match = [('depreciatio', 55), ('net value', 38), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = construction in progress $000 , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 1 january 2020 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 25), ('depreciatio', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost transfer , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('depreciatio', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = cost at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 27), ('net value', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at1 january 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment depreciation charge for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment impairment* , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment at 31 december 2020 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2020 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = net book value at 31 december 2019 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 41), ('depreciatio', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_rows = total $000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 9, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [90235.0, 57.0, 351.0, -154.0, 90489.0, 312388.0, 827.0, 4618.0, -1182.0, 316651.0, 1628.0, 0.0, 20598.0, 0.0, 22226.0, 795.0, 0.0, 0.0, 0.0, 795.0, 405046.0, 884.0, 25567.0, -1336.0, 430161.0], 'label': ['Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020', 'Accumulated depreciation and impairment At1 January 2020', 'Accumulated depreciation and impairment Depreciation charge for the year', 'Accumulated depreciation and impairment Impairment*', 'Accumulated depreciation and impairment Disposals', 'Accumulated depreciation and impairment At 31 December 2020'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19529.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [11999.0, 7530.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = financial assets , res_fuzz_match = [('unbilled', 40), ('receivable', 33), ('account receivables', 31), ('government subsidies receivable', 31), ('trade receivables', 26), ('billed', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax receivable from related parties , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 71), ('government subsidies receivable', 43), ('billed', 25), ('unbilled', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 19942.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivable from related parties'], 'note_numbers': ['7', '20'], 'line_item_value': [13624.0, 6318.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 229785.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [229785.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('sale of products', 36), ('revenue from operations', 31), ('transmission and distribution business', 26), ('from trading business', 24), ('net sales', 22), ('revenue from contracts with customers', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('revenue from operations', 42), ('revenue from contracts with customers', 38), ('transmission and distribution business', 38), ('net sales', 32), ('from trading business', 31), ('sale of products', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('sale of products', 35), ('transmission and distribution business', 31), ('revenue from operations', 30), ('from trading business', 23), ('net sales', 21), ('revenue from contracts with customers', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 39), ('revenue from contracts with customers', 38), ('sale of products', 31), ('net sales', 29), ('transmission and distribution business', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('from trading business', 50), ('net sales', 40), ('revenue from contracts with customers', 33), ('transmission and distribution business', 31), ('revenue from operations', 24), ('sale of products', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 38), ('sale of products', 34), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('net sales', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 214911.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [214911.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -249283.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-249283.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('cost of sales', 42), ('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 23), ('expense', 12), ('expenditure', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 25), ('expense', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('total expenditure', 37), ('cost of sales', 30), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('expense', 24)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('total expenses', 38), ('cost of sales', 34), ('total expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 23), ('expenditure', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), ('cost of sales', 31), ('expenditure', 30), ('purchase of stock-in-trade', 28), ('expense', 26)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('cost of sales', 38), ('total expenditure', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 22), ('expense', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -227382.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-227382.0]}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other expenses', 27), (' depreciation', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other expenses', 34), (' depreciation', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other expenses', 41), (' depreciation', 17)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('rent', 14)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('rent', 20)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('rent', 13)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('rent', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('rent', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('rent', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:07+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other operating ', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other operating ', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other operating ', 38)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other operating ', 33)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('other operating ', 30)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other operating ', 59)]
2023-04-11 15:42:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-11 15:42:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:07+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-11 15:42:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 10314.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [10144.0, 170.0]}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('other income', 38), ('finance income', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('other income', 52), ('finance income', 44)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance income', 55), ('other income', 50)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('other income', 50), ('finance income', 21)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 8], 'score': 100, 'value': 13691.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': ['4.3', '4.4'], 'line_item_value': [13631.0, 60.0]}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = government grants , res_fuzz_match = [('interest', 38)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = insurance proceeds , res_fuzz_match = [('interest', 38)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = foreign exchange gain , res_fuzz_match = [('interest', 38)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = bank interest , res_fuzz_match = [('interest', 100)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [60.0, 170.0], 'label': [' Bank interest', ' Bank interest'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -618.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-618.0]}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('finance cost', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('finance cost', 26)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('finance cost', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('finance cost', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('finance cost', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -539.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.5'], 'line_item_value': [-539.0]}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = interest expenses , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('cash credit', 27), ('loan', 25), ('bonds', 25), ('borrowings', 17), ('bank facilities', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = discount unwind on the provision for asset retirement obligation , res_fuzz_match = [('cash credit', 55), ('loan', 50), ('bonds', 50), ('debenture', 38), ('interest', 38), ('borrowings', 33), ('bank facilities', 30), ('debt', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [-203.0, -303.0], 'label': [' Interest expenses', ' Interest expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior year', 30), ('provision for taxation previous year', 26), ('deferred tax', 21), ('current tax', 19), ('earlier year', 18), ('amount transferred to retained earnings', 16), ('minimum alternate tax credit entitlement', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior year', 38), ('earlier year', 35), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25), ('deferred tax', 20), ('minimum alternate tax credit entitlement', 19), ('current tax', 18)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('provision for taxation previous year', 53), ('deferred tax', 48), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year', 30), ('earlier year', 28)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('provision for taxation previous year', 57), ('earlier year', 55), ('prior year', 52), ('deferred tax', 38), ('amount transferred to retained earnings', 32), ('current tax', 29), ('minimum alternate tax credit entitlement', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('prior period', 36), ('exceptional', 0)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('prior period', 21), ('exceptional', 19)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('prior period', 35), ('exceptional', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('prior period', 38), ('exceptional', 23)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('prior period', 34), ('exceptional', 26)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('prior period', 28), ('exceptional', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-11 15:42:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-11 15:42:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-11 15:42:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-11 15:42:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = gross loss , res_fuzz_match = [('NULL', 14)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = share of gain/(loss) of joint venture, net of tax , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = impairment loss , res_fuzz_match = [('NULL', 13)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss before income tax , res_fuzz_match = [('NULL', 17)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = income tax benefit , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - txt_particular = loss for the year , res_fuzz_match = [('NULL', 10)]
2023-04-11 15:42:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:05:22+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-13 11:05:22+0530 - sLogger - DEBUG - {'fileid': 'fc8731d6-f35a-420a-a05f-95f06a73e547', 'filename': 'Tadano Oceania Pty Ltd FY2022 Signed Financial Statements.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Tadano Oceania Pty Ltd FY2022 Signed Financial Statements.pdf'}
2023-04-13 11:05:22+0530 - sLogger - DEBUG - save file completed
2023-04-13 11:05:22+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-13 11:05:22+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-13 11:05:22+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-13 11:05:22+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-13 11:05:22+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-13 11:05:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:05:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:05:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:05:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:05:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:05:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:05:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:05:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:05:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:05:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:05:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:05:32+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:05:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:32+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:05:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:05:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:05:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:05:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:05:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:05:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:05:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:05:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:05:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:05:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:05:40+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:05:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:40+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:05:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:05:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:05:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:05:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:05:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:05:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:05:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:05:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:05:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:05:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:05:56+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:05:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:05:56+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:01+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:01+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:01+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:01+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:06+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:10+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:10+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:19+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:19+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:06:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:06:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:06:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:06:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:06:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:06:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:06:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:07:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:07:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:07:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:07:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:07:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:07:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:07:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:07:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:07:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:07:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:07:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:07:14+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:07:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:07:14+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:07:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:07:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:07:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:07:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:07:29+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:07:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:07:29+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:07:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:07:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:07:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:07:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:07:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:07:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:07:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:07:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:07:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:07:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:07:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:07:51+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:07:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:07:51+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:07:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:07:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:07:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:07:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:07:56+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:07:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:07:56+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:12+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:12+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:30+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:30+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:37+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 11:08:37+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 11:08:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 11:08:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 11:08:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 11:08:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 11:08:42+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 11:08:42+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-13 11:08:42+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [9], 'predicted_cpl_pages': [8], 'predicted_ccf_pages': [11], 'filtered_cbs_pages': [9], 'filtered_cpl_pages': [8], 'filtered_ccf_pages': [11], 'month': 'december'}
2023-04-13 11:08:42+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-13 11:08:42+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-13 11:08:42+0530 - sLogger - DEBUG - process file completed
2023-04-13 11:08:42+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-13 11:08:42+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-13 11:08:42+0530 - sLogger - DEBUG - TE process file started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-13 11:12:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-13 11:12:05+0530 - sLogger - DEBUG - process_main_pages started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 11:12:05+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 11:12:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 11:12:05+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 11:12:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 11:12:05+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 11:12:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-13 11:12:05+0530 - sLogger - DEBUG - set_section_details started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Other financial assets | [('noncurrent assets', 62), ('current assets', 50), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('current liabilities', 36), ('noncurrent liabilities', 36), ('liabilities', 24), ('equity', 24)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD current liabilities | score 42
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrent assets | score 53
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD noncurrent liabilities | score 41
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD non current assets | score 50
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD non current liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD equity and liabilities | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 12)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Right of use assets and other intangibles | [('noncurrent assets', 44), ('equity and liabilities', 41), ('current assets', 40), ('assets', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity', 21), ('liabilities', 16)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD current liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD noncurrent assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD noncurrent liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD non current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD non current liabilities | score 41
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD equity and liabilities | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Right of use assets and other intangibles | MATCH WORD equity | score 45
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Goodwill | [('liabilities', 31), ('equity and liabilities', 25), ('equity liabilities', 20), ('current liabilities', 19), ('noncurrent liabilities', 19), ('equity', 15), ('noncurrent assets', 10), ('assets', 0), ('current assets', 0)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD current assets | score 0
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD current liabilities | score 22
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD noncurrent assets | score 11
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD noncurrent liabilities | score 22
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD non current assets | score 11
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD non current liabilities | score 22
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD equity and liabilities | score 22
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Goodwill | MATCH WORD equity | score 14
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Bank Loan | [('equity and liabilities', 38), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27), ('assets', 14), ('equity', 0)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD current assets | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD current liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD noncurrent assets | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD noncurrent liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD non current assets | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD non current liabilities | score 40
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD equity and liabilities | score 50
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Bank Loan | MATCH WORD equity | score 0
2023-04-13 11:12:05+0530 - sLogger - DEBUG - deposits | [('equity', 46), ('assets', 33), ('equity and liabilities', 33), ('equity liabilities', 30), ('current assets', 20), ('noncurrent assets', 20), ('current liabilities', 19), ('liabilities', 15), ('noncurrent liabilities', 10)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD current assets | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD current liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD noncurrent assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD noncurrent liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD non current assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD non current liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD equity and liabilities | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text deposits | MATCH WORD equity | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Other financial liabilities | [('equity liabilities', 55), ('equity and liabilities', 54), ('noncurrent liabilities', 53), ('current liabilities', 47), ('liabilities', 46), ('noncurrent assets', 24), ('current assets', 18), ('assets', 16), ('equity', 15)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD current assets | score 31
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD current liabilities | score 69
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD noncurrent assets | score 32
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD non current assets | score 31
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD non current liabilities | score 62
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD equity and liabilities | score 65
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other financial liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Deferred revenue | [('current assets', 40), ('noncurrent assets', 32), ('current liabilities', 31), ('equity and liabilities', 28), ('noncurrent liabilities', 23), ('equity', 22), ('equity liabilities', 16), ('assets', 12), ('liabilities', 0)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD current assets | score 33
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD current liabilities | score 29
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD noncurrent assets | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD noncurrent liabilities | score 26
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD non current assets | score 33
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD non current liabilities | score 29
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD equity and liabilities | score 25
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Deferred revenue | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Current tax | [('current liabilities', 72), ('current assets', 58), ('noncurrent assets', 33), ('equity liabilities', 33), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('assets', 25), ('equity', 24), ('liabilities', 12)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD current assets | score 74
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD current liabilities | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD noncurrent assets | score 74
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD noncurrent liabilities | score 74
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD non current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD non current liabilities | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD equity and liabilities | score 32
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Current tax | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Other liabilities | [('noncurrent liabilities', 69), ('liabilities', 67), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('noncurrent assets', 32), ('assets', 24), ('current assets', 24), ('equity', 22)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD current assets | score 32
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD non current assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Other liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('current liabilities', 48), ('current assets', 42), ('assets', 38), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-04-13 11:12:05+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-13 11:12:05+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-13 11:12:05+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-13 11:12:05+0530 - sLogger - DEBUG - set_section_details started
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest and other costs of finance paid | operating profit before changes in assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes refunded/(paid) | adiustments for movements in working capital
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/provided by operating activities | operating profit before working capital changes
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for investments* | adiustments for movements in working capital
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/provided by investing activities | adjustments for increase decrease in operating liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to reduce lease liabilities | changes in operating assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Loan borrowed/(repaid) | operating profit before working capital changes
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividend paid | changes in assets liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/provided by financing activities | adjustments for increase decrease in operating liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease/increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- in Effects of exchange rate changes on the balance of cash held foreign currencies | operating profit before changes in assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the year | changes in operating assets and liabilities
2023-04-13 11:12:05+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the year | changes in operating assets and liabilities
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 11:12:07+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 11:12:07+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other bank balances', 56), ('bank balances other than above', 48), ('bank balances other than cash and cash equivalents', 41), ('cash and bank balances', 36), ('cash and cash equivalents', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 27230401.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['11'], 'line_item_value': [27230401.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other bank balances', 56), ('bank balances other than above', 48), ('bank balances other than cash and cash equivalents', 41), ('cash and bank balances', 36), ('cash and cash equivalents', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 17825903.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['11'], 'line_item_value': [17825903.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 51132749.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [51132749.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('inventories', 44)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 54388398.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [54388398.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other financial assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other current assets', 68)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets', 100), ('other current assets', 73), ('other financial assets', 73), ('other current financial assets', 58)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 5], 'score': 100, 'value': 1164948.0, 'line_item_label': ['Current assets', 'Other financial assets', 'Other assets'], 'note_numbers': [nan, '13', '14'], 'line_item_value': [0.0, 435033.0, 729915.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other financial assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other current assets', 68)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets', 100), ('other current assets', 73), ('other financial assets', 73), ('other current financial assets', 58)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 5], 'score': 100, 'value': 1684817.0, 'line_item_label': ['Current assets', 'Other financial assets', 'Other assets'], 'note_numbers': [nan, '13', '14'], 'line_item_value': [0.0, 1016248.0, 668569.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = bank guarantee , res_fuzz_match = [('prepayments', 33), ('prepaid expenditure', 31), ('prepaid', 29), ('prepaid expense', 25)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = foreign exchange forward contracts , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 44), ('prepaid', 43), ('prepayments', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = bank guarantee , res_fuzz_match = [('prepayments', 33), ('prepaid expenditure', 31), ('prepaid', 29), ('prepaid expense', 25)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = foreign exchange forward contracts , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 44), ('prepaid', 43), ('prepayments', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = other prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid', 77), ('prepaid expense', 42), ('prepaid expenditure', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = other prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid', 77), ('prepaid expense', 42), ('prepaid expenditure', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense', 0), ('prepaid expenditure', 0), ('prepayments', 0), ('prepaid', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [668569.0, 729915.0], 'label': [' Other prepayments', ' Other prepayments'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other current assets', 68)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other current assets', 73)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('other current assets', 68)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other current assets', 73)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('current assets', 50)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('current assets', 58)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('current assets', 50)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('current assets', 58)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('plant property equipment', 35), ('property plant equipment', 35)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 91, 'value': 3228260.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['15'], 'line_item_value': [3228260.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('plant property equipment', 35), ('property plant equipment', 35)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 91, 'value': 3871674.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['15'], 'line_item_value': [3871674.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('plant property equipment', 35), ('property plant equipment', 35)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 91, 'value': 3228260.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['15'], 'line_item_value': [3228260.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('plant property equipment', 35), ('property plant equipment', 35)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 91, 'value': 3871674.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['15'], 'line_item_value': [3871674.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('right of use', 100), ('right to use', 100), ('rightofuse', 78), ('righttouse', 78), ('tangible', 57), ('capital work-in-progress', 35), ('capital workinprogress', 35), ('capital work in progress', 32), ('work in progress', 31)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 29), ('capital workinprogress', 29), ('rightofuse', 29), ('righttouse', 29), ('capital work in progress', 14), ('right of use', 14), ('right to use', 14), ('work in progress', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 5884364.0, 'line_item_label': ['Right of use assets and other intangibles'], 'note_numbers': ['16'], 'line_item_value': [5884364.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('right of use', 100), ('right to use', 100), ('rightofuse', 78), ('righttouse', 78), ('tangible', 57), ('capital work-in-progress', 35), ('capital workinprogress', 35), ('capital work in progress', 32), ('work in progress', 31)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 29), ('capital workinprogress', 29), ('rightofuse', 29), ('righttouse', 29), ('capital work in progress', 14), ('right of use', 14), ('right to use', 14), ('work in progress', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 9533623.0, 'line_item_label': ['Right of use assets and other intangibles'], 'note_numbers': ['16'], 'line_item_value': [9533623.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('tangible assets', 49)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('tangible assets', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('tangible assets', 49)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('tangible assets', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('goodwill', 100), ('goodwill on consolidatio', 100)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 5570624.0, 'line_item_label': ['Goodwill'], 'note_numbers': ['17'], 'line_item_value': [5570624.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 14)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('goodwill', 100), ('goodwill on consolidatio', 100)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 5570624.0, 'line_item_label': ['Goodwill'], 'note_numbers': ['17'], 'line_item_value': [5570624.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 54), ('intangible under development', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('intangible under development', 29), ('intangible assets under development', 29), ('intangible', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 5884364.0, 'line_item_label': ['Right of use assets and other intangibles'], 'note_numbers': ['16'], 'line_item_value': [5884364.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 54), ('intangible under development', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('intangible under development', 29), ('intangible assets under development', 29), ('intangible', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 9533623.0, 'line_item_label': ['Right of use assets and other intangibles'], 'note_numbers': ['16'], 'line_item_value': [9533623.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('donations', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('donations', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('donations', 22)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('donations', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 48)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('joint ventures and associates', 29), ('investment', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 48)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('joint ventures and associates', 29), ('investment', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 29), ('deferred charges', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('deferred charges', 22), ('deferred tax', 12), ('deferred tax assets', 9)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 827995.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['10'], 'line_item_value': [827995.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 29), ('deferred charges', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('deferred charges', 22), ('deferred tax', 12), ('deferred tax assets', 9)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 1053623.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['10'], 'line_item_value': [1053623.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('other assets', 51)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('other assets', 11)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('other assets', 51)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('other assets', 11)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('non-current assets total', 43)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('non-current assets total', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('non-current assets total', 43)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('non-current assets total', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('lease liabilities', 40), ('borrowings', 27), ('short-term debt', 26), ('shortterm debt', 26), ('short term debt', 25), ('shortterm borrowings', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('short-term debt', 38), ('shortterm debt', 38), ('short term debt', 36), ('lease liabilities', 33), ('shortterm borrowings', 26), ('borrowings', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 35), ('shortterm debt', 35), ('short term debt', 34), ('shortterm borrowings', 33), ('borrowings', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('short-term debt', 38), ('shortterm debt', 38), ('short term debt', 37), ('shortterm borrowings', 29), ('borrowings', 22), ('lease liabilities', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('short-term debt', 32), ('shortterm debt', 32), ('short term debt', 31), ('shortterm borrowings', 30), ('lease liabilities', 27), ('borrowings', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 46), ('shortterm debt', 46), ('short term debt', 44), ('shortterm borrowings', 43), ('borrowings', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': 874163.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['21'], 'line_item_value': [874163.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('lease liabilities', 40), ('borrowings', 27), ('short-term debt', 26), ('shortterm debt', 26), ('short term debt', 25), ('shortterm borrowings', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('short-term debt', 38), ('shortterm debt', 38), ('short term debt', 36), ('lease liabilities', 33), ('shortterm borrowings', 26), ('borrowings', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 35), ('shortterm debt', 35), ('short term debt', 34), ('shortterm borrowings', 33), ('borrowings', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('short-term debt', 38), ('shortterm debt', 38), ('short term debt', 37), ('shortterm borrowings', 29), ('borrowings', 22), ('lease liabilities', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('short-term debt', 32), ('shortterm debt', 32), ('short term debt', 31), ('shortterm borrowings', 30), ('lease liabilities', 27), ('borrowings', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 46), ('shortterm debt', 46), ('short term debt', 44), ('shortterm borrowings', 43), ('borrowings', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': 1486742.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['21'], 'line_item_value': [1486742.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('other financial liabilities', 34), ('other current liabilities', 28), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other current liabilities', 22), ('current maturities', 20), ('other financial liabilities', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('other financial liabilities', 100), ('other current liabilities', 70), ('current maturities of long-term debt', 34), ('current maturities of longterm debt', 34), ('current maturities', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('current maturities', 40), ('current maturities of long-term debt', 31), ('current maturities of longterm debt', 31), ('other current liabilities', 25), ('other financial liabilities', 19)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('current maturities', 75), ('other current liabilities', 58), ('current maturities of long-term debt', 53), ('current maturities of longterm debt', 53), ('other financial liabilities', 19)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other financial liabilities', 75), ('other current liabilities', 75), ('current maturities of long-term debt', 31), ('current maturities of longterm debt', 31), ('current maturities', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 19], 'score': 100, 'value': 150004.0, 'line_item_label': ['Current liabilities', 'Other financial liabilities'], 'note_numbers': [nan, '22'], 'line_item_value': [0.0, 150004.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('other financial liabilities', 34), ('other current liabilities', 28), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other current liabilities', 22), ('current maturities', 20), ('other financial liabilities', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('other financial liabilities', 100), ('other current liabilities', 70), ('current maturities of long-term debt', 34), ('current maturities of longterm debt', 34), ('current maturities', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('current maturities', 40), ('current maturities of long-term debt', 31), ('current maturities of longterm debt', 31), ('other current liabilities', 25), ('other financial liabilities', 19)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('current maturities', 75), ('other current liabilities', 58), ('current maturities of long-term debt', 53), ('current maturities of longterm debt', 53), ('other financial liabilities', 19)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other financial liabilities', 75), ('other current liabilities', 75), ('current maturities of long-term debt', 31), ('current maturities of longterm debt', 31), ('current maturities', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 19], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities', 'Other financial liabilities'], 'note_numbers': [nan, '22'], 'line_item_value': [0.0, 0.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['current maturities'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = foreign exchange forward contracts , res_fuzz_match = [('current maturities', 38)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = foreign exchange forward contracts , res_fuzz_match = [('current maturities', 38)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current maturities', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('note payable(debt)', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('note payable(debt)', 26)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('note payable(debt)', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('note payable(debt)', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('note payable(debt)', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('note payable(debt)', 24)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('note payable(debt)', 26)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('note payable(debt)', 33)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('note payable(debt)', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('note payable(debt)', 30)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('note payable(debt)', 29)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('accounts payable', 35), ('trade payable', 29), ('other than micro and small enterprises', 27), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('micro enterprises and small enterprises', 23), ('other trade payables', 22), ('outstanding dues of micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 16)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('micro enterprises', 36), ('other than micro and small enterprises', 28), ('small enterprises', 27), ('outstanding dues of creditors other than', 26), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('outstanding dues of micro enterprises and small enterprises', 22), ('trade payable', 21), ('accounts payable', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('trade payable', 44), ('other than micro and small enterprises', 39), ('other trade payables', 37), ('accounts payable', 35), ('outstanding dues of creditors other than', 35), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('total outstanding due of other creditors other than micro and small', 30), ('micro enterprises and small enterprises', 29), ('micro enterprises', 29), ('small enterprises', 29), ('outstanding dues of micro enterprises and small enterprises', 26)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('micro enterprises', 37), ('other trade payables', 33), ('other than micro and small enterprises', 33), ('micro enterprises and small enterprises', 30), ('small enterprises', 30), ('outstanding dues of micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than', 27), ('trade payable', 25), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20), ('accounts payable', 8)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 38), ('outstanding dues of creditors other than', 37), ('outstanding dues of micro enterprises and small enterprises', 31), ('micro enterprises', 31), ('micro enterprises and small enterprises', 30), ('other trade payables', 28), ('total outstanding due of other creditors other than micro and small', 28), ('trade payable', 26), ('other than micro and small enterprises', 26), ('outstanding dues of creditors other than micro enterprises and small enterprises', 25)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade payable', 50), ('other trade payables', 40), ('other than micro and small enterprises', 33), ('outstanding dues of creditors other than', 32), ('micro enterprises and small enterprises', 26), ('accounts payable', 23), ('micro enterprises', 22), ('small enterprises', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 55367844.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [55367844.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('accounts payable', 35), ('trade payable', 29), ('other than micro and small enterprises', 27), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('micro enterprises and small enterprises', 23), ('other trade payables', 22), ('outstanding dues of micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 16)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('micro enterprises', 36), ('other than micro and small enterprises', 28), ('small enterprises', 27), ('outstanding dues of creditors other than', 26), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('outstanding dues of micro enterprises and small enterprises', 22), ('trade payable', 21), ('accounts payable', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('trade payable', 44), ('other than micro and small enterprises', 39), ('other trade payables', 37), ('accounts payable', 35), ('outstanding dues of creditors other than', 35), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('total outstanding due of other creditors other than micro and small', 30), ('micro enterprises and small enterprises', 29), ('micro enterprises', 29), ('small enterprises', 29), ('outstanding dues of micro enterprises and small enterprises', 26)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('micro enterprises', 37), ('other trade payables', 33), ('other than micro and small enterprises', 33), ('micro enterprises and small enterprises', 30), ('small enterprises', 30), ('outstanding dues of micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than', 27), ('trade payable', 25), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20), ('accounts payable', 8)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 38), ('outstanding dues of creditors other than', 37), ('outstanding dues of micro enterprises and small enterprises', 31), ('micro enterprises', 31), ('micro enterprises and small enterprises', 30), ('other trade payables', 28), ('total outstanding due of other creditors other than micro and small', 28), ('trade payable', 26), ('other than micro and small enterprises', 26), ('outstanding dues of creditors other than micro enterprises and small enterprises', 25)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('trade payable', 50), ('other trade payables', 40), ('other than micro and small enterprises', 33), ('outstanding dues of creditors other than', 32), ('micro enterprises and small enterprises', 26), ('accounts payable', 23), ('micro enterprises', 22), ('small enterprises', 22), ('total outstanding due of other creditors other than micro and small', 22), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 20)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 42899673.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [42899673.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current liabilities', 28), ('other current financial liabilities', 27)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('other current liabilities', 22), ('other liabilities', 21), ('other current financial liabilities', 17), ('other financial liabilities', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('other financial liabilities', 100), ('other current financial liabilities', 83), ('other liabilities', 75), ('other current liabilities', 70)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('other current liabilities', 25), ('other current financial liabilities', 20), ('other financial liabilities', 19), ('other liabilities', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('other current liabilities', 58), ('other current financial liabilities', 46), ('other financial liabilities', 19), ('other liabilities', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other liabilities', 100), ('other current liabilities', 75), ('other financial liabilities', 75), ('other current financial liabilities', 60)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 19, 23], 'score': 100, 'value': 804937.0, 'line_item_label': ['Current liabilities', 'Other financial liabilities', 'Other liabilities'], 'note_numbers': [nan, '22', '25'], 'line_item_value': [0.0, 150004.0, 654933.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current liabilities', 28), ('other current financial liabilities', 27)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('other current liabilities', 22), ('other liabilities', 21), ('other current financial liabilities', 17), ('other financial liabilities', 15)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('other financial liabilities', 100), ('other current financial liabilities', 83), ('other liabilities', 75), ('other current liabilities', 70)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('other current liabilities', 25), ('other current financial liabilities', 20), ('other financial liabilities', 19), ('other liabilities', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('other current liabilities', 58), ('other current financial liabilities', 46), ('other financial liabilities', 19), ('other liabilities', 17)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other liabilities', 100), ('other current liabilities', 75), ('other financial liabilities', 75), ('other current financial liabilities', 60)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 19, 23], 'score': 100, 'value': 514168.0, 'line_item_label': ['Current liabilities', 'Other financial liabilities', 'Other liabilities'], 'note_numbers': [nan, '22', '25'], 'line_item_value': [0.0, 0.0, 514168.0]}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = foreign exchange forward contracts , res_fuzz_match = [('accrued expenses', 42), ('interest accrued', 36)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows = foreign exchange forward contracts , res_fuzz_match = [('accrued expenses', 42), ('interest accrued', 36)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses', 0), ('interest accrued', 0)]
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:07+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:07+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 11:12:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('tax', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('tax', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 1613535.0, 'line_item_label': ['Current tax'], 'note_numbers': ['10'], 'line_item_value': [1613535.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('tax', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('tax', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 2155291.0, 'line_item_label': ['Current tax'], 'note_numbers': ['10'], 'line_item_value': [2155291.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('other current liabilities', 28)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('other current liabilities', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('other current liabilities', 70)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('other current liabilities', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('other current liabilities', 58)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other current liabilities', 75)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('other current liabilities', 28)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('other current liabilities', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('other current liabilities', 70)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('other current liabilities', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('other current liabilities', 58)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('other current liabilities', 75)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('current liabilities', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('current liabilities', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('current liabilities', 47)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('current liabilities', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('current liabilities', 72)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('current liabilities', 46)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = bank loan , res_fuzz_match = [('current liabilities', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deposits , res_fuzz_match = [('current liabilities', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial liabilities , res_fuzz_match = [('current liabilities', 47)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred revenue , res_fuzz_match = [('current liabilities', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current tax , res_fuzz_match = [('current liabilities', 72)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other liabilities , res_fuzz_match = [('current liabilities', 46)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 4371653.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['21'], 'line_item_value': [4371653.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 7666439.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['21'], 'line_item_value': [7666439.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('perpetual equity instrument', 39), ('share capital', 36), ('equity share capital', 34), ('common stock', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('perpetual equity instrument', 39), ('share capital', 36), ('equity share capital', 34), ('common stock', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('additional paid in capital', 37), ('additional paid up capital', 37), ('reserves and surplus', 36), ('other equity', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('additional paid in capital', 37), ('additional paid up capital', 37), ('reserves and surplus', 36), ('other equity', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('reserves surplus', 33), ('other equity', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('reserves surplus', 33), ('other equity', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest', 48), ('non controlling interest', 39), ('noncontrolling interest', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest', 48), ('non controlling interest', 39), ('noncontrolling interest', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('plant property equipment', 35), ('property plant equipment', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 91, 'value': 3228260.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['15'], 'line_item_value': [3228260.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = right of use assets and other intangibles , res_fuzz_match = [('plant property equipment', 35), ('property plant equipment', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = goodwill , res_fuzz_match = [('plant property equipment', 15), ('property plant equipment', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 91, 'value': 3871674.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['15'], 'line_item_value': [3871674.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('account receivables', 30), ('billed', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('government subsidies receivable', 55), ('account receivables', 36), ('trade receivables', 36), ('receivable', 33), ('billed', 0), ('unbilled', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 33385710.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['12'], 'line_item_value': [33385710.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other financial assets , res_fuzz_match = [('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('account receivables', 30), ('billed', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('government subsidies receivable', 55), ('account receivables', 36), ('trade receivables', 36), ('receivable', 33), ('billed', 0), ('unbilled', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 25122689.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['12'], 'line_item_value': [25122689.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), ('revenue from contracts with customers', 36), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('transmission and distribution business', 25), ('net sales', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('net sales', 38), ('from trading business', 35), ('revenue from operations', 25), ('revenue from contracts with customers', 25), ('transmission and distribution business', 22), ('sale of products', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('transmission and distribution business', 43), ('net sales', 37), ('from trading business', 35), ('sale of products', 32), ('revenue from contracts with customers', 31), ('revenue from operations', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), ('sale of products', 36), ('revenue from contracts with customers', 33), ('revenue from operations', 31), ('from trading business', 26), ('net sales', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('net sales', 38), ('from trading business', 36), ('revenue from operations', 34), ('sale of products', 32), ('revenue from contracts with customers', 31), ('transmission and distribution business', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('revenue from operations', 29), ('sale of products', 25), ('revenue from contracts with customers', 23), ('from trading business', 22), ('net sales', 20), ('transmission and distribution business', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('net sales', 42), ('sale of products', 35), ('revenue from operations', 30), ('from trading business', 23), ('transmission and distribution business', 21), ('revenue from contracts with customers', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('net sales', 48), ('revenue from operations', 43), ('revenue from contracts with customers', 38), ('from trading business', 33), ('sale of products', 30), ('transmission and distribution business', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('transmission and distribution business', 41), ('net sales', 34), ('revenue from contracts with customers', 34), ('from trading business', 33), ('sale of products', 30), ('revenue from operations', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('transmission and distribution business', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('revenue from operations', 25), ('net sales', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('transmission and distribution business', 30), ('net sales', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('revenue from contracts with customers', 41), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('from trading business', 40), ('revenue from contracts with customers', 39), ('sale of products', 38), ('revenue from operations', 31), ('transmission and distribution business', 29), ('net sales', 28)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), ('revenue from contracts with customers', 36), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('transmission and distribution business', 25), ('net sales', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('net sales', 38), ('from trading business', 35), ('revenue from operations', 25), ('revenue from contracts with customers', 25), ('transmission and distribution business', 22), ('sale of products', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('transmission and distribution business', 43), ('net sales', 37), ('from trading business', 35), ('sale of products', 32), ('revenue from contracts with customers', 31), ('revenue from operations', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), ('sale of products', 36), ('revenue from contracts with customers', 33), ('revenue from operations', 31), ('from trading business', 26), ('net sales', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('net sales', 38), ('from trading business', 36), ('revenue from operations', 34), ('sale of products', 32), ('revenue from contracts with customers', 31), ('transmission and distribution business', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('revenue from operations', 29), ('sale of products', 25), ('revenue from contracts with customers', 23), ('from trading business', 22), ('net sales', 20), ('transmission and distribution business', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('net sales', 42), ('sale of products', 35), ('revenue from operations', 30), ('from trading business', 23), ('transmission and distribution business', 21), ('revenue from contracts with customers', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('net sales', 48), ('revenue from operations', 43), ('revenue from contracts with customers', 38), ('from trading business', 33), ('sale of products', 30), ('transmission and distribution business', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('transmission and distribution business', 41), ('net sales', 34), ('revenue from contracts with customers', 34), ('from trading business', 33), ('sale of products', 30), ('revenue from operations', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('transmission and distribution business', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('revenue from operations', 25), ('net sales', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('transmission and distribution business', 30), ('net sales', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('revenue from contracts with customers', 41), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('from trading business', 40), ('revenue from contracts with customers', 39), ('sale of products', 38), ('revenue from operations', 31), ('transmission and distribution business', 29), ('net sales', 28)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('cost of sales', 48), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 33), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 27), ('expense', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('expense', 43), ('total expenses', 40), ('expenditure', 33), ('total expenditure', 33), ('purchase of stock-in-trade', 30), ('cost of sales', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('expenditure', 34), ('total expenditure', 34), ('purchase of stock-in-trade', 32), ('total expenses', 32), ('cost of sales', 29), ('expense', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('purchase of stock-in-trade', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), ('cost of sales', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('expense', 71), ('total expenses', 70), ('total expenditure', 52), ('expenditure', 48), ('cost of sales', 40), ('purchase of stock-in-trade', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('total expenditure', 43), ('total expenses', 36), ('cost of sales', 33), ('expenditure', 26), ('purchase of stock-in-trade', 25), ('expense', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('total expenses', 55), ('expenditure', 52), ('total expenditure', 49), ('expense', 44), ('purchase of stock-in-trade', 35), ('cost of sales', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), ('total expenses', 36), ('purchase of stock-in-trade', 34), ('cost of sales', 32), ('expenditure', 31), ('expense', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('total expenditure', 34), ('purchase of stock-in-trade', 32), ('cost of sales', 29), ('expenditure', 28), ('total expenses', 26), ('expense', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), ('total expenses', 41), ('expenditure', 38), ('total expenditure', 37), ('cost of sales', 32), ('expense', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), ('purchase of stock-in-trade', 37), ('cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 9], 'score': 100, 'value': -149586733.0, 'line_item_label': ['Cost of sales', 'expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-136649031.0, -12937702.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('cost of sales', 48), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 33), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 27), ('expense', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('expense', 43), ('total expenses', 40), ('expenditure', 33), ('total expenditure', 33), ('purchase of stock-in-trade', 30), ('cost of sales', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('expenditure', 34), ('total expenditure', 34), ('purchase of stock-in-trade', 32), ('total expenses', 32), ('cost of sales', 29), ('expense', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('purchase of stock-in-trade', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), ('cost of sales', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('expense', 71), ('total expenses', 70), ('total expenditure', 52), ('expenditure', 48), ('cost of sales', 40), ('purchase of stock-in-trade', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('total expenditure', 43), ('total expenses', 36), ('cost of sales', 33), ('expenditure', 26), ('purchase of stock-in-trade', 25), ('expense', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('total expenses', 55), ('expenditure', 52), ('total expenditure', 49), ('expense', 44), ('purchase of stock-in-trade', 35), ('cost of sales', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), ('total expenses', 36), ('purchase of stock-in-trade', 34), ('cost of sales', 32), ('expenditure', 31), ('expense', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('total expenditure', 34), ('purchase of stock-in-trade', 32), ('cost of sales', 29), ('expenditure', 28), ('total expenses', 26), ('expense', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), ('total expenses', 41), ('expenditure', 38), ('total expenditure', 37), ('cost of sales', 32), ('expense', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), ('purchase of stock-in-trade', 37), ('cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 9], 'score': 100, 'value': -128535133.0, 'line_item_label': ['Cost of sales', 'expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-114042844.0, -14492289.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other expenses', 42), (' depreciation', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('other expenses', 40), (' depreciation', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('other expenses', 52), (' depreciation', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other expenses', 64), (' depreciation', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 42)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('other expenses', 70), (' depreciation', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('other expenses', 30), (' depreciation', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('other expenses', 73), (' depreciation', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' depreciation', 35), ('other expenses', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other expenses', 59), (' depreciation', 28)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other expenses', 43), (' depreciation', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other expenses', 42), (' depreciation', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('other expenses', 40), (' depreciation', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('other expenses', 52), (' depreciation', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other expenses', 64), (' depreciation', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 42)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('other expenses', 70), (' depreciation', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('other expenses', 30), (' depreciation', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('other expenses', 73), (' depreciation', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' depreciation', 35), ('other expenses', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other expenses', 59), (' depreciation', 28)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other expenses', 43), (' depreciation', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('rent', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('rent', 50)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('rent', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('rent', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('rent', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('rent', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('rent', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('rent', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('rent', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('rent', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('rent', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('rent', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('rent', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('rent', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('rent', 50)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('rent', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('rent', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('rent', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('rent', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('rent', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('rent', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('rent', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('rent', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('rent', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('rent', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('rent', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other operating ', 45)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('other operating ', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('other operating ', 48)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating ', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating ', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('other operating ', 38)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('other operating ', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('other operating ', 52)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating ', 38)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating ', 55)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other operating ', 56)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating ', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other operating ', 45)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('other operating ', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('other operating ', 48)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating ', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating ', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('other operating ', 38)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('other operating ', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('other operating ', 52)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating ', 38)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating ', 55)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other operating ', 56)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating ', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), ('finance income', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('other income', 53), ('finance income', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('other income', 60), ('finance income', 39)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other income', 22), ('finance income', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other income', 25), ('finance income', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('other income', 27), ('finance income', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('other income', 38), ('finance income', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('other income', 50), ('finance income', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other income', 30), ('finance income', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), ('finance income', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), ('finance income', 41)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other income', 43), ('finance income', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), ('finance income', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('other income', 53), ('finance income', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('other income', 60), ('finance income', 39)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other income', 22), ('finance income', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other income', 25), ('finance income', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('other income', 27), ('finance income', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('other income', 38), ('finance income', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('other income', 50), ('finance income', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other income', 30), ('finance income', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), ('finance income', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), ('finance income', 41)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other income', 43), ('finance income', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('finance cost', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('finance cost', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('finance cost', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('finance cost', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('finance cost', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('finance cost', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('finance cost', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('finance cost', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('finance cost', 37)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 37)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('finance cost', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('finance cost', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -131545.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-131545.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('finance cost', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('finance cost', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('finance cost', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('finance cost', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('finance cost', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('finance cost', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('finance cost', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('finance cost', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('finance cost', 37)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 37)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('finance cost', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('finance cost', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -424637.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-424637.0]}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('NULL', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('NULL', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('NULL', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('NULL', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year', 36), ('deferred tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('earlier year', 40), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('prior year', 33), ('current tax', 32), ('minimum alternate tax credit entitlement', 25), ('provision for taxation previous year', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 38), ('prior year', 34), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 21), ('current tax', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('minimum alternate tax credit entitlement', 29), ('earlier year', 29), ('provision for taxation previous year', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('earlier year', 40), ('deferred tax', 36), ('prior year', 35), ('current tax', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), ('prior year', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('earlier year', 35), ('amount transferred to retained earnings', 32), ('deferred tax', 30), ('prior year', 29), ('current tax', 27), ('provision for taxation previous year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('prior year', 39), ('provision for taxation previous year', 36), ('earlier year', 36), ('amount transferred to retained earnings', 33), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('deferred tax', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('amount transferred to retained earnings', 54), ('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 36), ('earlier year', 36), ('deferred tax', 33), ('prior year', 32), ('current tax', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), ('provision for taxation previous year', 53), ('current tax', 52), ('minimum alternate tax credit entitlement', 42), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior year', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), ('earlier year', 29), ('deferred tax', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('provision for taxation previous year', 47), ('prior year', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), ('current tax', 35), ('deferred tax', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year', 36), ('deferred tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('earlier year', 40), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('prior year', 33), ('current tax', 32), ('minimum alternate tax credit entitlement', 25), ('provision for taxation previous year', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 38), ('prior year', 34), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 21), ('current tax', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('amount transferred to retained earnings', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('minimum alternate tax credit entitlement', 29), ('earlier year', 29), ('provision for taxation previous year', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('earlier year', 40), ('deferred tax', 36), ('prior year', 35), ('current tax', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), ('prior year', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('earlier year', 35), ('amount transferred to retained earnings', 32), ('deferred tax', 30), ('prior year', 29), ('current tax', 27), ('provision for taxation previous year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('prior year', 39), ('provision for taxation previous year', 36), ('earlier year', 36), ('amount transferred to retained earnings', 33), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('deferred tax', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('amount transferred to retained earnings', 54), ('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 36), ('earlier year', 36), ('deferred tax', 33), ('prior year', 32), ('current tax', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), ('provision for taxation previous year', 53), ('current tax', 52), ('minimum alternate tax credit entitlement', 42), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior year', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), ('earlier year', 29), ('deferred tax', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('provision for taxation previous year', 47), ('prior year', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), ('current tax', 35), ('deferred tax', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('share of', 31), ('share in', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('share of', 31), ('share in', 31)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('exceptional', 43), ('prior period', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('prior period', 32), ('exceptional', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('prior period', 29), ('exceptional', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional', 42), ('prior period', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('exceptional', 35), ('prior period', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('prior period', 36), ('exceptional', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('prior period', 36), ('exceptional', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('prior period', 34), ('exceptional', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('exceptional', 43), ('prior period', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('prior period', 32), ('exceptional', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('prior period', 29), ('exceptional', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional', 42), ('prior period', 32)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 33)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('exceptional', 35), ('prior period', 26)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('prior period', 36), ('exceptional', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('prior period', 36), ('exceptional', 30)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('prior period', 34), ('exceptional', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 11:12:08+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 11:12:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('NULL', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 11:12:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 11:12:08+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = interest , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other gains and losses , res_fuzz_match = [('NULL', 17)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = selling expenses , res_fuzz_match = [('NULL', 40)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = loss on revaluation of inventories , res_fuzz_match = [('NULL', 24)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other expenses and gains , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-04-13 11:12:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:29:27+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-13 12:29:27+0530 - sLogger - DEBUG - {'fileid': '7802f8b3-897d-432d-9a7f-94491408b59b', 'filename': '20230331 2022 General Purpose Financial Statements signed.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/20230331 2022 General Purpose Financial Statements signed.pdf'}
2023-04-13 12:29:27+0530 - sLogger - DEBUG - save file completed
2023-04-13 12:29:27+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-13 12:29:27+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-13 12:29:27+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-13 12:29:27+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-13 12:29:27+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-13 12:29:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:29:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:29:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:29:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:29:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:29:30+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:29:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:30+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:29:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:29:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:29:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:29:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:29:33+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:29:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:33+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:29:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:29:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:29:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:29:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:29:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:29:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:29:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:29:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:29:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:29:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:29:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:29:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:29:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:29:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:29:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:29:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:29:51+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:29:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:51+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:29:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:29:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:29:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:29:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:29:57+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:29:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:29:57+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:03+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:03+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:08+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:08+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:12+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:12+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:16+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:16+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:29+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:29+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:44+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:44+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:30:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:30:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:30:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:30:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:30:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:30:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:30:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:01+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:01+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:01+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:01+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:10+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:10+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:26+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:26+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:51+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:31:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:31:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:31:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:31:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:31:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:31:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:31:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:06+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:29+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:29+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:45+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:45+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:49+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:49+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:32:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:32:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:32:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:32:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:32:59+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:32:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:32:59+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:33:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:08+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:33:08+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:14+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:33:14+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:33:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:28+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:33:28+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 12:33:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 12:33:38+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 12:33:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 12:33:38+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 12:33:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 12:33:38+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 12:33:38+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-13 12:33:38+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [10], 'predicted_cpl_pages': [9], 'predicted_ccf_pages': [12], 'filtered_cbs_pages': [10], 'filtered_cpl_pages': [9], 'filtered_ccf_pages': [12], 'month': 'december'}
2023-04-13 12:33:38+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-13 12:33:38+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-13 12:33:38+0530 - sLogger - DEBUG - process file completed
2023-04-13 12:33:38+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-13 12:33:38+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-13 12:33:38+0530 - sLogger - DEBUG - TE process file started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-13 12:37:43+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-13 12:37:43+0530 - sLogger - DEBUG - process_main_pages started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 12:37:43+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 12:37:43+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 12:37:43+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 12:37:43+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 12:37:43+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 12:37:43+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-13 12:37:43+0530 - sLogger - DEBUG - set_section_details started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - ASSETS | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity and liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - CURRENT ASSETS | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD current assets | score 100
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD current liabilities | score 67
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD noncurrent assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD noncurrent liabilities | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD non current assets | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD non current liabilities | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD equity and liabilities | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT ASSETS | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Current tax receivables | [('current liabilities', 62), ('current assets', 45), ('equity and liabilities', 34), ('equity liabilities', 32), ('noncurrent assets', 26), ('equity', 25), ('noncurrent liabilities', 25), ('assets', 17), ('liabilities', 17)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD current assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD current liabilities | score 67
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD noncurrent assets | score 55
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD noncurrent liabilities | score 62
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD non current assets | score 56
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD non current liabilities | score 62
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD equity and liabilities | score 49
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax receivables | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Prepayments | [('current liabilities', 30), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Other investments | [('noncurrent assets', 40), ('current assets', 32), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('assets', 24), ('equity liabilities', 24), ('current liabilities', 23), ('equity', 22), ('liabilities', 11)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current assets | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current liabilities | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent assets | score 41
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current assets | score 40
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current liabilities | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity and liabilities | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL CURRENT ASSETS | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD current assets | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD current liabilities | score 56
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD noncurrent assets | score 81
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD noncurrent liabilities | score 57
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD non current assets | score 84
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD non current liabilities | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD equity and liabilities | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT ASSETS | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - NONCURRENT ASSETS | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD current assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD current liabilities | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD noncurrent assets | score 100
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD noncurrent liabilities | score 72
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD non current assets | score 97
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD non current liabilities | score 70
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD equity and liabilities | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT ASSETS | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Right ofuse assets | [('current assets', 62), ('noncurrent assets', 62), ('assets', 48), ('equity', 36), ('noncurrent liabilities', 33), ('equity and liabilities', 30), ('equity liabilities', 28), ('current liabilities', 27), ('liabilities', 18)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD current assets | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD current liabilities | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD noncurrent assets | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD noncurrent liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD non current assets | score 56
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD non current liabilities | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD equity and liabilities | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Right ofuse assets | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('equity', 33), ('noncurrent liabilities', 31), ('liabilities', 22)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL NONCURRENT ASSETS | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD current assets | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD current liabilities | score 52
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD noncurrent assets | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD noncurrent liabilities | score 62
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD non current assets | score 83
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD non current liabilities | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD equity and liabilities | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT ASSETS | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL ASSETS | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD current assets | score 64
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD current liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrent assets | score 64
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD non current assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD non current liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD equity and liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL ASSETS | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - LIABILITIES | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current assets | score 24
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current liabilities | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent assets | score 24
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent liabilities | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current assets | score 24
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current liabilities | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity and liabilities | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - CURRENT LIABILITIES | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD current assets | score 67
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD current liabilities | score 100
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD noncurrent assets | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD noncurrent liabilities | score 93
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD non current assets | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD non current liabilities | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD equity and liabilities | score 69
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text CURRENT LIABILITIES | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('equity liabilities', 58), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Lease liability | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD current assets | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD current liabilities | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD noncurrent assets | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD noncurrent liabilities | score 54
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD non current assets | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD non current liabilities | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD equity and liabilities | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD equity | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Other current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('noncurrent liabilities', 53), ('equity and liabilities', 49), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 30), ('equity', 23), ('assets', 16)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD current assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD current liabilities | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD non current assets | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD non current liabilities | score 88
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL CURRENT LIABILITIES | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD current assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD current liabilities | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD noncurrent assets | score 57
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD noncurrent liabilities | score 85
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD non current assets | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD non current liabilities | score 88
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD equity and liabilities | score 64
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL CURRENT LIABILITIES | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - NONCURRENT LIABILITIES | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD current assets | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD current liabilities | score 93
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD noncurrent assets | score 72
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD noncurrent liabilities | score 100
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD non current assets | score 70
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD non current liabilities | score 98
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD equity and liabilities | score 65
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NONCURRENT LIABILITIES | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Lease liability | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD current assets | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD current liabilities | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD noncurrent assets | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD noncurrent liabilities | score 54
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD non current assets | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD non current liabilities | score 60
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD equity and liabilities | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Lease liability | MATCH WORD equity | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Deferred tax liability | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD current assets | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD current liabilities | score 63
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrent assets | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD noncurrent liabilities | score 59
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD non current assets | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD non current liabilities | score 58
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD equity and liabilities | score 55
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Deferred tax liability | MATCH WORD equity | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL NONCURRENT LIABILITIES | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD current assets | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD current liabilities | score 81
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD noncurrent assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD noncurrent liabilities | score 95
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD non current assets | score 61
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD non current liabilities | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD equity and liabilities | score 64
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL NONCURRENT LIABILITIES | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL LIABILITIES | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD current assets | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD current liabilities | score 75
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD noncurrent assets | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD noncurrent liabilities | score 75
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD non current assets | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD non current liabilities | score 75
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD equity and liabilities | score 75
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL LIABILITIES | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - NET ASSETS | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD current assets | score 75
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD current liabilities | score 41
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrent assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD noncurrent liabilities | score 44
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD non current assets | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD non current liabilities | score 42
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD equity and liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text NET ASSETS | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - EQUITY | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current assets | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent assets | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current assets | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity and liabilities | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity | score 100
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-13 12:37:43+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('current liabilities', 48), ('current assets', 42), ('assets', 38), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-04-13 12:37:43+0530 - sLogger - DEBUG - TOTAL EQUITY | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD current assets | score 31
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD current liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrent assets | score 34
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD noncurrent liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD non current assets | score 33
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD non current liabilities | score 38
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD equity and liabilities | score 86
2023-04-13 12:37:43+0530 - sLogger - DEBUG - particular_text TOTAL EQUITY | MATCH WORD equity | score 90
2023-04-13 12:37:43+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-13 12:37:43+0530 - sLogger - DEBUG - set_section_details started
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- GST refund | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes paid | changes in working capital
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to related party supplier | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in investing activities | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for purchase of property, plant & equipment | operating profit before working capital changes
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of property, plant & equipment | operating profit before changes in assets and liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from maturities of deposits with fixed maturity dates | operating profit before changes in assets and liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for deposits with fixed maturity dates | adiustments for movements in working capital
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows used in financing activities | operating cash flow before working capital changes
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from borrowings | operating cash flow before working capital changes
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of lease liability | changes in assets liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of dividends | movements in working capital
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in financing activities | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the year | changes in operating assets and liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effects of exchange rate changes on the balance of | changes in operating assets and liabilities
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- cash held in foreign currencies | adjustments for increase decrease in operating assets
2023-04-13 12:37:43+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the year | changes in operating assets and liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 12:37:45+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 12:37:45+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 12:37:45+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 26), ('other bank balances', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other bank balances', 48), ('bank balances other than above', 36), ('cash and cash equivalents', 30), ('bank balances other than cash and cash equivalents', 29), ('cash and bank balances', 19)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 38371500.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['19'], 'line_item_value': [38371500.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 26), ('other bank balances', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other bank balances', 48), ('bank balances other than above', 36), ('cash and cash equivalents', 30), ('bank balances other than cash and cash equivalents', 29), ('cash and bank balances', 19)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 47888561.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['19'], 'line_item_value': [47888561.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('inventories', 56)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 5244865.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [5244865.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('inventories', 56)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 6229038.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [6229038.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('other current financial assets', 53), ('other current assets', 49), ('other financial assets', 38), ('other assets', 28)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('other current financial assets', 18), ('other current assets', 16), ('other financial assets', 16), ('other assets', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70), ('other current assets', 52), ('other financial assets', 52), ('other current financial assets', 41)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['CURRENT ASSETS'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('other current financial assets', 53), ('other current assets', 49), ('other financial assets', 38), ('other assets', 28)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('other current financial assets', 18), ('other current assets', 16), ('other financial assets', 16), ('other assets', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70), ('other current assets', 52), ('other financial assets', 52), ('other current financial assets', 41)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['CURRENT ASSETS'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('other current assets', 49)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('other current assets', 16)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other current assets', 52)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['CURRENT ASSETS'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('other current assets', 49)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('other current assets', 16)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other current assets', 52)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['CURRENT ASSETS'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('current assets', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('current assets', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('current assets', 32)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['CURRENT ASSETS'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('current assets', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('current assets', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('current assets', 32)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['CURRENT ASSETS'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 77944930.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['11'], 'line_item_value': [77944930.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 83893305.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['11'], 'line_item_value': [83893305.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('net value', 25), ('cost', 0), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [40, 41, 42, 43, 44, 45, 46, 47, 48, 49], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [15625586.0, 1626478.0, 0.0, -91683.0, 17160381.0, 0.0, 0.0, 0.0, 0.0, 17160381.0], 'label': ['Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 77944930.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['11'], 'line_item_value': [77944930.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 83893305.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['11'], 'line_item_value': [83893305.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('rightofuse', 89), ('righttouse', 78), ('right of use', 78), ('right to use', 78), ('capital work in progress', 44), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('work in progress', 31), ('tangible', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 25), ('work in progress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 89, 'value': 9562117.0, 'line_item_label': ['Right- of-use assets'], 'note_numbers': ['21'], 'line_item_value': [9562117.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('rightofuse', 89), ('righttouse', 78), ('right of use', 78), ('right to use', 78), ('capital work in progress', 44), ('capital work-in-progress', 31), ('capital workinprogress', 31), ('work in progress', 31), ('tangible', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 25), ('work in progress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 89, 'value': 7678852.0, 'line_item_label': ['Right- of-use assets'], 'note_numbers': ['21'], 'line_item_value': [7678852.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('tangible assets', 48)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 80, 'value': 48644405.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['12'], 'line_item_value': [48644405.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('tangible assets', 48)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 80, 'value': 44593458.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['12'], 'line_item_value': [44593458.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('intangible assets under development', 44), ('intangible', 33), ('intangible under development', 31)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 48644405.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['12'], 'line_item_value': [48644405.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('intangible assets under development', 44), ('intangible', 33), ('intangible under development', 31)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 44593458.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['12'], 'line_item_value': [44593458.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('donations', 19)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('donations', 19)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('joint ventures and associates', 38), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('joint ventures and associates', 38), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('deferred tax assets', 58), ('deferred tax', 32), ('deferred charges', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('deferred tax assets', 58), ('deferred tax', 32), ('deferred charges', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('other assets', 59)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('other assets', 59)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('non-current assets total', 57)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 13], 'score': 84, 'value': 210115.0, 'line_item_label': ['NON-CURRENT ASSETS', 'Other non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 210115.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('non-current assets total', 57)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 13], 'score': 84, 'value': 268487.0, 'line_item_label': ['NON-CURRENT ASSETS', 'Other non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 268487.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('shortterm borrowings', 26), ('lease liabilities', 23), ('borrowings', 19)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('lease liabilities', 55), ('short term debt', 30), ('short-term debt', 25), ('shortterm debt', 25), ('shortterm borrowings', 24), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 41), ('shortterm debt', 41), ('short term debt', 40), ('shortterm borrowings', 39), ('borrowings', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [22, 23], 'score': 100, 'value': 17226057.0, 'line_item_label': ['Borrowings', 'Lease liability'], 'note_numbers': ['14', '22'], 'line_item_value': [14506615.0, 2719442.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('shortterm borrowings', 26), ('lease liabilities', 23), ('borrowings', 19)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('lease liabilities', 55), ('short term debt', 30), ('short-term debt', 25), ('shortterm debt', 25), ('shortterm borrowings', 24), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 41), ('shortterm debt', 41), ('short term debt', 40), ('shortterm borrowings', 39), ('borrowings', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [22, 23], 'score': 100, 'value': 17152202.0, 'line_item_label': ['Borrowings', 'Lease liability'], 'note_numbers': ['14', '22'], 'line_item_value': [15536531.0, 1615671.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), ('current maturities', 65), ('other financial liabilities', 53), ('current maturities of long-term debt', 53), ('current maturities of longterm debt', 53)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other financial liabilities', 70), ('current maturities', 67), ('current maturities of long-term debt', 60), ('current maturities of longterm debt', 60)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 100, 'value': 5582432.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 5334394.0, 248038.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), ('current maturities', 65), ('other financial liabilities', 53), ('current maturities of long-term debt', 53), ('current maturities of longterm debt', 53)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current maturities of long-term debt', 24), ('current maturities of longterm debt', 24), ('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other financial liabilities', 70), ('current maturities', 67), ('current maturities of long-term debt', 60), ('current maturities of longterm debt', 60)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 100, 'value': 39390069.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 39141813.0, 248256.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('note payable(debt)', 41)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('note payable(debt)', 41)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('accounts payable', 50), ('other trade payables', 44), ('trade payable', 40), ('outstanding dues of creditors other than', 40), ('other than micro and small enterprises', 37), ('small enterprises', 36), ('micro enterprises and small enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 33), ('outstanding dues of creditors other than micro enterprises and small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 31), ('micro enterprises', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('outstanding dues of creditors other than', 42), ('other than micro and small enterprises', 39), ('trade payable', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 34), ('micro enterprises', 34), ('small enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('total outstanding due of other creditors other than micro and small', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 8092154.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['16'], 'line_item_value': [8092154.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('accounts payable', 50), ('other trade payables', 44), ('trade payable', 40), ('outstanding dues of creditors other than', 40), ('other than micro and small enterprises', 37), ('small enterprises', 36), ('micro enterprises and small enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 33), ('outstanding dues of creditors other than micro enterprises and small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 31), ('micro enterprises', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('small enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('outstanding dues of creditors other than', 42), ('other than micro and small enterprises', 39), ('trade payable', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 34), ('micro enterprises', 34), ('small enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('total outstanding due of other creditors other than micro and small', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 12878066.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['16'], 'line_item_value': [12878066.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), ('other current financial liabilities', 70), ('other financial liabilities', 53), ('other liabilities', 53)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other current financial liabilities', 83), ('other liabilities', 75), ('other financial liabilities', 70)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 100, 'value': 5582432.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 5334394.0, 248038.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), ('other current financial liabilities', 70), ('other financial liabilities', 53), ('other liabilities', 53)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other current financial liabilities', 83), ('other liabilities', 75), ('other financial liabilities', 70)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 100, 'value': 39390069.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 39141813.0, 248256.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('tax', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 100, 'value': 5334394.0, 'line_item_label': ['Current tax liabilities'], 'note_numbers': ['7'], 'line_item_value': [5334394.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('tax', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [20], 'score': 100, 'value': 39141813.0, 'line_item_label': ['Current tax liabilities'], 'note_numbers': ['7'], 'line_item_value': [39141813.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other current liabilities', 52)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 100, 'value': 5582432.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 5334394.0, 248038.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other current liabilities', 52)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 100, 'value': 39390069.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 39141813.0, 248256.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current liabilities', 88)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('current liabilities', 64)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 82, 'value': 5582432.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 5334394.0, 248038.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current liabilities', 88)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('current liabilities', 64)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 20, 24], 'score': 82, 'value': 39390069.0, 'line_item_label': ['CURRENT LIABILITIES', 'Current tax liabilities', 'Other current liabilities'], 'note_numbers': [nan, '7', nan], 'line_item_value': [0.0, 39141813.0, 248256.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('long term debt', 24)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('long term debt', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('long term debt', 24)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('long term debt', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 48102669.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['14'], 'line_item_value': [48102669.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 45), ('longterm borrowings', 41), ('borrowings', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 36057231.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['14'], 'line_item_value': [36057231.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('(bond)', 13)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('(bond)', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('(bond)', 13)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('(bond)', 10)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:45+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 12:37:45+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('lease liabilities', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('lease liabilities', 59)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [31], 'score': 100, 'value': 6834009.0, 'line_item_label': ['Lease liability'], 'note_numbers': ['22'], 'line_item_value': [6834009.0]}
2023-04-13 12:37:45+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:45+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 23)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('lease liabilities', 100)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('lease liabilities', 59)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 12:37:45+0530 - sLogger - DEBUG - best_match = {'data_index': [31], 'score': 100, 'value': 6315662.0, 'line_item_label': ['Lease liability'], 'note_numbers': ['22'], 'line_item_value': [6315662.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': 4312428.0, 'line_item_label': ['Deferred tax liability'], 'note_numbers': ['7'], 'line_item_value': [4312428.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': 4492250.0, 'line_item_label': ['Deferred tax liability'], 'note_numbers': ['7'], 'line_item_value': [4492250.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('minority interest', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('minority interest', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('minority interest', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('minority interest', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('long term liabilities', 44)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('long term liabilities', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = lease liability , res_fuzz_match = [('long term liabilities', 44)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = deferred tax liability , res_fuzz_match = [('long term liabilities', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('perpetual equity instrument', 39), ('share capital', 36), ('equity share capital', 34), ('common stock', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('perpetual equity instrument', 39), ('share capital', 36), ('equity share capital', 34), ('common stock', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('additional paid in capital', 37), ('additional paid up capital', 37), ('reserves and surplus', 36), ('other equity', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('additional paid in capital', 37), ('additional paid up capital', 37), ('reserves and surplus', 36), ('other equity', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('reserves surplus', 33), ('other equity', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('reserves surplus', 33), ('other equity', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest', 48), ('non controlling interest', 39), ('noncontrolling interest', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest', 48), ('non controlling interest', 39), ('noncontrolling interest', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 77944930.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['11'], 'line_item_value': [77944930.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = right- of-use assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 83893305.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['11'], 'line_item_value': [83893305.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [40, 41, 42, 43, 44, 45, 46, 47, 48, 49], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [15625586.0, 1626478.0, 0.0, -91683.0, 17160381.0, 0.0, 0.0, 0.0, 0.0, 17160381.0], 'label': ['Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs', 'Capitalised pre stripping costs'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = land , res_fuzz_match = [('accumulated depreciation', 50), ('depreciatio', 25), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = mine infrastructure , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = plant & equipment , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = assets under construction , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = capitalised pre stripping costs , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 45), ('net value', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = other assets , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 53996342 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 100871 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 231019 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 54328232 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (17,549,117) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (2,553,872) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = (20,102,989) , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = 34225243 , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 56), ('unbilled', 40), ('billed', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('receivable', 36), ('account receivables', 33), ('trade receivables', 33), ('government subsidies receivable', 33), ('billed', 0), ('unbilled', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('receivable', 50), ('account receivables', 42), ('trade receivables', 42), ('government subsidies receivable', 42), ('billed', 25), ('unbilled', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 13983506.0, 'line_item_label': ['Trade and other receivables', 'Current tax receivables'], 'note_numbers': ['10', '7'], 'line_item_value': [13983506.0, 0.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = current tax receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 56), ('unbilled', 40), ('billed', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('receivable', 36), ('account receivables', 33), ('trade receivables', 33), ('government subsidies receivable', 33), ('billed', 0), ('unbilled', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('receivable', 50), ('account receivables', 42), ('trade receivables', 42), ('government subsidies receivable', 42), ('billed', 25), ('unbilled', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 23265701.0, 'line_item_label': ['Trade and other receivables', 'Current tax receivables'], 'note_numbers': ['10', '7'], 'line_item_value': [23265701.0, 0.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), ('revenue from contracts with customers', 36), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('net sales', 59), ('sale of products', 57), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('sale of products', 69), ('from trading business', 38), ('revenue from contracts with customers', 37), ('net sales', 32), ('transmission and distribution business', 31), ('revenue from operations', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('sale of products', 46), ('revenue from contracts with customers', 39), ('net sales', 36), ('transmission and distribution business', 29), ('from trading business', 28), ('revenue from operations', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('transmission and distribution business', 25), ('net sales', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('from trading business', 37), ('sale of products', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('transmission and distribution business', 53), ('sale of products', 36), ('revenue from contracts with customers', 34), ('revenue from operations', 32), ('net sales', 28), ('from trading business', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('revenue from contracts with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('revenue from contracts with customers', 34), ('from trading business', 33), ('revenue from operations', 32), ('transmission and distribution business', 28), ('net sales', 26), ('sale of products', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('net sales', 35), ('transmission and distribution business', 27), ('from trading business', 25), ('sale of products', 19), ('revenue from operations', 16), ('revenue from contracts with customers', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('revenue from contracts with customers', 36), ('transmission and distribution business', 35), ('net sales', 32), ('revenue from operations', 27), ('from trading business', 27), ('sale of products', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('from trading business', 43), ('revenue from operations', 42), ('revenue from contracts with customers', 41), ('transmission and distribution business', 36), ('sale of products', 35), ('net sales', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('transmission and distribution business', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('revenue from operations', 25), ('net sales', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 37), ('revenue from operations', 33), ('from trading business', 33), ('sale of products', 27), ('net sales', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('revenue from contracts with customers', 41), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('revenue from contracts with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 30), ('sale of products', 27), ('net sales', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('sale of products', 25), ('net sales', 17), ('transmission and distribution business', 12), ('revenue from contracts with customers', 11), ('from trading business', 11), ('revenue from operations', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('transmission and distribution business', 46), ('net sales', 36), ('sale of products', 31), ('revenue from contracts with customers', 31), ('revenue from operations', 28), ('from trading business', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('revenue from contracts with customers', 45), ('from trading business', 41), ('transmission and distribution business', 39), ('revenue from operations', 36), ('sale of products', 26), ('net sales', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('revenue from contracts with customers', 40), ('from trading business', 37), ('revenue from operations', 36), ('sale of products', 35), ('transmission and distribution business', 32), ('net sales', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('sale of products', 40), ('net sales', 38), ('from trading business', 36), ('revenue from operations', 35), ('revenue from contracts with customers', 32), ('transmission and distribution business', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), ('revenue from contracts with customers', 36), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('net sales', 59), ('sale of products', 57), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('sale of products', 69), ('from trading business', 38), ('revenue from contracts with customers', 37), ('net sales', 32), ('transmission and distribution business', 31), ('revenue from operations', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('sale of products', 46), ('revenue from contracts with customers', 39), ('net sales', 36), ('transmission and distribution business', 29), ('from trading business', 28), ('revenue from operations', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('transmission and distribution business', 25), ('net sales', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 37), ('net sales', 32), ('sale of products', 26), ('transmission and distribution business', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('from trading business', 37), ('sale of products', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('transmission and distribution business', 53), ('sale of products', 36), ('revenue from contracts with customers', 34), ('revenue from operations', 32), ('net sales', 28), ('from trading business', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('revenue from contracts with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('revenue from contracts with customers', 34), ('from trading business', 33), ('revenue from operations', 32), ('transmission and distribution business', 28), ('net sales', 26), ('sale of products', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('net sales', 35), ('transmission and distribution business', 27), ('from trading business', 25), ('sale of products', 19), ('revenue from operations', 16), ('revenue from contracts with customers', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('revenue from contracts with customers', 36), ('transmission and distribution business', 35), ('net sales', 32), ('revenue from operations', 27), ('from trading business', 27), ('sale of products', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('from trading business', 43), ('revenue from operations', 42), ('revenue from contracts with customers', 41), ('transmission and distribution business', 36), ('sale of products', 35), ('net sales', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('transmission and distribution business', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('revenue from operations', 25), ('net sales', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 37), ('revenue from operations', 33), ('from trading business', 33), ('sale of products', 27), ('net sales', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('revenue from contracts with customers', 41), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('revenue from contracts with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 30), ('sale of products', 27), ('net sales', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('sale of products', 25), ('net sales', 17), ('transmission and distribution business', 12), ('revenue from contracts with customers', 11), ('from trading business', 11), ('revenue from operations', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('transmission and distribution business', 46), ('net sales', 36), ('sale of products', 31), ('revenue from contracts with customers', 31), ('revenue from operations', 28), ('from trading business', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('revenue from contracts with customers', 45), ('from trading business', 41), ('transmission and distribution business', 39), ('revenue from operations', 36), ('sale of products', 26), ('net sales', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('revenue from contracts with customers', 40), ('from trading business', 37), ('revenue from operations', 36), ('sale of products', 35), ('transmission and distribution business', 32), ('net sales', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('sale of products', 40), ('net sales', 38), ('from trading business', 36), ('revenue from operations', 35), ('revenue from contracts with customers', 32), ('transmission and distribution business', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('cost of sales', 48), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('cost of sales', 78), ('purchase of stock-in-trade', 36), ('total expenses', 29), ('total expenditure', 24), ('expense', 13), ('expenditure', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('cost of sales', 54), ('purchase of stock-in-trade', 39), ('total expenditure', 36), ('total expenses', 34), ('expenditure', 22), ('expense', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('cost of sales', 61), ('purchase of stock-in-trade', 42), ('total expenses', 31), ('total expenditure', 27), ('expense', 10), ('expenditure', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 33), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 27), ('expense', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), ('cost of sales', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('total expenses', 48), ('expense', 44), ('total expenditure', 38), ('cost of sales', 33), ('expenditure', 32), ('purchase of stock-in-trade', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('purchase of stock-in-trade', 35), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('purchase of stock-in-trade', 41), ('expense', 38), ('total expenses', 37), ('expenditure', 32), ('total expenditure', 32), ('cost of sales', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('cost of sales', 33), ('total expenses', 29), ('expense', 27), ('total expenditure', 24), ('purchase of stock-in-trade', 21), ('expenditure', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('total expenditure', 36), ('total expenses', 34), ('purchase of stock-in-trade', 33), ('cost of sales', 32), ('expenditure', 31), ('expense', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 32), ('expenditure', 25), ('expense', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 45), ('expenditure', 37), ('purchase of stock-in-trade', 31), ('expense', 31), ('cost of sales', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), ('total expenses', 41), ('expenditure', 38), ('total expenditure', 37), ('cost of sales', 32), ('expense', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('total expenses', 27), ('cost of sales', 21), ('expenditure', 20), ('expense', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('cost of sales', 46), ('expense', 20), ('purchase of stock-in-trade', 17), ('total expenses', 12), ('total expenditure', 10), ('expenditure', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 31), ('cost of sales', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('total expenditure', 44), ('total expenses', 43), ('expenditure', 36), ('expense', 30), ('purchase of stock-in-trade', 26), ('cost of sales', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('total expenditure', 55), ('total expenses', 50), ('purchase of stock-in-trade', 43), ('cost of sales', 38), ('expenditure', 32), ('expense', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('total expenses', 47), ('cost of sales', 44), ('total expenditure', 41), ('purchase of stock-in-trade', 38), ('expenditure', 21), ('expense', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('cost of sales', 48), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('cost of sales', 78), ('purchase of stock-in-trade', 36), ('total expenses', 29), ('total expenditure', 24), ('expense', 13), ('expenditure', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('cost of sales', 54), ('purchase of stock-in-trade', 39), ('total expenditure', 36), ('total expenses', 34), ('expenditure', 22), ('expense', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('cost of sales', 61), ('purchase of stock-in-trade', 42), ('total expenses', 31), ('total expenditure', 27), ('expense', 10), ('expenditure', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 33), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 27), ('expense', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('purchase of stock-in-trade', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), ('cost of sales', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('total expenses', 48), ('expense', 44), ('total expenditure', 38), ('cost of sales', 33), ('expenditure', 32), ('purchase of stock-in-trade', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('purchase of stock-in-trade', 35), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('purchase of stock-in-trade', 41), ('expense', 38), ('total expenses', 37), ('expenditure', 32), ('total expenditure', 32), ('cost of sales', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('cost of sales', 33), ('total expenses', 29), ('expense', 27), ('total expenditure', 24), ('purchase of stock-in-trade', 21), ('expenditure', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('total expenditure', 36), ('total expenses', 34), ('purchase of stock-in-trade', 33), ('cost of sales', 32), ('expenditure', 31), ('expense', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 32), ('expenditure', 25), ('expense', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 45), ('expenditure', 37), ('purchase of stock-in-trade', 31), ('expense', 31), ('cost of sales', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), ('total expenses', 41), ('expenditure', 38), ('total expenditure', 37), ('cost of sales', 32), ('expense', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('total expenses', 27), ('cost of sales', 21), ('expenditure', 20), ('expense', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('cost of sales', 46), ('expense', 20), ('purchase of stock-in-trade', 17), ('total expenses', 12), ('total expenditure', 10), ('expenditure', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('expenditure', 33), ('purchase of stock-in-trade', 31), ('expense', 31), ('cost of sales', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('total expenditure', 44), ('total expenses', 43), ('expenditure', 36), ('expense', 30), ('purchase of stock-in-trade', 26), ('cost of sales', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('total expenditure', 55), ('total expenses', 50), ('purchase of stock-in-trade', 43), ('cost of sales', 38), ('expenditure', 32), ('expense', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('total expenses', 47), ('cost of sales', 44), ('total expenditure', 41), ('purchase of stock-in-trade', 38), ('expenditure', 21), ('expense', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other expenses', 42), (' depreciation', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('other expenses', 19), (' depreciation', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('other expenses', 28), (' depreciation', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('other expenses', 23), (' depreciation', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('other expenses', 48), (' depreciation', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other expenses', 24), (' depreciation', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other expenses', 22), (' depreciation', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('other expenses', 44), (' depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('other expenses', 34), (' depreciation', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('other expenses', 44), (' depreciation', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other expenses', 59), (' depreciation', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('other expenses', 27), (' depreciation', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('other expenses', 12), (' depreciation', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('other expenses', 43), (' depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('other expenses', 50), (' depreciation', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('other expenses', 40), (' depreciation', 16)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 0.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other expenses', 42), (' depreciation', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('other expenses', 19), (' depreciation', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('other expenses', 28), (' depreciation', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('other expenses', 23), (' depreciation', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('other expenses', 48), (' depreciation', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other expenses', 24), (' depreciation', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other expenses', 22), (' depreciation', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('other expenses', 44), (' depreciation', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('other expenses', 34), (' depreciation', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('other expenses', 44), (' depreciation', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other expenses', 59), (' depreciation', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('other expenses', 27), (' depreciation', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('other expenses', 12), (' depreciation', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('other expenses', 31), (' depreciation', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('other expenses', 43), (' depreciation', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('other expenses', 50), (' depreciation', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('other expenses', 40), (' depreciation', 16)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 0.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('rent', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('rent', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('rent', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('rent', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('rent', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('rent', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('rent', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('rent', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('rent', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('rent', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('rent', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('rent', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('rent', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('rent', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('rent', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('rent', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('rent', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('rent', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('rent', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('rent', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('rent', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('rent', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('rent', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('rent', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('rent', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('rent', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('rent', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('rent', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('rent', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('rent', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('rent', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('rent', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('rent', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('rent', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('rent', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('rent', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('rent', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('rent', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('rent', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('rent', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other operating ', 45)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('other operating ', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('other operating ', 37)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('other operating ', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('other operating ', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other operating ', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other operating ', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('other operating ', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('other operating ', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('other operating ', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other operating ', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('other operating ', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other operating ', 56)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('other operating ', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('other operating ', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('other operating ', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('other operating ', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('other operating ', 47)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('other operating ', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other operating ', 45)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('other operating ', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('other operating ', 37)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('other operating ', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('other operating ', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other operating ', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other operating ', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('other operating ', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('other operating ', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('other operating ', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other operating ', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('other operating ', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other operating ', 56)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('other operating ', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('other operating ', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('other operating ', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('other operating ', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('other operating ', 47)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('other operating ', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), ('finance income', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('other income', 36), ('finance income', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('other income', 40), ('finance income', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('other income', 25), ('finance income', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), ('finance income', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance income', 59), ('other income', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('finance income', 37), ('other income', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('other income', 40), ('finance income', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('finance income', 34), ('other income', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('other income', 36), ('finance income', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), ('finance income', 41)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('other income', 24), ('finance income', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('other income', 13), ('finance income', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('other income', 32), ('finance income', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('other income', 56), ('finance income', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('other income', 41), ('finance income', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 11], 'score': 100, 'value': 169352.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': [nan, nan], 'line_item_value': [143754.0, 25598.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), ('finance income', 33)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('other income', 36), ('finance income', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('other income', 40), ('finance income', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('other income', 25), ('finance income', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), ('finance income', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance income', 59), ('other income', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('finance income', 37), ('other income', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('other income', 40), ('finance income', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('finance income', 34), ('other income', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('other income', 36), ('finance income', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), ('finance income', 41)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('other income', 24), ('finance income', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('other income', 13), ('finance income', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('other income', 32), ('finance income', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('other income', 36), ('finance income', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('other income', 56), ('finance income', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('other income', 41), ('finance income', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 11], 'score': 100, 'value': 631105.0, 'line_item_label': ['Other income', 'Finance income'], 'note_numbers': [nan, nan], 'line_item_value': [152362.0, 478743.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('finance cost', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('finance cost', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('finance cost', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('finance cost', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('finance cost', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('finance cost', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance cost', 85)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('finance cost', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('finance cost', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('finance cost', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('finance cost', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 37)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('finance cost', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('finance cost', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('finance cost', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('finance cost', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('finance cost', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('finance cost', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('finance cost', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 85, 'value': -6118509.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': ['6', nan], 'line_item_value': [-3072053.0, -3046456.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('finance cost', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('finance cost', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('finance cost', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('finance cost', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('finance cost', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('finance cost', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance cost', 85)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('finance cost', 38)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('finance cost', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('finance cost', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('finance cost', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 37)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('finance cost', 32)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('finance cost', 42)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('finance cost', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('finance cost', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('finance cost', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('finance cost', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('finance cost', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('finance cost', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 85, 'value': -5420513.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': ['6', nan], 'line_item_value': [-2949628.0, -2470885.0]}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans (other than those from related parties) , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans interest on leases , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans other interest expense , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans taxation , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans (other than those from related parties) , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans interest on leases , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans other interest expense , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows = interest on bank overdrafts and loans taxation , res_fuzz_match = [('loan', 100), ('interest', 100), ('bank facilities', 50), ('bonds', 50), ('debenture', 38), ('cash credit', 36), ('borrowings', 33), ('debt', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [2211657.0, 197276.0, 540695.0, 2949628.0, 2022.0, 2601186.0, 102990.0, 367877.0, 3072053.0, 2021.0], 'label': ['Interest on bank overdrafts and loans (other than those from related parties)', 'Interest on bank overdrafts and loans Interest on leases', 'Interest on bank overdrafts and loans Other interest expense', 'Interest on bank overdrafts and loans ', 'Interest on bank overdrafts and loans Taxation', 'Interest on bank overdrafts and loans (other than those from related parties)', 'Interest on bank overdrafts and loans Interest on leases', 'Interest on bank overdrafts and loans Other interest expense', 'Interest on bank overdrafts and loans ', 'Interest on bank overdrafts and loans Taxation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('NULL', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('NULL', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('NULL', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('NULL', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('NULL', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('NULL', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('NULL', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('NULL', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('NULL', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('NULL', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('NULL', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('NULL', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('NULL', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('NULL', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('NULL', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('NULL', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('earlier year', 38), ('prior year', 32), ('current tax', 30), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('provision for taxation previous year', 35), ('amount transferred to retained earnings', 32), ('prior year', 30), ('current tax', 29), ('minimum alternate tax credit entitlement', 29), ('deferred tax', 15), ('earlier year', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('minimum alternate tax credit entitlement', 30), ('amount transferred to retained earnings', 29), ('provision for taxation previous year', 28), ('current tax', 24), ('earlier year', 23), ('deferred tax', 17), ('prior year', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year', 36), ('deferred tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 32), ('minimum alternate tax credit entitlement', 30), ('earlier year', 30), ('deferred tax', 27), ('prior year', 26), ('current tax', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('amount transferred to retained earnings', 43), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year', 24), ('earlier year', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('amount transferred to retained earnings', 38), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('earlier year', 30), ('deferred tax', 25), ('prior year', 24), ('provision for taxation previous year', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 21), ('prior year', 21), ('current tax', 20), ('minimum alternate tax credit entitlement', 20), ('deferred tax', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('amount transferred to retained earnings', 46), ('minimum alternate tax credit entitlement', 39), ('provision for taxation previous year', 34), ('current tax', 30), ('earlier year', 29), ('deferred tax', 26), ('prior year', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('provision for taxation previous year', 52), ('minimum alternate tax credit entitlement', 49), ('amount transferred to retained earnings', 40), ('current tax', 36), ('deferred tax', 33), ('earlier year', 31), ('prior year', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior year', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), ('earlier year', 29), ('deferred tax', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 36), ('provision for taxation previous year', 35), ('earlier year', 31), ('prior year', 29), ('deferred tax', 25), ('current tax', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('prior year', 14), ('amount transferred to retained earnings', 13), ('provision for taxation previous year', 12), ('earlier year', 12), ('minimum alternate tax credit entitlement', 6), ('current tax', 0), ('deferred tax', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('amount transferred to retained earnings', 34), ('current tax', 32), ('minimum alternate tax credit entitlement', 31), ('provision for taxation previous year', 29), ('earlier year', 25), ('deferred tax', 21), ('prior year', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('minimum alternate tax credit entitlement', 52), ('amount transferred to retained earnings', 46), ('provision for taxation previous year', 41), ('earlier year', 35), ('deferred tax', 33), ('prior year', 32), ('current tax', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('provision for taxation previous year', 42), ('current tax', 41), ('minimum alternate tax credit entitlement', 40), ('prior year', 37), ('amount transferred to retained earnings', 36), ('deferred tax', 32), ('earlier year', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('provision for taxation previous year', 60), ('earlier year', 53), ('prior year', 50), ('amount transferred to retained earnings', 40), ('deferred tax', 37), ('minimum alternate tax credit entitlement', 36), ('current tax', 34)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('earlier year', 38), ('prior year', 32), ('current tax', 30), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('provision for taxation previous year', 35), ('amount transferred to retained earnings', 32), ('prior year', 30), ('current tax', 29), ('minimum alternate tax credit entitlement', 29), ('deferred tax', 15), ('earlier year', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('minimum alternate tax credit entitlement', 30), ('amount transferred to retained earnings', 29), ('provision for taxation previous year', 28), ('current tax', 24), ('earlier year', 23), ('deferred tax', 17), ('prior year', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year', 36), ('deferred tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior year', 48), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 32), ('minimum alternate tax credit entitlement', 30), ('earlier year', 30), ('deferred tax', 27), ('prior year', 26), ('current tax', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('amount transferred to retained earnings', 43), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year', 24), ('earlier year', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('amount transferred to retained earnings', 38), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('earlier year', 30), ('deferred tax', 25), ('prior year', 24), ('provision for taxation previous year', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 21), ('prior year', 21), ('current tax', 20), ('minimum alternate tax credit entitlement', 20), ('deferred tax', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('amount transferred to retained earnings', 46), ('minimum alternate tax credit entitlement', 39), ('provision for taxation previous year', 34), ('current tax', 30), ('earlier year', 29), ('deferred tax', 26), ('prior year', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('provision for taxation previous year', 52), ('minimum alternate tax credit entitlement', 49), ('amount transferred to retained earnings', 40), ('current tax', 36), ('deferred tax', 33), ('earlier year', 31), ('prior year', 28)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior year', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), ('earlier year', 29), ('deferred tax', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 36), ('provision for taxation previous year', 35), ('earlier year', 31), ('prior year', 29), ('deferred tax', 25), ('current tax', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('prior year', 14), ('amount transferred to retained earnings', 13), ('provision for taxation previous year', 12), ('earlier year', 12), ('minimum alternate tax credit entitlement', 6), ('current tax', 0), ('deferred tax', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('amount transferred to retained earnings', 34), ('current tax', 32), ('minimum alternate tax credit entitlement', 31), ('provision for taxation previous year', 29), ('earlier year', 25), ('deferred tax', 21), ('prior year', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('minimum alternate tax credit entitlement', 52), ('amount transferred to retained earnings', 46), ('provision for taxation previous year', 41), ('earlier year', 35), ('deferred tax', 33), ('prior year', 32), ('current tax', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('provision for taxation previous year', 42), ('current tax', 41), ('minimum alternate tax credit entitlement', 40), ('prior year', 37), ('amount transferred to retained earnings', 36), ('deferred tax', 32), ('earlier year', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('provision for taxation previous year', 60), ('earlier year', 53), ('prior year', 50), ('amount transferred to retained earnings', 40), ('deferred tax', 37), ('minimum alternate tax credit entitlement', 36), ('current tax', 34)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('share of', 40), ('share in', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('share of', 26), ('share in', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('share of', 40), ('share in', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('share of', 26), ('share in', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('prior period', 41), ('exceptional', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('prior period', 23), ('exceptional', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('prior period', 24), ('exceptional', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('exceptional', 38), ('prior period', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('prior period', 29), ('exceptional', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('exceptional', 29), ('prior period', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('prior period', 47), ('exceptional', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('prior period', 36), ('exceptional', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('prior period', 24), ('exceptional', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('prior period', 12), ('exceptional', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('prior period', 31), ('exceptional', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('prior period', 30), ('exceptional', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('prior period', 27), ('exceptional', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('prior period', 41), ('exceptional', 26)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('prior period', 23), ('exceptional', 20)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('prior period', 24), ('exceptional', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('exceptional', 38), ('prior period', 30)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('prior period', 29), ('exceptional', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('exceptional', 29), ('prior period', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('prior period', 47), ('exceptional', 29)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('prior period', 36), ('exceptional', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('prior period', 24), ('exceptional', 18)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('prior period', 12), ('exceptional', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('prior period', 31), ('exceptional', 23)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('prior period', 30), ('exceptional', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('prior period', 27), ('exceptional', 17)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 12:37:46+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 12:37:46+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('NULL', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('NULL', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('NULL', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('NULL', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 12:37:46+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 12:37:46+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = sale of coal , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of product sold , res_fuzz_match = [('NULL', 19)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = cost of coal sold , res_fuzz_match = [('NULL', 22)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = selling & distribution expenses , res_fuzz_match = [('NULL', 24)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = foreign exchange , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = gain/(loss) , res_fuzz_match = [('NULL', 31)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net foreign exchange gain/ (loss) , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = net profit after income tax expense , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit , res_fuzz_match = [('NULL', 5)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = or loss , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = loss on of hedged instrument , res_fuzz_match = [('NULL', 25)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = income tax expense attributable to remeasurement , res_fuzz_match = [('NULL', 11)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income , res_fuzz_match = [('NULL', 12)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - txt_particular = total for the year , res_fuzz_match = [('NULL', 9)]
2023-04-13 12:37:46+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 14:50:32+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-13 14:50:32+0530 - sLogger - DEBUG - {'fileid': '3a1fec7a-547d-42b2-abfd-d1b1bd4f9969', 'filename': 'JERA Australia Pty Ltd - FY 22 - Annual Financials.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/JERA Australia Pty Ltd - FY 22 - Annual Financials.pdf'}
2023-04-13 14:50:32+0530 - sLogger - DEBUG - save file completed
2023-04-13 14:50:32+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-13 14:50:32+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-13 14:50:32+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-13 14:50:32+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-13 14:50:32+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-13 14:50:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:50:32+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:50:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:50:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:50:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:50:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:50:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:50:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:50:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:50:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:50:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:50:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:50:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:50:44+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:50:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:50:44+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:50:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:50:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:50:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:50:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:50:49+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:50:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:50:49+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:50:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:50:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:50:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:50:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:50:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:50:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:50:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:01+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:05+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:05+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:10+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:10+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:20+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:20+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:20+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:20+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:28+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:28+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:33+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:33+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:38+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:38+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:38+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:38+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:51:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:51:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:51:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:51:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:51:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:51:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:51:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:08+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:32+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:32+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:42+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:42+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:52:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:52:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:52:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:52:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:52:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:52:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:52:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:05+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:06+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:10+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:10+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:16+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:16+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:30+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:31+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:38+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:38+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:38+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:38+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:45+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:45+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:49+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:49+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:53:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:53:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:53:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:53:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:53:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:53:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:53:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:06+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:40+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:40+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:54:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:54:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:54:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:54:57+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:54:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:54:58+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:16+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:16+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:26+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:26+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:42+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:42+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:55:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:55:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:55:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:55:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:55:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:55:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:55:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:56:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:56:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:56:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:56:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:56:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:56:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:56:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:56:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:56:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:56:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:56:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:56:11+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:56:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-13 14:56:11+0530 - sLogger - DEBUG - filetype: pdf
2023-04-13 14:56:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-13 14:56:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-13 14:56:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-13 14:56:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-13 14:56:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-13 14:56:15+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-13 14:56:15+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [8, 35], 'predicted_cpl_pages': [7], 'predicted_ccf_pages': [11], 'filtered_cbs_pages': [8], 'filtered_cpl_pages': [7], 'filtered_ccf_pages': [11], 'month': 'december'}
2023-04-13 14:56:15+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-13 14:56:15+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-13 14:56:15+0530 - sLogger - DEBUG - process file completed
2023-04-13 14:56:15+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-13 14:56:15+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-13 14:56:15+0530 - sLogger - DEBUG - TE process file started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-13 15:02:23+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-13 15:02:23+0530 - sLogger - DEBUG - process_main_pages started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 15:02:23+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 15:02:23+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 15:02:23+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 15:02:23+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-13 15:02:23+0530 - sLogger - DEBUG - start_refactoring started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-13 15:02:23+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-13 15:02:23+0530 - sLogger - DEBUG - set_section_details started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - ASSETS | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current liabilities | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent liabilities | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current liabilities | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity and liabilities | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 48), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Deferred operating expenditure | [('noncurrent assets', 35), ('equity and liabilities', 32), ('current assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 29), ('equity liabilities', 24), ('equity', 22), ('assets', 15), ('liabilities', 7)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD current assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD current liabilities | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD noncurrent assets | score 32
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD noncurrent liabilities | score 35
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD non current assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD non current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD equity and liabilities | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred operating expenditure | MATCH WORD equity | score 45
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Loan receivables | [('equity and liabilities', 36), ('liabilities', 35), ('current assets', 33), ('noncurrent liabilities', 32), ('assets', 25), ('noncurrent assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD current assets | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD current liabilities | score 46
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD noncurrent assets | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD noncurrent liabilities | score 53
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD non current assets | score 47
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD non current liabilities | score 56
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD equity and liabilities | score 50
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Loan receivables | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Investments accounted for using the equity method | [('equity and liabilities', 39), ('equity liabilities', 30), ('current assets', 26), ('noncurrent assets', 26), ('equity', 26), ('current liabilities', 26), ('noncurrent liabilities', 22), ('assets', 18), ('liabilities', 9)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD current assets | score 43
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD current liabilities | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD noncurrent assets | score 35
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD noncurrent liabilities | score 32
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD non current assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD non current liabilities | score 37
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD equity and liabilities | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Investments accounted for using the equity method | MATCH WORD equity | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Exploration and evaluation assets | [('current assets', 46), ('noncurrent assets', 46), ('equity and liabilities', 46), ('assets', 37), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 14), ('equity', 14)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD current assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD noncurrent assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD noncurrent liabilities | score 37
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD non current assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD non current liabilities | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD equity and liabilities | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Exploration and evaluation assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Oil and gas properties | [('equity and liabilities', 39), ('noncurrent liabilities', 36), ('current assets', 31), ('noncurrent assets', 31), ('current liabilities', 30), ('assets', 25), ('equity liabilities', 25), ('liabilities', 24), ('equity', 24)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD current assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD current liabilities | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD noncurrent assets | score 41
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD noncurrent liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD non current assets | score 45
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD non current liabilities | score 40
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD equity and liabilities | score 50
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Oil and gas properties | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('equity', 33), ('noncurrent liabilities', 31), ('liabilities', 22)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Leased assets | [('assets', 67), ('current assets', 61), ('noncurrent assets', 52), ('equity and liabilities', 44), ('equity liabilities', 43), ('current liabilities', 42), ('liabilities', 25), ('equity', 25), ('noncurrent liabilities', 17)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD current assets | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD noncurrent assets | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD noncurrent liabilities | score 29
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD non current assets | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD non current liabilities | score 32
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD equity and liabilities | score 40
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Leased assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - LIABILITIES | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current assets | score 24
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current liabilities | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent assets | score 24
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent liabilities | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current assets | score 24
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current liabilities | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity and liabilities | score 90
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Other current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('noncurrent liabilities', 53), ('equity and liabilities', 49), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 30), ('equity', 23), ('assets', 16)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD current assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD current liabilities | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD non current assets | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD non current liabilities | score 88
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other current liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrent assets', 32), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Other noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('equity liabilities', 36), ('current liabilities', 35), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Other noncurrent liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Provision for associate funding | [('noncurrent assets', 40), ('current assets', 34), ('noncurrent liabilities', 33), ('current liabilities', 28), ('equity and liabilities', 26), ('assets', 22), ('equity liabilities', 17), ('liabilities', 14), ('equity', 14)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD current assets | score 39
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD current liabilities | score 29
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD noncurrent assets | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD noncurrent liabilities | score 32
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD non current assets | score 45
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD non current liabilities | score 33
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD equity and liabilities | score 26
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Provision for associate funding | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-13 15:02:23+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-13 15:02:23+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-13 15:02:23+0530 - sLogger - DEBUG - set_section_details started
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes paid | changes in working capital
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash inflow from operating activities | operating cash flow before working capital changes
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayments of loans by associates | changes in assets liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received on loans to associates | adjustments for increase decrease in operating liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Recelpts/Payments) from financial assets | adiustments for movements in working capital
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for intangible assets | operating profit before changes in assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments of oil and gas properties | operating profit before changes in assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments of exploration and evaluation assets | changes in operating assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for acquisition of interest in Barossa | adjustments for increase decrease in operating assets
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Return of capital/dividend received from Investment | adjustments for increase decrease in operating liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Loans to associates | changes in assets liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Loan to related party | changes in operating assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (outflow) from investing activities | adjustments for increase decrease in operating liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from issues of shares and other equity securities | operating profit before changes in assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from borrowings | operating cash flow before working capital changes
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Finance lease payments | changes in operating assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash inflow (outflow) from financing activities | operating cash flow before working capital changes
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effects of exchange rate changes on cash and cash equivalents | changes in operating assets and liabilities
2023-04-13 15:02:23+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-04-13 15:02:24+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: get_first_note_occurance
2023-04-13 15:02:24+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-13 15:02:24+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: get_first_note_occurance
2023-04-13 15:02:24+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-13 15:02:25+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: get_first_note_occurance
2023-04-13 15:02:25+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-13 15:02:25+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:25+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:25+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:25+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:25+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:25+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'year'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-13 15:02:26+0530 - sLogger - ERROR - error occured: 'value'
2023-04-13 15:02:26+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('other bank balances', 32), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 20), ('cash and cash equivalents', 19)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 90865.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['3'], 'line_item_value': [90865.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other bank balances', 50), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('other bank balances', 32), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 20), ('cash and cash equivalents', 19)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 136874.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['3'], 'line_item_value': [136874.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('inventories', 44)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2269.0, 'line_item_label': ['Inventories'], 'note_numbers': ['4'], 'line_item_value': [2269.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('inventories', 44)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2364.0, 'line_item_label': ['Inventories'], 'note_numbers': ['4'], 'line_item_value': [2364.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('other current assets', 45), ('other financial assets', 40), ('other current financial assets', 38), ('other assets', 38)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 188453.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '5'], 'line_item_value': [0.0, 188453.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100), ('other current financial assets', 83), ('other assets', 73), ('other financial assets', 68)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('other current assets', 45), ('other financial assets', 40), ('other current financial assets', 38), ('other assets', 38)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 252815.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '5'], 'line_item_value': [0.0, 252815.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid', 77), ('prepaid expense', 36), ('prepaid expenditure', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets interest receivable , res_fuzz_match = [('prepaid', 43), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets bank guarantee , res_fuzz_match = [('prepaid', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid expenditure', 28)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets rental bond , res_fuzz_match = [('prepaid', 43), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets related party receivable , res_fuzz_match = [('prepaid expenditure', 50), ('prepaid expense', 43), ('prepaid', 43), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets share ofjv prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid', 77), ('prepaid expense', 36), ('prepaid expenditure', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets current investments , res_fuzz_match = [('prepaid', 43), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('prepaid', 43), ('prepayments', 33), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid', 77), ('prepaid expense', 36), ('prepaid expenditure', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets interest receivable , res_fuzz_match = [('prepaid', 43), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets bank guarantee , res_fuzz_match = [('prepaid', 43), ('prepayments', 33), ('prepaid expense', 29), ('prepaid expenditure', 28)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets rental bond , res_fuzz_match = [('prepaid', 43), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets related party receivable , res_fuzz_match = [('prepaid expenditure', 50), ('prepaid expense', 43), ('prepaid', 43), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets share ofjv prepayments , res_fuzz_match = [('prepayments', 100), ('prepaid', 77), ('prepaid expense', 36), ('prepaid expenditure', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets current investments , res_fuzz_match = [('prepaid', 43), ('prepaid expenditure', 39), ('prepaid expense', 36), ('prepayments', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('prepaid', 43), ('prepayments', 33), ('prepaid expense', 31), ('prepaid expenditure', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('prepaid expense', 50), ('prepaid expenditure', 50), ('prepayments', 17), ('prepaid', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5, 8, 13], 'score': [100, 100, 100, 100], 'value': [314.0, 1758.0, 175.0, 431.0], 'label': ['Current assets Prepayments', 'Current assets Share ofJV prepayments', 'Current assets Prepayments', 'Current assets Share ofJV prepayments'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('other current assets', 45)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 188453.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '5'], 'line_item_value': [0.0, 188453.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('other current assets', 45)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 252815.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '5'], 'line_item_value': [0.0, 252815.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('current assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 81, 'value': 188453.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '5'], 'line_item_value': [0.0, 188453.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('current assets', 81)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('current assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 81, 'value': 252815.0, 'line_item_label': ['Current assets', 'Other current assets'], 'note_numbers': [nan, '5'], 'line_item_value': [0.0, 252815.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('plant property equipment', 45), ('property plant equipment', 45)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('plant property equipment', 56), ('property plant equipment', 56)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('plant property equipment', 27), ('property plant equipment', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 91, 'value': 150.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': [nan], 'line_item_value': [150.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('plant property equipment', 45), ('property plant equipment', 45)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('plant property equipment', 56), ('property plant equipment', 56)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('plant property equipment', 27), ('property plant equipment', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 91, 'value': 184.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': [nan], 'line_item_value': [184.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('plant property equipment', 45), ('property plant equipment', 45)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('plant property equipment', 56), ('property plant equipment', 56)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('plant property equipment', 27), ('property plant equipment', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 91, 'value': 150.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': [nan], 'line_item_value': [150.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('plant property equipment', 45), ('property plant equipment', 45)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('plant property equipment', 56), ('property plant equipment', 56)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('plant property equipment', 27), ('property plant equipment', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 91, 'value': 184.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': [nan], 'line_item_value': [184.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('capital work in progress', 36), ('work in progress', 36), ('tangible', 29), ('capital work-in-progress', 27), ('capital workinprogress', 27), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('rightofuse', 44), ('righttouse', 44), ('work in progress', 38), ('capital work in progress', 37), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('capital work in progress', 37), ('capital work-in-progress', 35), ('capital workinprogress', 35), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 38), ('capital workinprogress', 38), ('work in progress', 38), ('capital work in progress', 37), ('right of use', 33), ('right to use', 33), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 25), ('work in progress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('right of use', 33), ('right to use', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30), ('tangible', 14), ('rightofuse', 11), ('righttouse', 11)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('capital work in progress', 36), ('work in progress', 36), ('tangible', 29), ('capital work-in-progress', 27), ('capital workinprogress', 27), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('rightofuse', 44), ('righttouse', 44), ('work in progress', 38), ('capital work in progress', 37), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('capital work in progress', 37), ('capital work-in-progress', 35), ('capital workinprogress', 35), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('tangible', 43), ('capital work-in-progress', 38), ('capital workinprogress', 38), ('work in progress', 38), ('capital work in progress', 37), ('right of use', 33), ('right to use', 33), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 25), ('work in progress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('work in progress', 46), ('right of use', 44), ('right to use', 44), ('capital work-in-progress', 42), ('capital workinprogress', 42), ('capital work in progress', 37), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('right of use', 33), ('right to use', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30), ('tangible', 14), ('rightofuse', 11), ('righttouse', 11)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('tangible assets', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('tangible assets', 23)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('tangible assets', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('tangible assets', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('tangible assets', 61)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 80, 'value': 40.0, 'line_item_label': ['Intangible assets'], 'note_numbers': [nan], 'line_item_value': [40.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('tangible assets', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('tangible assets', 23)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('tangible assets', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('tangible assets', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('tangible assets', 61)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 80, 'value': 25.0, 'line_item_label': ['Intangible assets'], 'note_numbers': [nan], 'line_item_value': [25.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('goodwill on consolidatio', 47), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 0)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('goodwill on consolidatio', 47), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 0)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('intangible under development', 36), ('intangible assets under development', 36), ('intangible', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('intangible assets under development', 36), ('intangible under development', 35), ('intangible', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 37)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('intangible assets under development', 70), ('intangible under development', 30), ('intangible', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 40.0, 'line_item_label': ['Intangible assets'], 'note_numbers': [nan], 'line_item_value': [40.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('intangible under development', 36), ('intangible assets under development', 36), ('intangible', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('intangible assets under development', 36), ('intangible under development', 35), ('intangible', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 37)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 32)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('intangible assets under development', 70), ('intangible under development', 30), ('intangible', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 25.0, 'line_item_label': ['Intangible assets'], 'note_numbers': [nan], 'line_item_value': [25.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('donations', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('donations', 13)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('donations', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('donations', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('donations', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('donations', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('donations', 13)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('donations', 22)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('donations', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('donations', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 35)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('joint ventures and associates', 50), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 1773.0, 'line_item_label': ['Investments accounted for using the equity method'], 'note_numbers': ['17'], 'line_item_value': [1773.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 35)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 47), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('joint ventures and associates', 50), ('investment', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 3893.0, 'line_item_label': ['Investments accounted for using the equity method'], 'note_numbers': ['17'], 'line_item_value': [3893.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('deferred charges', 36), ('deferred tax assets', 31), ('deferred tax', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('deferred tax assets', 29), ('deferred charges', 24), ('deferred tax', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('deferred tax assets', 49), ('deferred tax', 32), ('deferred charges', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('deferred charges', 33), ('deferred tax', 29), ('deferred tax assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('deferred tax assets', 64), ('deferred tax', 32), ('deferred charges', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('deferred charges', 36), ('deferred tax assets', 31), ('deferred tax', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('deferred tax assets', 29), ('deferred charges', 24), ('deferred tax', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('deferred tax assets', 49), ('deferred tax', 32), ('deferred charges', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('deferred charges', 33), ('deferred tax', 29), ('deferred tax assets', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 33), ('deferred tax', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('deferred tax assets', 64), ('deferred tax', 32), ('deferred charges', 29)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('other assets', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('other assets', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('other assets', 48)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('other assets', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('other assets', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('other assets', 31)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('other assets', 48)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('other assets', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('other assets', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('non-current assets total', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('non-current assets total', 34)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('non-current assets total', 44)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('non-current assets total', 32)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('non-current assets total', 48)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 15], 'score': 84, 'value': 2421.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 2421.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('non-current assets total', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('non-current assets total', 34)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('non-current assets total', 44)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('non-current assets total', 32)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('non-current assets total', 48)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 15], 'score': 84, 'value': 671.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 671.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 41), ('shortterm debt', 41), ('short term debt', 40), ('shortterm borrowings', 39), ('borrowings', 23)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [24], 'score': 100, 'value': 1170.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['8(b)'], 'line_item_value': [1170.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short-term debt', 41), ('shortterm debt', 41), ('short term debt', 40), ('shortterm borrowings', 39), ('borrowings', 23)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [24], 'score': 100, 'value': 1277.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['8(b)'], 'line_item_value': [1277.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other financial liabilities', 70), ('current maturities', 67), ('current maturities of long-term debt', 60), ('current maturities of longterm debt', 60)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 100, 'value': 905.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 905.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other financial liabilities', 70), ('current maturities', 67), ('current maturities of long-term debt', 60), ('current maturities of longterm debt', 60)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 100, 'value': 2514.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 2514.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('outstanding dues of creditors other than', 42), ('other than micro and small enterprises', 39), ('trade payable', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 34), ('micro enterprises', 34), ('small enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('total outstanding due of other creditors other than micro and small', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 90, 'value': 4198.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['7(c)'], 'line_item_value': [4198.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('outstanding dues of creditors other than', 42), ('other than micro and small enterprises', 39), ('trade payable', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 34), ('micro enterprises', 34), ('small enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('total outstanding due of other creditors other than micro and small', 30)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 90, 'value': 12160.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['7(c)'], 'line_item_value': [12160.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other current financial liabilities', 83), ('other liabilities', 75), ('other financial liabilities', 70)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 100, 'value': 905.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 905.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100), ('other current financial liabilities', 83), ('other liabilities', 75), ('other financial liabilities', 70)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 100, 'value': 2514.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 2514.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 100, 'value': 905.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 905.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:26+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('other current liabilities', 100)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-13 15:02:26+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 100, 'value': 2514.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 2514.0]}
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:26+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:26+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-13 15:02:26+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 82, 'value': 905.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 905.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 23], 'score': 82, 'value': 2514.0, 'line_item_label': ['Current liabilities', 'Other current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 2514.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('long term debt', 47)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('long term debt', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('long term debt', 47)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('long term debt', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('longterm borrowings', 53), ('borrowings', 33), ('long term borrowings', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 0.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['7(d)'], 'line_item_value': [0.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('long term borrowings', 100), ('longterm borrowings', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('longterm borrowings', 27), ('long term borrowings', 26), ('borrowings', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('longterm borrowings', 53), ('borrowings', 33), ('long term borrowings', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 427376.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['7(d)'], 'line_item_value': [427376.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('(bond)', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('(bond)', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('lease liabilities', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [31], 'score': 100, 'value': 1167.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['8(b)'], 'line_item_value': [1167.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('lease liabilities', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [31], 'score': 100, 'value': 900.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['8(b)'], 'line_item_value': [900.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 56), ('deferred taxes', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('deferred taxes', 44), ('deferred tax liabilities', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': -4423.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['8(c)'], 'line_item_value': [-4423.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 56), ('deferred taxes', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('deferred taxes', 44), ('deferred tax liabilities', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 10413.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['8(c)'], 'line_item_value': [10413.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('other long term liabilities', 71)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other long term liabilities', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('other long term liabilities', 71)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('minority interest', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('minority interest', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('minority interest', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('minority interest', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('minority interest', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('long term liabilities', 72)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('long term liabilities', 37)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term liabilities', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current liabilities , res_fuzz_match = [('long term liabilities', 72)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = provision for associate funding , res_fuzz_match = [('long term liabilities', 37)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('plant property equipment', 45), ('property plant equipment', 45)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('plant property equipment', 56), ('property plant equipment', 56)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('plant property equipment', 27), ('property plant equipment', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 91, 'value': 150.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': [nan], 'line_item_value': [150.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = loan receivables , res_fuzz_match = [('plant property equipment', 45), ('property plant equipment', 45)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = investments accounted for using the equity method , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = exploration and evaluation assets , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = oil and gas properties , res_fuzz_match = [('plant property equipment', 56), ('property plant equipment', 56)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = leased assets , res_fuzz_match = [('plant property equipment', 27), ('property plant equipment', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 91, 'value': 184.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': [nan], 'line_item_value': [184.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('trade receivables', 42), ('unbilled', 40), ('account receivables', 36), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 4556.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['7(a)'], 'line_item_value': [4556.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('account receivables', 44), ('trade receivables', 42), ('government subsidies receivable', 42), ('unbilled', 40), ('receivable', 33), ('billed', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = deferred operating expenditure , res_fuzz_match = [('trade receivables', 42), ('unbilled', 40), ('account receivables', 36), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 5895.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['7(a)'], 'line_item_value': [5895.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), ('revenue from contracts with customers', 36), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from contracts with customers', 39), ('sale of products', 32), ('net sales', 30), ('from trading business', 30), ('revenue from operations', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('transmission and distribution business', 25), ('net sales', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('sale of products', 24), ('revenue from contracts with customers', 22), ('revenue from operations', 19), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('from trading business', 37), ('sale of products', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('net sales', 45), ('from trading business', 34), ('transmission and distribution business', 33), ('revenue from contracts with customers', 30), ('revenue from operations', 27), ('sale of products', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('revenue from operations', 44), ('sale of products', 35), ('revenue from contracts with customers', 33), ('from trading business', 31), ('net sales', 21), ('transmission and distribution business', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('net sales', 29), ('transmission and distribution business', 29), ('from trading business', 29), ('revenue from operations', 28), ('sale of products', 24), ('revenue from contracts with customers', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('transmission and distribution business', 35), ('net sales', 31), ('revenue from operations', 29), ('sale of products', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('transmission and distribution business', 44), ('revenue from contracts with customers', 42), ('sale of products', 34), ('net sales', 33), ('from trading business', 32), ('revenue from operations', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('from trading business', 43), ('revenue from operations', 42), ('revenue from contracts with customers', 41), ('transmission and distribution business', 36), ('sale of products', 35), ('net sales', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('from trading business', 41), ('net sales', 38), ('revenue from contracts with customers', 32), ('transmission and distribution business', 31), ('revenue from operations', 30), ('sale of products', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('transmission and distribution business', 30), ('net sales', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 38), ('transmission and distribution business', 34), ('revenue from operations', 31), ('from trading business', 31), ('sale of products', 29), ('net sales', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('revenue from contracts with customers', 38), ('transmission and distribution business', 33), ('from trading business', 28), ('revenue from operations', 25), ('sale of products', 23), ('net sales', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('revenue from operations', 34), ('from trading business', 31), ('transmission and distribution business', 29), ('sale of products', 23), ('net sales', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('revenue from contracts with customers', 36), ('revenue from operations', 32), ('from trading business', 32), ('sale of products', 30), ('transmission and distribution business', 29), ('net sales', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('transmission and distribution business', 42), ('from trading business', 40), ('revenue from contracts with customers', 38), ('sale of products', 31), ('revenue from operations', 28), ('net sales', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('from trading business', 42), ('transmission and distribution business', 39), ('revenue from contracts with customers', 33), ('sale of products', 30), ('net sales', 28), ('revenue from operations', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('revenue from contracts with customers', 39), ('from trading business', 34), ('transmission and distribution business', 33), ('revenue from operations', 30), ('sale of products', 26), ('net sales', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('from trading business', 42), ('transmission and distribution business', 39), ('revenue from contracts with customers', 33), ('sale of products', 30), ('net sales', 28), ('revenue from operations', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 53634.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['1(a)'], 'line_item_value': [53634.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), ('revenue from contracts with customers', 36), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 50), ('from trading business', 43), ('transmission and distribution business', 33), ('sale of products', 27), ('net sales', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from contracts with customers', 39), ('sale of products', 32), ('net sales', 30), ('from trading business', 30), ('revenue from operations', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('transmission and distribution business', 25), ('net sales', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('sale of products', 24), ('revenue from contracts with customers', 22), ('revenue from operations', 19), ('from trading business', 10), ('transmission and distribution business', 6), ('net sales', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('from trading business', 37), ('sale of products', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('net sales', 45), ('from trading business', 34), ('transmission and distribution business', 33), ('revenue from contracts with customers', 30), ('revenue from operations', 27), ('sale of products', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('revenue from operations', 44), ('sale of products', 35), ('revenue from contracts with customers', 33), ('from trading business', 31), ('net sales', 21), ('transmission and distribution business', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('revenue from contracts with customers', 32), ('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('sale of products', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('net sales', 29), ('transmission and distribution business', 29), ('from trading business', 29), ('revenue from operations', 28), ('sale of products', 24), ('revenue from contracts with customers', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('transmission and distribution business', 35), ('net sales', 31), ('revenue from operations', 29), ('sale of products', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('transmission and distribution business', 44), ('revenue from contracts with customers', 42), ('sale of products', 34), ('net sales', 33), ('from trading business', 32), ('revenue from operations', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('from trading business', 43), ('revenue from operations', 42), ('revenue from contracts with customers', 41), ('transmission and distribution business', 36), ('sale of products', 35), ('net sales', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('from trading business', 41), ('net sales', 38), ('revenue from contracts with customers', 32), ('transmission and distribution business', 31), ('revenue from operations', 30), ('sale of products', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('transmission and distribution business', 30), ('net sales', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 38), ('transmission and distribution business', 34), ('revenue from operations', 31), ('from trading business', 31), ('sale of products', 29), ('net sales', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('revenue from contracts with customers', 38), ('transmission and distribution business', 33), ('from trading business', 28), ('revenue from operations', 25), ('sale of products', 23), ('net sales', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('revenue from operations', 34), ('from trading business', 31), ('transmission and distribution business', 29), ('sale of products', 23), ('net sales', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('revenue from contracts with customers', 36), ('revenue from operations', 32), ('from trading business', 32), ('sale of products', 30), ('transmission and distribution business', 29), ('net sales', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('transmission and distribution business', 42), ('from trading business', 40), ('revenue from contracts with customers', 38), ('sale of products', 31), ('revenue from operations', 28), ('net sales', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('from trading business', 42), ('transmission and distribution business', 39), ('revenue from contracts with customers', 33), ('sale of products', 30), ('net sales', 28), ('revenue from operations', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('revenue from contracts with customers', 39), ('from trading business', 34), ('transmission and distribution business', 33), ('revenue from operations', 30), ('sale of products', 26), ('net sales', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('from trading business', 42), ('transmission and distribution business', 39), ('revenue from contracts with customers', 33), ('sale of products', 30), ('net sales', 28), ('revenue from operations', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 88032.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['1(a)'], 'line_item_value': [88032.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('cost of sales', 48), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('cost of sales', 41), ('total expenditure', 34), ('purchase of stock-in-trade', 32), ('total expenses', 27), ('expenditure', 23), ('expense', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 33), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 27), ('expense', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), ('cost of sales', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('cost of sales', 26), ('expenditure', 25), ('expense', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('total expenditure', 44), ('total expenses', 43), ('purchase of stock-in-trade', 40), ('expenditure', 38), ('expense', 24), ('cost of sales', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('purchase of stock-in-trade', 38), ('cost of sales', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('total expenses', 47), ('total expenditure', 47), ('cost of sales', 37), ('purchase of stock-in-trade', 32), ('expenditure', 21), ('expense', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('cost of sales', 36), ('total expenditure', 31), ('purchase of stock-in-trade', 30), ('total expenses', 30), ('expenditure', 22), ('expense', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 32), ('expenditure', 25), ('expense', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 33), ('cost of sales', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('total expenditure', 34), ('purchase of stock-in-trade', 32), ('cost of sales', 29), ('expenditure', 28), ('total expenses', 26), ('expense', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('total expenses', 29), ('cost of sales', 27), ('expenditure', 22), ('expense', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 26), ('cost of sales', 24), ('expenditure', 18), ('expense', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 32), ('total expenses', 30), ('total expenditure', 28), ('cost of sales', 24), ('expenditure', 20), ('expense', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('purchase of stock-in-trade', 33), ('cost of sales', 32), ('expenditure', 24), ('expense', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 28), ('total expenses', 25), ('cost of sales', 21), ('expenditure', 20), ('expense', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('purchase of stock-in-trade', 34), ('cost of sales', 32), ('total expenditure', 27), ('total expenses', 25), ('expenditure', 16), ('expense', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('total expenditure', 33), ('total expenses', 32), ('purchase of stock-in-trade', 29), ('cost of sales', 27), ('expenditure', 20), ('expense', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('purchase of stock-in-trade', 34), ('cost of sales', 32), ('total expenditure', 27), ('total expenses', 25), ('expenditure', 16), ('expense', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('cost of sales', 48), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('cost of sales', 41), ('total expenditure', 34), ('purchase of stock-in-trade', 32), ('total expenses', 27), ('expenditure', 23), ('expense', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 33), ('total expenditure', 29), ('cost of sales', 29), ('expenditure', 27), ('expense', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('expense', 18), ('purchase of stock-in-trade', 17), ('cost of sales', 14), ('expenditure', 13), ('total expenses', 12), ('total expenditure', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), ('cost of sales', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('cost of sales', 26), ('expenditure', 25), ('expense', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('total expenditure', 44), ('total expenses', 43), ('purchase of stock-in-trade', 40), ('expenditure', 38), ('expense', 24), ('cost of sales', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('purchase of stock-in-trade', 38), ('cost of sales', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('total expenses', 47), ('total expenditure', 47), ('cost of sales', 37), ('purchase of stock-in-trade', 32), ('expenditure', 21), ('expense', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('cost of sales', 36), ('total expenditure', 31), ('purchase of stock-in-trade', 30), ('total expenses', 30), ('expenditure', 22), ('expense', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 32), ('expenditure', 25), ('expense', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 33), ('cost of sales', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('total expenditure', 34), ('purchase of stock-in-trade', 32), ('cost of sales', 29), ('expenditure', 28), ('total expenses', 26), ('expense', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('total expenses', 29), ('cost of sales', 27), ('expenditure', 22), ('expense', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('purchase of stock-in-trade', 29), ('total expenditure', 27), ('total expenses', 26), ('cost of sales', 24), ('expenditure', 18), ('expense', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 32), ('total expenses', 30), ('total expenditure', 28), ('cost of sales', 24), ('expenditure', 20), ('expense', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('purchase of stock-in-trade', 33), ('cost of sales', 32), ('expenditure', 24), ('expense', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 28), ('total expenses', 25), ('cost of sales', 21), ('expenditure', 20), ('expense', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('purchase of stock-in-trade', 34), ('cost of sales', 32), ('total expenditure', 27), ('total expenses', 25), ('expenditure', 16), ('expense', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('total expenditure', 33), ('total expenses', 32), ('purchase of stock-in-trade', 29), ('cost of sales', 27), ('expenditure', 20), ('expense', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('purchase of stock-in-trade', 34), ('cost of sales', 32), ('total expenditure', 27), ('total expenses', 25), ('expenditure', 16), ('expense', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other expenses', 42), (' depreciation', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('other expenses', 32), (' depreciation', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('other expenses', 54), (' depreciation', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [(' depreciation', 44), ('other expenses', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other expenses', 56), (' depreciation', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('other expenses', 27), (' depreciation', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('other expenses', 34), (' depreciation', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('other expenses', 29), (' depreciation', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('other expenses', 33), (' depreciation', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('other expenses', 38), (' depreciation', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('other expenses', 25), (' depreciation', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other expenses', 25), (' depreciation', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('other expenses', 32), (' depreciation', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other expenses', 25), (' depreciation', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -1310.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-1310.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other expenses', 42), (' depreciation', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('other expenses', 32), (' depreciation', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [(' depreciation', 17), ('other expenses', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('other expenses', 54), (' depreciation', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [(' depreciation', 44), ('other expenses', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other expenses', 56), (' depreciation', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('other expenses', 27), (' depreciation', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('other expenses', 34), (' depreciation', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other expenses', 29), (' depreciation', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('other expenses', 29), (' depreciation', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('other expenses', 29), (' depreciation', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('other expenses', 33), (' depreciation', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('other expenses', 38), (' depreciation', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('other expenses', 25), (' depreciation', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other expenses', 25), (' depreciation', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('other expenses', 32), (' depreciation', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other expenses', 25), (' depreciation', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -3353.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-3353.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('rent', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('rent', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('rent', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('rent', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('rent', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('rent', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('rent', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('rent', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('rent', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('rent', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('rent', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('rent', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('rent', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('rent', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('rent', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('rent', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('rent', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('rent', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('rent', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('rent', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('rent', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('rent', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('rent', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('rent', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('rent', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('rent', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other operating ', 45)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('other operating ', 58)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('other operating ', 67)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other operating ', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('other operating ', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other operating ', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating ', 55)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('other operating ', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('other operating ', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('other operating ', 34)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('other operating ', 39)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('other operating ', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other operating ', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('other operating ', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other operating ', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other operating ', 45)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('other operating ', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other operating ', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('other operating ', 58)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('other operating ', 67)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('other operating ', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('other operating ', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other operating ', 31)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('other operating ', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating ', 55)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('other operating ', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('other operating ', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('other operating ', 34)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('other operating ', 39)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('other operating ', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other operating ', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('other operating ', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other operating ', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), ('finance income', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('other income', 39), ('finance income', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('other income', 64), ('finance income', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('other income', 36), ('finance income', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('finance income', 48), ('other income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('finance income', 80), ('other income', 55)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('other income', 30), ('finance income', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('finance income', 50), ('other income', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), ('finance income', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('other income', 30), ('finance income', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('other income', 29), ('finance income', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('other income', 30), ('finance income', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('other income', 35), ('finance income', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('other income', 32), ('finance income', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('other income', 33), ('finance income', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 11], 'score': 80, 'value': 5497.0, 'line_item_label': ['Finance income', 'Total finance income'], 'note_numbers': ['2(c)', nan], 'line_item_value': [2792.0, 2705.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), ('finance income', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('other income', 39), ('finance income', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 35), ('finance income', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance income', 24), ('other income', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('other income', 64), ('finance income', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('other income', 36), ('finance income', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('finance income', 48), ('other income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('finance income', 80), ('other income', 55)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('other income', 30), ('finance income', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('finance income', 50), ('other income', 40)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), ('finance income', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('other income', 30), ('finance income', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('other income', 29), ('finance income', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('other income', 30), ('finance income', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('other income', 35), ('finance income', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('other income', 32), ('finance income', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('other income', 33), ('finance income', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('other income', 26), ('finance income', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 11], 'score': 80, 'value': 7802.0, 'line_item_label': ['Finance income', 'Total finance income'], 'note_numbers': ['2(c)', nan], 'line_item_value': [8393.0, -591.0]}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = lng , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = condensate , res_fuzz_match = [('interest', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = lng , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = condensate , res_fuzz_match = [('interest', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income interest received - bank , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income interest received - loan , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income sublease interest income , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income share of jv interest received/(paid) , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income net foreign exchange gains/(losses) , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income finance income , res_fuzz_match = [('interest', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs lease interest expense , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs accretion expense , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs loss on loan refinancing , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs finance costs , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs total finance incomel cost , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income interest received - bank , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income interest received - loan , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income sublease interest income , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income share of jv interest received/(paid) , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income net foreign exchange gains/(losses) , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance income finance income , res_fuzz_match = [('interest', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs lease interest expense , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs accretion expense , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs loss on loan refinancing , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs finance costs , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = finance costs total finance incomel cost , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 6, 11, 12, 13, 14, 17], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [3453.0, 7415.0, 12.0, -2.0, 43.0, 633.0, 3087.0, 20.0, 3.0, -75.0], 'label': ['Finance income Interest received - Bank', 'Finance income Interest received - Loan', 'Finance income Sublease interest income', 'Finance income Share of JV interest received/(paid)', 'Finance costs Lease interest expense', 'Finance income Interest received - Bank', 'Finance income Interest received - Loan', 'Finance income Sublease interest income', 'Finance income Share of JV interest received/(paid)', 'Finance costs Lease interest expense'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets prepayments , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets interest receivable , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets bank guarantee , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets rental bond , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets related party receivable , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets share ofjv prepayments , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets current investments , res_fuzz_match = [('interest', 62)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets prepayments , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets interest receivable , res_fuzz_match = [('interest', 100)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets bank guarantee , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets rental bond , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets related party receivable , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets share ofjv prepayments , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets current investments , res_fuzz_match = [('interest', 62)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 9], 'score': [100, 100], 'value': [90.0, 38.0], 'label': ['Current assets Interest receivable', 'Current assets Interest receivable'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets cash and cash equivalents , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = current assets cash and cash equivalents , res_fuzz_match = [('interest', 38)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [('interest', 50)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_rows = 31 december $'000 , res_fuzz_match = [('interest', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('finance cost', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('finance cost', 39)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('finance cost', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('finance cost', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('finance cost', 67)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('finance cost', 41)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('finance cost', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('finance cost', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('finance cost', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('finance cost', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('finance cost', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('finance cost', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('finance cost', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('finance cost', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('finance cost', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('finance cost', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('finance cost', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('finance cost', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('finance cost', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('finance cost', 39)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('finance cost', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('finance cost', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('finance cost', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('finance cost', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('finance cost', 67)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('finance cost', 41)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('finance cost', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('finance cost', 36)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('finance cost', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('finance cost', 33)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('finance cost', 30)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('finance cost', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('finance cost', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('finance cost', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('finance cost', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('finance cost', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('finance cost', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('finance cost', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('NULL', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('NULL', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('NULL', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('NULL', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('NULL', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('NULL', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('NULL', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('NULL', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('NULL', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('NULL', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('NULL', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('NULL', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('NULL', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('NULL', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('NULL', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('NULL', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('NULL', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('NULL', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('NULL', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('NULL', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 32), ('provision for taxation previous year', 30), ('deferred tax', 24), ('prior year', 23), ('earlier year', 22), ('current tax', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year', 36), ('deferred tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('provision for taxation previous year', 18), ('prior year', 13), ('amount transferred to retained earnings', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('amount transferred to retained earnings', 49), ('earlier year', 46), ('provision for taxation previous year', 33), ('prior year', 33), ('current tax', 32), ('minimum alternate tax credit entitlement', 30), ('deferred tax', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('provision for taxation previous year', 45), ('deferred tax', 40), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35), ('minimum alternate tax credit entitlement', 28), ('current tax', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('deferred tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 33), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), ('prior year', 26), ('provision for taxation previous year', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), ('current tax', 34), ('provision for taxation previous year', 34), ('deferred tax', 30), ('prior year', 29), ('earlier year', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('amount transferred to retained earnings', 45), ('provision for taxation previous year', 41), ('minimum alternate tax credit entitlement', 39), ('current tax', 35), ('earlier year', 30), ('prior year', 27), ('deferred tax', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('minimum alternate tax credit entitlement', 57), ('amount transferred to retained earnings', 43), ('deferred tax', 42), ('current tax', 40), ('provision for taxation previous year', 38), ('prior year', 29), ('earlier year', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 36), ('current tax', 26), ('prior year', 24), ('earlier year', 23), ('deferred tax', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 54), ('amount transferred to retained earnings', 39), ('minimum alternate tax credit entitlement', 35), ('earlier year', 33), ('prior year', 31), ('current tax', 30), ('deferred tax', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 51), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 35), ('prior year', 35), ('current tax', 31), ('deferred tax', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31), ('current tax', 26), ('deferred tax', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('provision for taxation previous year', 32), ('prior year', 32), ('current tax', 31), ('deferred tax', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('provision for taxation previous year', 48), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 36), ('earlier year', 32), ('prior year', 30), ('current tax', 26), ('deferred tax', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('provision for taxation previous year', 32), ('prior year', 32), ('current tax', 31), ('deferred tax', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), ('prior year', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 32), ('provision for taxation previous year', 30), ('deferred tax', 24), ('prior year', 23), ('earlier year', 22), ('current tax', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year', 36), ('deferred tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('current tax', 25), ('provision for taxation previous year', 18), ('prior year', 13), ('amount transferred to retained earnings', 12), ('minimum alternate tax credit entitlement', 11), ('deferred tax', 0), ('earlier year', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('minimum alternate tax credit entitlement', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('amount transferred to retained earnings', 49), ('earlier year', 46), ('provision for taxation previous year', 33), ('prior year', 33), ('current tax', 32), ('minimum alternate tax credit entitlement', 30), ('deferred tax', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('provision for taxation previous year', 45), ('deferred tax', 40), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35), ('minimum alternate tax credit entitlement', 28), ('current tax', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year', 18), ('current tax', 17), ('earlier year', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('deferred tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 33), ('earlier year', 32), ('minimum alternate tax credit entitlement', 31), ('prior year', 26), ('provision for taxation previous year', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), ('current tax', 34), ('provision for taxation previous year', 34), ('deferred tax', 30), ('prior year', 29), ('earlier year', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('amount transferred to retained earnings', 45), ('provision for taxation previous year', 41), ('minimum alternate tax credit entitlement', 39), ('current tax', 35), ('earlier year', 30), ('prior year', 27), ('deferred tax', 23)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('minimum alternate tax credit entitlement', 57), ('amount transferred to retained earnings', 43), ('deferred tax', 42), ('current tax', 40), ('provision for taxation previous year', 38), ('prior year', 29), ('earlier year', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 37), ('earlier year', 29), ('deferred tax', 27), ('current tax', 26), ('prior year', 26)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 36), ('current tax', 26), ('prior year', 24), ('earlier year', 23), ('deferred tax', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 54), ('amount transferred to retained earnings', 39), ('minimum alternate tax credit entitlement', 35), ('earlier year', 33), ('prior year', 31), ('current tax', 30), ('deferred tax', 28)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 51), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 35), ('prior year', 35), ('current tax', 31), ('deferred tax', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('provision for taxation previous year', 37), ('amount transferred to retained earnings', 34), ('prior year', 33), ('earlier year', 31), ('current tax', 26), ('deferred tax', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('provision for taxation previous year', 32), ('prior year', 32), ('current tax', 31), ('deferred tax', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('provision for taxation previous year', 48), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 36), ('earlier year', 32), ('prior year', 30), ('current tax', 26), ('deferred tax', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('provision for taxation previous year', 32), ('prior year', 32), ('current tax', 31), ('deferred tax', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('share of', 0), ('share in', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('prior period', 32), ('exceptional', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('prior period', 31), ('exceptional', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('prior period', 61), ('exceptional', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('exceptional', 32), ('prior period', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('prior period', 27), ('exceptional', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('prior period', 47), ('exceptional', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('prior period', 33), ('exceptional', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('prior period', 29), ('exceptional', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('prior period', 26), ('exceptional', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('prior period', 38), ('exceptional', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('prior period', 44), ('exceptional', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('prior period', 30), ('exceptional', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('prior period', 32), ('exceptional', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('prior period', 30), ('exceptional', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('prior period', 27), ('exceptional', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('prior period', 32), ('exceptional', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('exceptional', 36), ('prior period', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('prior period', 31), ('exceptional', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('prior period', 61), ('exceptional', 35)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 33), ('exceptional', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('exceptional', 32), ('prior period', 32)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('prior period', 27), ('exceptional', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('prior period', 47), ('exceptional', 29)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('prior period', 33), ('exceptional', 27)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('prior period', 29), ('exceptional', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('prior period', 26), ('exceptional', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('prior period', 38), ('exceptional', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('prior period', 44), ('exceptional', 15)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('prior period', 30), ('exceptional', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('prior period', 32), ('exceptional', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('prior period', 30), ('exceptional', 24)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-13 15:02:27+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-13 15:02:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('NULL', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('NULL', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('NULL', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('NULL', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('NULL', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-13 15:02:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-13 15:02:27+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = cost of goods and services sold , res_fuzz_match = [('NULL', 14)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = occupancy , res_fuzz_match = [('NULL', 22)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other gains net , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = operating profit , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = finance expenses , res_fuzz_match = [('NULL', 12)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total finance income , res_fuzz_match = [('NULL', 18)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of profit of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = income tax benefit/(expense) , res_fuzz_match = [('NULL', 7)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = item that may be reclassified to profit or loss , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive profit/(loss) of equity accounted investees , res_fuzz_match = [('NULL', 10)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = other comprehensive profit/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year , res_fuzz_match = [('NULL', 13)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = profit/(loss) is attributable to: , res_fuzz_match = [('NULL', 17)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = total comprehensive profit/(loss) for the year is attributable to: , res_fuzz_match = [('NULL', 11)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - txt_particular = owners of jera australia pty ltd , res_fuzz_match = [('NULL', 19)]
2023-04-13 15:02:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-18 14:13:32+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-18 14:13:32+0530 - sLogger - DEBUG - {'fileid': 'b3aa971f-8782-43f3-ab8e-2307fa02663f', 'filename': 'Spicers Annual Report 2022 (final).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Spicers Annual Report 2022 (final).pdf'}
2023-04-18 14:13:32+0530 - sLogger - DEBUG - save file completed
2023-04-18 14:13:32+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-18 14:13:32+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-18 14:13:32+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-18 14:13:32+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-18 14:13:32+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-18 14:13:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:13:32+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:13:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:13:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:13:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:13:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:13:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:13:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:13:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:13:38+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:13:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:13:38+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:13:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:13:38+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:13:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:13:38+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:13:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:13:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:13:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:13:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:13:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:13:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:13:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:13:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:13:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:13:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:13:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:13:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:13:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:13:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:13:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:13:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:13:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:13:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:13:57+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:13:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:13:57+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:05+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:05+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:09+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:40+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:40+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:14:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:14:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:14:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:14:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:14:54+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:14:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:14:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:08+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:08+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:42+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:42+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:15:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:15:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:15:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:15:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:15:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:15:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:15:59+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:16:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:16:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:16:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:16:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:16:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:16:05+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:16:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:16:05+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:16:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:16:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:16:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:16:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:16:14+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:16:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:16:14+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:16:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:16:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:16:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:16:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:16:28+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:16:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:16:28+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:16:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:16:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:16:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:16:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:16:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:16:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:16:42+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:16:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:16:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:16:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:16:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:16:55+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:16:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:16:55+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:09+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:17:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:17:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:17:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:32+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:17:32+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:40+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:17:40+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:49+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 14:17:49+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 14:17:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 14:17:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 14:17:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 14:17:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 14:17:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 14:17:53+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-18 14:17:53+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [9, 24], 'predicted_cpl_pages': [7, 8], 'predicted_ccf_pages': [11], 'filtered_cbs_pages': [9], 'filtered_cpl_pages': [8, 7], 'filtered_ccf_pages': [11], 'month': 'december'}
2023-04-18 14:17:53+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-18 14:17:53+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-18 14:17:53+0530 - sLogger - DEBUG - process file completed
2023-04-18 14:17:53+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-18 14:17:53+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-18 14:17:53+0530 - sLogger - DEBUG - TE process file started
2023-04-18 14:23:00+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-18 14:23:00+0530 - sLogger - DEBUG - process_main_pages started
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_years_and_positions_with_notes
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_years_and_positions_with_notes
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-18 14:23:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 14:23:00+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-04-18 14:23:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:02:39+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-18 15:02:39+0530 - sLogger - DEBUG - {'fileid': '889f26b3-1999-41f1-8504-489f71eb6872', 'filename': 'Spicers Annual Report 2022 (final).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Spicers Annual Report 2022 (final).pdf'}
2023-04-18 15:02:39+0530 - sLogger - DEBUG - save file completed
2023-04-18 15:02:39+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-18 15:02:39+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-18 15:02:39+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-18 15:02:39+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-18 15:02:39+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-18 15:02:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:02:39+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:02:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:02:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:02:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:02:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:02:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:02:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:02:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:02:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:02:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:02:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:02:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:02:45+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:02:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:02:45+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:02:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:02:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:02:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:02:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:02:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:02:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:02:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:21+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:21+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:26+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:26+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:30+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:30+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:48+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:48+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:03:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:03:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:03:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:03:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:03:56+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:03:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:03:56+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:02+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:02+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:08+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:08+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:17+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:17+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:30+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:30+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:51+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:51+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:04:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:04:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:04:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:04:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:04:59+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:04:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:04:59+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:05:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:05:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:05:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:05:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:05:08+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:05:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:05:08+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:05:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:05:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:05:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:05:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:05:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:05:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:05:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:05:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:05:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:05:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:05:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:05:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:05:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:05:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:05:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:05:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:05:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:05:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:05:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:05:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:05:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:05:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:05:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:05:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:05:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:05:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:05:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:05:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:31+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:31+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:49+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:49+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:06:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:06:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:06:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:06:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:06:58+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:06:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:06:59+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:07:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:07:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:07:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:07:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:07:03+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:07:03+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-18 15:07:03+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [9, 24], 'predicted_cpl_pages': [7, 8], 'predicted_ccf_pages': [11], 'filtered_cbs_pages': [9], 'filtered_cpl_pages': [8, 7], 'filtered_ccf_pages': [11], 'month': 'december'}
2023-04-18 15:07:03+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-18 15:07:03+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-18 15:07:03+0530 - sLogger - DEBUG - process file completed
2023-04-18 15:07:03+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-18 15:07:03+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-18 15:07:03+0530 - sLogger - DEBUG - TE process file started
2023-04-18 15:12:10+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-18 15:12:10+0530 - sLogger - DEBUG - process_main_pages started
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_years_and_positions_with_notes
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_years_and_positions_with_notes
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-18 15:12:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:12:10+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-04-18 15:12:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:28:50+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-18 15:28:50+0530 - sLogger - DEBUG - {'fileid': '9fe68124-d5a0-44eb-be74-7d73ae6da0c7', 'filename': 'Spicers Annual Report 2022 (final).pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Spicers Annual Report 2022 (final).pdf'}
2023-04-18 15:28:50+0530 - sLogger - DEBUG - save file completed
2023-04-18 15:28:50+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-18 15:28:50+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-18 15:28:50+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-18 15:28:50+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-18 15:28:50+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-18 15:28:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:28:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:28:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:28:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:28:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:28:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:28:52+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:28:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:28:53+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:28:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:28:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:28:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:28:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:28:56+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:28:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:28:56+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:11+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:11+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:23+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:23+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:31+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:31+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:36+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:46+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:46+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:29:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:29:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:29:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:29:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:29:59+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:29:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:29:59+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:06+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:06+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:19+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:19+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:27+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:27+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:36+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:41+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:46+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:46+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:30:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:30:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:30:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:30:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:30:53+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:30:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:30:54+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:31:01+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:31:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:31:01+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:31:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:31:01+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:31:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:31:01+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:31:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:31:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:31:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:31:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:31:09+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:31:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:31:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:31:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:31:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:31:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:31:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:31:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:31:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:31:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:31:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:31:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:31:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:31:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:31:24+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:31:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:31:24+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:31:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:31:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:31:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:31:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:31:33+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:31:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:31:33+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:31:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:31:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:31:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:31:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:31:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:31:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:31:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:32:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:32:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:32:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:32:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:32:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:32:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:32:01+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:32:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:32:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:32:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:32:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:32:14+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:32:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:32:14+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:32:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:32:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:32:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:32:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:32:28+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:32:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:32:28+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:32:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:32:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:32:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:32:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:32:42+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:32:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:32:42+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:32:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:32:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:32:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:32:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:32:47+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:32:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:32:47+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:32:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:32:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:32:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:32:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:32:52+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:32:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:32:52+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:33:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:33:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:33:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:33:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:33:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:33:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:33:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:33:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:33:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:33:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:33:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:33:09+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:33:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-18 15:33:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-18 15:33:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-18 15:33:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-18 15:33:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-18 15:33:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-18 15:33:14+0530 - sLogger - DEBUG - function: predict completed.
2023-04-18 15:33:14+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-18 15:33:14+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [9, 24], 'predicted_cpl_pages': [7, 8], 'predicted_ccf_pages': [11], 'filtered_cbs_pages': [9], 'filtered_cpl_pages': [8, 7], 'filtered_ccf_pages': [11], 'month': 'december'}
2023-04-18 15:33:14+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-18 15:33:14+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-18 15:33:14+0530 - sLogger - DEBUG - process file completed
2023-04-18 15:33:14+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-18 15:33:14+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-18 15:33:14+0530 - sLogger - DEBUG - TE process file started
2023-04-18 15:38:20+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-18 15:38:20+0530 - sLogger - DEBUG - process_main_pages started
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_years_and_positions_with_notes
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring started
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_years_and_positions_with_notes
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: list index out of range
2023-04-18 15:38:20+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-18 15:38:20+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-04-18 15:38:20+0530 - sLogger - DEBUG - start_refactoring completed
