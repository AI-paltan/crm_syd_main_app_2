2023-05-23 09:15:16+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-05-23 09:15:16+0530 - sLogger - DEBUG - {'fileid': '862fd028-0572-4c67-b6fe-2b07b4cc4253', 'filename': 'ASIC Form 388 and PAPL Financial Report for year ending 31 December 2022 (30 Apr 2022) v.1.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/ASIC Form 388 and PAPL Financial Report for year ending 31 December 2022 (30 Apr 2022) v.1.pdf'}
2023-05-23 09:15:16+0530 - sLogger - DEBUG - save file completed
2023-05-23 09:15:16+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-05-23 09:15:16+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-05-23 09:15:16+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-05-23 09:15:16+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-05-23 09:15:16+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-05-23 09:15:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:16+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:20+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:20+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:20+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:20+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:23+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:23+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:25+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:25+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:33+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:33+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:40+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:40+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:43+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:43+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:48+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:48+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:52+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:52+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:15:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:15:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:15:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:15:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:15:56+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:15:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:15:56+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:00+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:00+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:04+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:04+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:14+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:15+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:23+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:23+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:32+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:32+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:43+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:43+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:16:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:16:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:16:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:16:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:16:52+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:16:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:16:53+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:17:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:17:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:17:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:17:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:17:03+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:17:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:17:03+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:17:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:17:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:17:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:17:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:17:13+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:17:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:17:13+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:17:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:17:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:17:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:17:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:17:25+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:17:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:17:25+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:17:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:17:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:17:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:17:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:17:34+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:17:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:17:34+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:17:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:17:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:17:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:17:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:17:45+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:17:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:17:45+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:17:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:17:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:17:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:17:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:17:54+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:17:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:17:54+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:00+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:00+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:04+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:04+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:09+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:09+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:15+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:15+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:21+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:22+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:27+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:27+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:33+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:33+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:40+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:40+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:43+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:43+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:48+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:49+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:54+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:54+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:18:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:18:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:18:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:18:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:18:58+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:18:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:18:58+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:02+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:19:02+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:08+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:19:08+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:13+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:19:13+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:17+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:19:17+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:24+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:19:24+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:32+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:19:32+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:19:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:19:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:19:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:19:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:19:36+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:19:36+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-05-23 09:19:36+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [8], 'predicted_cpl_pages': [7], 'predicted_ccf_pages': [10], 'filtered_cbs_pages': [8], 'filtered_cpl_pages': [7], 'filtered_ccf_pages': [10], 'month': 'december'}
2023-05-23 09:19:36+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-05-23 09:19:36+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-05-23 09:19:36+0530 - sLogger - DEBUG - process file completed
2023-05-23 09:19:36+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-05-23 09:19:36+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-05-23 09:19:36+0530 - sLogger - DEBUG - TE process file started
2023-05-23 09:25:11+0530 - sLogger - DEBUG - TE Proces file completed
2023-05-23 09:25:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-05-23 09:25:11+0530 - sLogger - DEBUG - process_main_pages started
2023-05-23 09:25:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:25:11+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:25:11+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:25:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:25:11+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:25:11+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:25:11+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:25:11+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:25:11+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:28:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-05-23 09:28:50+0530 - sLogger - DEBUG - process_main_pages started
2023-05-23 09:28:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:28:50+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:28:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:28:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:28:50+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:28:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:28:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:28:50+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:28:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:49:56+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-05-23 09:49:56+0530 - sLogger - DEBUG - {'fileid': '80005971-6596-4ce5-a9b1-45606faa3155', 'filename': 'Audit Report Fuji SMBE Harwal 2022.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Audit Report Fuji SMBE Harwal 2022.pdf'}
2023-05-23 09:49:56+0530 - sLogger - DEBUG - save file completed
2023-05-23 09:49:56+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-05-23 09:49:56+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-05-23 09:49:56+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-05-23 09:49:56+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-05-23 09:49:56+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-05-23 09:49:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:49:56+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:49:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:49:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:49:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:49:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:49:59+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:49:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:49:59+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:07+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:07+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:11+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:11+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:15+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:15+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:19+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:20+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:23+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:23+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:27+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:27+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:31+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:31+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:36+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:36+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:44+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:44+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:50:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:50:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:50:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:50:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:50:56+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:50:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:50:56+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:05+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:05+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:10+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:10+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:16+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:16+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:21+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:21+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:28+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:28+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:34+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:35+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:39+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:39+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:47+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:47+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:51:54+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:51:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:51:54+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:51:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:51:54+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:51:54+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:51:54+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:02+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:02+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:07+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:07+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:15+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:15+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:21+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:21+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:27+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:27+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:31+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:31+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:38+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:38+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:38+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 09:52:38+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 09:52:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 09:52:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 09:52:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 09:52:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 09:52:45+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 09:52:46+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-05-23 09:52:46+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6], 'predicted_cpl_pages': [5], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5], 'filtered_ccf_pages': [8], 'month': 'december'}
2023-05-23 09:52:46+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-05-23 09:52:46+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-05-23 09:52:46+0530 - sLogger - DEBUG - process file completed
2023-05-23 09:52:46+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-05-23 09:52:46+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-05-23 09:52:46+0530 - sLogger - DEBUG - TE process file started
2023-05-23 09:56:02+0530 - sLogger - DEBUG - TE Proces file completed
2023-05-23 09:56:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-05-23 09:56:02+0530 - sLogger - DEBUG - process_main_pages started
2023-05-23 09:56:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:56:02+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:56:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:56:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:56:02+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:56:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:56:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 09:56:02+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 09:56:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 09:56:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-05-23 09:56:02+0530 - sLogger - DEBUG - set_section_details started
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Other assets Total current assets | [('current assets', 59), ('noncurrent assets', 45), ('current liabilities', 44), ('equity and liabilities', 33), ('assets', 28), ('noncurrent liabilities', 27), ('equity liabilities', 27), ('equity', 16), ('liabilities', 11)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD current assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD current liabilities | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD noncurrent assets | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD noncurrent liabilities | score 50
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD non current assets | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD non current liabilities | score 50
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD equity and liabilities | score 33
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD equity | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Other assets Total current assets | [('current assets', 59), ('noncurrent assets', 45), ('current liabilities', 44), ('equity and liabilities', 33), ('assets', 28), ('noncurrent liabilities', 27), ('equity liabilities', 27), ('equity', 16), ('liabilities', 11)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD current assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD current liabilities | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD noncurrent assets | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD noncurrent liabilities | score 50
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD non current assets | score 86
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD non current liabilities | score 50
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD equity and liabilities | score 33
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Other assets Total current assets | MATCH WORD equity | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-05-23 09:56:02+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-05-23 09:56:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Contract liabilities | [('current liabilities', 69), ('liabilities', 57), ('equity liabilities', 57), ('equity and liabilities', 56), ('noncurrent liabilities', 41), ('current assets', 21), ('noncurrent assets', 21), ('assets', 20), ('equity', 19)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD current assets | score 41
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD current liabilities | score 77
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD noncurrent assets | score 43
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD noncurrent liabilities | score 76
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD non current assets | score 42
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD non current liabilities | score 74
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD equity and liabilities | score 67
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Lease liabilities Total noncurrent liabilities | [('noncurrent liabilities', 61), ('equity and liabilities', 45), ('noncurrent assets', 44), ('equity liabilities', 44), ('current assets', 36), ('current liabilities', 35), ('liabilities', 32), ('assets', 16), ('equity', 16)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD current liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD non current assets | score 60
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD equity and liabilities | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Lease liabilities Total noncurrent liabilities | [('noncurrent liabilities', 61), ('equity and liabilities', 45), ('noncurrent assets', 44), ('equity liabilities', 44), ('current assets', 36), ('current liabilities', 35), ('liabilities', 32), ('assets', 16), ('equity', 16)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD current liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD non current assets | score 60
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD equity and liabilities | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Lease liabilities Total noncurrent liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('current liabilities', 48), ('current assets', 42), ('assets', 38), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-05-23 09:56:03+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-05-23 09:56:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-05-23 09:56:03+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-05-23 09:56:03+0530 - sLogger - DEBUG - set_section_details started
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities: Receipts from customers | operating profit before changes in assets and liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest and other finance costs paid | operating profit before changes in assets and liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Management fee income Income taxes paid | operating profit before working capital changes
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) operating activities | adjustments for increase decrease in operating assets
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities: | movements in working capital
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of property, plant and equipment | operating profit before changes in assets and liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from borrowings | operating cash flow before working capital changes
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net movements in related party transactions Interest payment for lease liabilities | adjustments for increase decrease in operating liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for lease liabilities | adjustments for increase decrease in operating liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from financing activities | operating cash flow before working capital changes
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase/decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-05-23 09:56:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 09:56:04+0530 - sLogger - ERROR - error occured: 'year'
2023-05-23 09:56:04+0530 - sLogger - DEBUG - process_main_pages completed
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('bank balances other than above', 48), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 43), ('other bank balances', 42), ('cash and cash equivalents', 38), (' cash and cash equivalents', 38), ('cash and bank balances', 27)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('bank balances other than above', 48), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 43), ('other bank balances', 42), ('cash and cash equivalents', 38), (' cash and cash equivalents', 38), ('cash and bank balances', 27)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('bank balances other than above', 48), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 43), ('other bank balances', 42), ('cash and cash equivalents', 38), (' cash and cash equivalents', 38), ('cash and bank balances', 27)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('bank balances other than above', 48), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 43), ('other bank balances', 42), ('cash and cash equivalents', 38), (' cash and cash equivalents', 38), ('cash and bank balances', 27)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), ('other current financial assets', 66), ('other financial assets', 56), ('other assets', 52), ('prepayments', 16)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), ('other current financial assets', 66), ('other financial assets', 56), ('other assets', 52), ('prepayments', 16)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), ('other current financial assets', 66), ('other financial assets', 56), ('other assets', 52), ('prepayments', 16)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), ('other current financial assets', 66), ('other financial assets', 56), ('other assets', 52), ('prepayments', 16)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:04+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 09:56:04+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), (' other current assets', 76), (' other financial assets', 56), ('other assets', 52), (' trade and other receivables', 42), (' deferred operating expenditure', 38), (' biological assets', 37), (' financial assets', 36), (' income tax receivable from related parties', 34)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), (' other current assets', 76), (' other financial assets', 56), ('other assets', 52), (' trade and other receivables', 42), (' deferred operating expenditure', 38), (' biological assets', 37), (' financial assets', 36), (' income tax receivable from related parties', 34)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 13773393.0, 'line_item_label': ['Current assets', 'Trade and other receivables'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 13773393.0]}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), (' other current assets', 76), (' other financial assets', 56), ('other assets', 52), (' trade and other receivables', 42), (' deferred operating expenditure', 38), (' biological assets', 37), (' financial assets', 36), (' income tax receivable from related parties', 34)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('other current assets', 76), (' other current assets', 76), (' other financial assets', 56), ('other assets', 52), (' trade and other receivables', 42), (' deferred operating expenditure', 38), (' biological assets', 37), (' financial assets', 36), (' income tax receivable from related parties', 34)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 25532182.0, 'line_item_label': ['Current assets', 'Trade and other receivables'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 25532182.0]}
2023-05-23 09:56:04+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:04+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets trade receivables , res_fuzz_match = [('current', 100), (' current investments', 71), (' interest receivable', 67), ('other assets', 64), (' related party receivable', 61), (' long service leave receivable', 57), (' rental bond', 55), (' share of jv prepayments', 50), (' other deposits receivable - related party', 46), (' accrued interest', 43), (' related party disclosures', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' derivative contracts - fair value', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued rebates', 36), (' lng', 33), (' deposits', 29)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets other receivables , res_fuzz_match = [('current', 100), (' other', 100), (' current investments', 71), (' interest receivable', 67), ('other assets', 64), (' related party receivable', 61), (' long service leave receivable', 58), (' rental bond', 55), (' other receivables - related party', 50), (' other deposits receivable - related party', 46), (' accrued interest', 43), (' related party disclosures', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 39), (' income tax receivable from related parties', 38), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' accrued rebates', 36), (' lng', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets amounts due from other related parties (note 25) amounts due from other related parties (note 25) amounts due from other related parties (note 25) , res_fuzz_match = [('current', 100), (' other', 100), ('other assets', 73), (' related party receivable', 72), (' other receivables - related party', 71), (' current investments', 71), (' related party disclosures', 67), (' amount receivable from controlling entity', 67), (' income tax receivable from related parties', 64), (' other deposits receivable - related party', 62), (' rental bond', 55), (' accrued rebates', 55), (' bank guarantee', 54), (' other debtors and prepayments', 52), (' derivative contracts - fair value', 50), (' share of jv prepayments', 50), (' interest receivable', 47), (' electricity derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' forward exchange contracts', 38), (' lng', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('current', 100), (' current investments', 69), ('other assets', 64), (' accrued interest', 48), (' rental bond', 48), (' income tax receivable from related parties', 46), (' other receivables - related party', 46), (' other deposits receivable - related party', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' accrued rebates', 45), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' interest receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31), (' deposits', 29), (' other', 20)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets trade receivables , res_fuzz_match = [('current', 100), (' current investments', 71), (' interest receivable', 67), ('other assets', 64), (' related party receivable', 61), (' long service leave receivable', 57), (' rental bond', 55), (' share of jv prepayments', 50), (' other deposits receivable - related party', 46), (' accrued interest', 43), (' related party disclosures', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' derivative contracts - fair value', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued rebates', 36), (' lng', 33), (' deposits', 29)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets other receivables , res_fuzz_match = [('current', 100), (' other', 100), (' current investments', 71), (' interest receivable', 67), ('other assets', 64), (' related party receivable', 61), (' long service leave receivable', 58), (' rental bond', 55), (' other receivables - related party', 50), (' other deposits receivable - related party', 46), (' accrued interest', 43), (' related party disclosures', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 39), (' income tax receivable from related parties', 38), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' accrued rebates', 36), (' lng', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets amounts due from other related parties (note 25) amounts due from other related parties (note 25) amounts due from other related parties (note 25) , res_fuzz_match = [('current', 100), (' other', 100), ('other assets', 73), (' related party receivable', 72), (' other receivables - related party', 71), (' current investments', 71), (' related party disclosures', 67), (' amount receivable from controlling entity', 67), (' income tax receivable from related parties', 64), (' other deposits receivable - related party', 62), (' rental bond', 55), (' accrued rebates', 55), (' bank guarantee', 54), (' other debtors and prepayments', 52), (' derivative contracts - fair value', 50), (' share of jv prepayments', 50), (' interest receivable', 47), (' electricity derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' forward exchange contracts', 38), (' lng', 33)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('current', 100), (' current investments', 69), ('other assets', 64), (' accrued interest', 48), (' rental bond', 48), (' income tax receivable from related parties', 46), (' other receivables - related party', 46), (' other deposits receivable - related party', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' accrued rebates', 45), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' interest receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31), (' deposits', 29), (' other', 20)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 09:56:04+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [8685215.0, 114913.0, 16732054.0, 25532182.0, 10429241.0, 66573.0, 3277579.0, 13773393.0], 'label': ['Current assets Trade receivables  ', 'Current assets Other receivables  ', 'Current assets Amounts due from other related parties (note 25) Amounts due from other related parties (note 25) Amounts due from other related parties (note 25)', 'Current assets   ', 'Current assets Trade receivables  ', 'Current assets Other receivables  ', 'Current assets Amounts due from other related parties (note 25) Amounts due from other related parties (note 25) Amounts due from other related parties (note 25)', 'Current assets   '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('current assets', 59)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('current assets', 59)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('current assets', 59)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('current assets', 59)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 91, 'value': 0.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 91, 'value': 0.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('accumulated depreciation', 47), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6, 9, 12, 15, 18, 22, 24, 27, 30, 33, 36, 39], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [-180000.0, -1311336.0, -127742.0, -197972.0, -162781.0, -26911.0, -221230.0, -180000.0, -1145251.0, -83157.0, -175681.0, -143681.0, -23666.0, -140419.0], 'label': ['Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 8, 11, 14, 17, 21, 23, 26, 29, 32, 35, 38], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [180000.0, 2566334.0, 558880.0, 274537.0, 213575.0, 37409.0, 624496.0, 180000.0, 2508553.0, 540040.0, 274537.0, 180456.0, 34484.0, 553155.0], 'label': ['Non-current assets Leasehold improvements at cost', 'Non-current assets Plant and equipment - at cost', 'Non-current assets Furniture, fittings and fixtures at cost', 'Non-current assets Motor vehicles at cost', 'Non-current assets Computer equipment at cost', 'Non-current assets Office equipment at cost', 'Non-current assets Tools and dies at cost', 'Non-current assets Leasehold improvements at cost', 'Non-current assets Plant and equipment - at cost', 'Non-current assets Furniture, fittings and fixtures at cost', 'Non-current assets Motor vehicles at cost', 'Non-current assets Computer equipment at cost', 'Non-current assets Office equipment at cost', 'Non-current assets Tools and dies at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 91, 'value': 0.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 91, 'value': 0.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 0.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['11'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 0.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['11'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 534241.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [534241.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 706765.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [706765.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax expense , res_fuzz_match = [('deferred tax assets', 73), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense prior year tax adjustment , res_fuzz_match = [('deferred tax assets', 67), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense research and development tax offset , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 44)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: research and development rebate , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: tax true up , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: non-allowable items , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax adjustment from prior year , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets provisions , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets unrealised foreign exchange gain (loss) , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets accruals, amortisation and superannuation , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets total deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: opening balance , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: credited to profit or loss current year movement , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: charged to profit or loss prior period correction , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: closing balance , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax expense , res_fuzz_match = [('deferred tax assets', 73), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense prior year tax adjustment , res_fuzz_match = [('deferred tax assets', 67), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense research and development tax offset , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 44)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: research and development rebate , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: tax true up , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: non-allowable items , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax adjustment from prior year , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 50)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' deferred tax balances', 50), ('deferred tax assets', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets provisions , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets unrealised foreign exchange gain (loss) , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets accruals, amortisation and superannuation , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = deferred tax assets total deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: opening balance , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: credited to profit or loss current year movement , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: charged to profit or loss prior period correction , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: closing balance , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15, 16, 17, 38, 39, 40, 41], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [510102.0, 68732.0, 127931.0, 706765.0, 383545.0, 18900.0, 131796.0, 534241.0], 'label': ['Deferred tax assets Provisions', 'Deferred tax assets Unrealised foreign exchange gain (loss)', 'Deferred tax assets Accruals, amortisation and superannuation', 'Deferred tax assets Total deferred tax assets', 'Deferred tax assets Provisions', 'Deferred tax assets Unrealised foreign exchange gain (loss)', 'Deferred tax assets Accruals, amortisation and superannuation', 'Deferred tax assets Total deferred tax assets'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('non-current', 100), (' total. properties', 43), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), ('finance receivables', 38), (' allowance for expected credit losses', 36), (' electricity derivatives at fair value', 36), (' warehouse and office equipment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 50), ('finance receivables', 46), (' exploration and evaluation expenditure', 44), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), (' defined benefit plans', 39), (' electricity derivatives at fair value', 36), (' total. properties', 36), (' motor vehicles', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('non-current', 100), (' defined benefit plans', 50), (' electricity derivatives at fair value', 45), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' warehouse and office equipment', 38), (' total. properties', 36), (' motor vehicles', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('non-current', 100), (' motor vehicles', 100), (' total. properties', 43), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' electricity derivatives at fair value', 36), (' warehouse and office equipment', 33), (' exploration and evaluation expenditure', 30), (' defined benefit plans', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 46), (' total. properties', 43), (' motor vehicles', 42), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' defined benefit plans', 33), (' exploration and evaluation expenditure', 33), (' electricity derivatives at fair value', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 67), ('finance receivables', 46), (' allowance for expected credit losses', 43), (' electricity derivatives at fair value', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' total. properties', 36), (' motor vehicles', 33), (' exploration and evaluation expenditure', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 43), (' right-of-use-assets', 40), (' defined benefit plans', 39), ('finance receivables', 38), (' exploration and evaluation expenditure', 37), (' allowance for expected credit losses', 36), (' total. properties', 36), (' motor vehicles', 33), (' electricity derivatives at fair value', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('non-current', 100), (' total. properties', 43), (' motor vehicles', 42), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), ('finance receivables', 38), (' allowance for expected credit losses', 36), (' electricity derivatives at fair value', 36), (' warehouse and office equipment', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 50), ('finance receivables', 46), (' exploration and evaluation expenditure', 44), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), (' defined benefit plans', 39), (' electricity derivatives at fair value', 36), (' total. properties', 36), (' motor vehicles', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('non-current', 100), (' defined benefit plans', 50), (' electricity derivatives at fair value', 45), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' warehouse and office equipment', 38), (' total. properties', 36), (' motor vehicles', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('non-current', 100), (' motor vehicles', 100), (' total. properties', 43), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' electricity derivatives at fair value', 36), (' warehouse and office equipment', 33), (' exploration and evaluation expenditure', 30), (' defined benefit plans', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 46), (' total. properties', 43), (' motor vehicles', 42), (' right-of-use-assets', 40), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' defined benefit plans', 33), (' exploration and evaluation expenditure', 33), (' electricity derivatives at fair value', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 67), ('finance receivables', 46), (' allowance for expected credit losses', 43), (' electricity derivatives at fair value', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' total. properties', 36), (' motor vehicles', 33), (' exploration and evaluation expenditure', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('non-current', 100), (' warehouse and office equipment', 43), (' right-of-use-assets', 40), (' defined benefit plans', 39), ('finance receivables', 38), (' exploration and evaluation expenditure', 37), (' allowance for expected credit losses', 36), (' total. properties', 36), (' motor vehicles', 33), (' electricity derivatives at fair value', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('non-current', 100), ('finance receivables', 46), (' total. properties', 43), (' exploration and evaluation expenditure', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' warehouse and office equipment', 38), (' electricity derivatives at fair value', 36), (' motor vehicles', 33), (' allowance for expected credit losses', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('non-current', 100), (' right-of-use-assets', 54), ('finance receivables', 38), (' allowance for expected credit losses', 38), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' motor vehicles', 33), (' defined benefit plans', 31), (' total. properties', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('non-current', 0), ('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total. properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [180000.0, -180000.0, 2566334.0, -1311336.0, 1254998.0, 558880.0, -127742.0, 431138.0, 274537.0, -197972.0, 76565.0, 213575.0, -162781.0, 50794.0, 37409.0, -26911.0, 10498.0, 624496.0, -221230.0, 403266.0, 2227259.0, 180000.0, -180000.0, 2508553.0, -1145251.0, 1363302.0, 540040.0, -83157.0, 456883.0, 274537.0, -175681.0, 98856.0, 180456.0, -143681.0, 36775.0, 34484.0, -23666.0, 10818.0, 553155.0, -140419.0, 412736.0, 2379370.0], 'label': ['Non-current assets Leasehold improvements at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Plant and equipment - at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Furniture, fittings and fixtures at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Motor vehicles at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Computer equipment at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Office equipment at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Tools and dies at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets ', 'Non-current assets Leasehold improvements at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Plant and equipment - at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Furniture, fittings and fixtures at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Motor vehicles at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Computer equipment at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Office equipment at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets Tools and dies at cost', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets ', 'Non-current assets '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [(' defined benefit plans', 61), ('finance receivables', 46), (' warehouse and office equipment', 46), ('non-current', 43), (' motor vehicles', 42), (' electricity derivatives at fair value', 41), (' exploration and evaluation expenditure', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), ('finance receivables', 38), (' electricity derivatives at fair value', 37), (' allowance for expected credit losses', 35), (' right-of-use-assets', 33), (' motor vehicles', 33), (' total. properties', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), ('finance receivables', 38), (' electricity derivatives at fair value', 37), (' allowance for expected credit losses', 35), (' right-of-use-assets', 33), (' motor vehicles', 33), (' total. properties', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), ('finance receivables', 38), (' electricity derivatives at fair value', 37), (' allowance for expected credit losses', 35), (' right-of-use-assets', 33), (' motor vehicles', 33), (' total. properties', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), ('finance receivables', 38), (' electricity derivatives at fair value', 37), (' allowance for expected credit losses', 35), (' right-of-use-assets', 33), (' motor vehicles', 33), (' total. properties', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [(' motor vehicles', 100), ('non-current', 43), (' electricity derivatives at fair value', 41), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' total. properties', 36), (' defined benefit plans', 33), (' right-of-use-assets', 33), (' warehouse and office equipment', 33), (' exploration and evaluation expenditure', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [(' motor vehicles', 100), ('non-current', 43), (' electricity derivatives at fair value', 41), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' total. properties', 36), (' defined benefit plans', 33), (' right-of-use-assets', 33), (' warehouse and office equipment', 33), (' exploration and evaluation expenditure', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [(' motor vehicles', 100), ('non-current', 43), (' electricity derivatives at fair value', 41), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' total. properties', 36), (' defined benefit plans', 33), (' right-of-use-assets', 33), (' warehouse and office equipment', 33), (' exploration and evaluation expenditure', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [(' motor vehicles', 100), ('non-current', 43), (' electricity derivatives at fair value', 41), (' allowance for expected credit losses', 39), ('finance receivables', 38), (' total. properties', 36), (' defined benefit plans', 33), (' right-of-use-assets', 33), (' warehouse and office equipment', 33), (' exploration and evaluation expenditure', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [(' warehouse and office equipment', 50), (' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' motor vehicles', 42), (' right-of-use-assets', 40), (' allowance for expected credit losses', 33), (' electricity derivatives at fair value', 32), ('finance receivables', 31), (' exploration and evaluation expenditure', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [(' warehouse and office equipment', 50), (' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' motor vehicles', 42), (' right-of-use-assets', 40), (' allowance for expected credit losses', 33), (' electricity derivatives at fair value', 32), ('finance receivables', 31), (' exploration and evaluation expenditure', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [(' warehouse and office equipment', 50), (' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' motor vehicles', 42), (' right-of-use-assets', 40), (' allowance for expected credit losses', 33), (' electricity derivatives at fair value', 32), ('finance receivables', 31), (' exploration and evaluation expenditure', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [(' warehouse and office equipment', 50), (' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' motor vehicles', 42), (' right-of-use-assets', 40), (' allowance for expected credit losses', 33), (' electricity derivatives at fair value', 32), ('finance receivables', 31), (' exploration and evaluation expenditure', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [(' warehouse and office equipment', 62), ('finance receivables', 46), ('non-current', 43), (' electricity derivatives at fair value', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' total. properties', 36), (' allowance for expected credit losses', 34), (' motor vehicles', 33), (' exploration and evaluation expenditure', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [(' warehouse and office equipment', 62), ('finance receivables', 46), ('non-current', 43), (' electricity derivatives at fair value', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' total. properties', 36), (' allowance for expected credit losses', 34), (' motor vehicles', 33), (' exploration and evaluation expenditure', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [(' warehouse and office equipment', 62), ('finance receivables', 46), ('non-current', 43), (' electricity derivatives at fair value', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' total. properties', 36), (' allowance for expected credit losses', 34), (' motor vehicles', 33), (' exploration and evaluation expenditure', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [(' warehouse and office equipment', 62), ('finance receivables', 46), ('non-current', 43), (' electricity derivatives at fair value', 41), (' right-of-use-assets', 40), (' defined benefit plans', 39), (' total. properties', 36), (' allowance for expected credit losses', 34), (' motor vehicles', 33), (' exploration and evaluation expenditure', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' motor vehicles', 42), (' warehouse and office equipment', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 32), (' electricity derivatives at fair value', 32), (' exploration and evaluation expenditure', 32), ('finance receivables', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' motor vehicles', 42), (' warehouse and office equipment', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 32), (' electricity derivatives at fair value', 32), (' exploration and evaluation expenditure', 32), ('finance receivables', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' motor vehicles', 42), (' warehouse and office equipment', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 32), (' electricity derivatives at fair value', 32), (' exploration and evaluation expenditure', 32), ('finance receivables', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [(' defined benefit plans', 50), ('non-current', 43), (' motor vehicles', 42), (' warehouse and office equipment', 38), (' total. properties', 36), (' right-of-use-assets', 33), (' allowance for expected credit losses', 32), (' electricity derivatives at fair value', 32), (' exploration and evaluation expenditure', 32), ('finance receivables', 31)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('finance receivables', 46), ('non-current', 43), (' exploration and evaluation expenditure', 43), (' warehouse and office equipment', 43), (' total. properties', 37), (' defined benefit plans', 36), (' allowance for expected credit losses', 29), (' electricity derivatives at fair value', 29), (' motor vehicles', 17), (' right-of-use-assets', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [(' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' allowance for expected credit losses', 39), (' electricity derivatives at fair value', 37), (' right-of-use-assets', 33), (' motor vehicles', 33), ('finance receivables', 31), (' exploration and evaluation expenditure', 26), (' warehouse and office equipment', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [(' allowance for expected credit losses', 60), (' exploration and evaluation expenditure', 60), (' electricity derivatives at fair value', 40), (' defined benefit plans', 40), (' right-of-use-assets', 40), ('finance receivables', 20), (' total. properties', 20), (' warehouse and office equipment', 20), (' motor vehicles', 20), ('non-current', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [(' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' allowance for expected credit losses', 39), (' electricity derivatives at fair value', 37), (' right-of-use-assets', 33), (' motor vehicles', 33), ('finance receivables', 31), (' exploration and evaluation expenditure', 26), (' warehouse and office equipment', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [(' exploration and evaluation expenditure', 57), (' allowance for expected credit losses', 43), (' defined benefit plans', 43), (' warehouse and office equipment', 37), (' electricity derivatives at fair value', 36), ('finance receivables', 31), (' total. properties', 30), (' motor vehicles', 25), (' right-of-use-assets', 21), ('non-current', 14)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [(' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' allowance for expected credit losses', 39), (' electricity derivatives at fair value', 37), (' right-of-use-assets', 33), (' motor vehicles', 33), ('finance receivables', 31), (' exploration and evaluation expenditure', 26), (' warehouse and office equipment', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('finance receivables', 54), (' electricity derivatives at fair value', 38), (' exploration and evaluation expenditure', 38), (' warehouse and office equipment', 38), (' total. properties', 32), (' allowance for expected credit losses', 31), (' defined benefit plans', 31), ('non-current', 29), (' motor vehicles', 25), (' right-of-use-assets', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [(' defined benefit plans', 44), ('non-current', 43), (' total. properties', 43), (' allowance for expected credit losses', 39), (' electricity derivatives at fair value', 37), (' right-of-use-assets', 33), (' motor vehicles', 33), ('finance receivables', 31), (' exploration and evaluation expenditure', 26), (' warehouse and office equipment', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 14, 15], 'score': [100, 100, 100, 100], 'value': [98856.0, 0.0, -22291.0, 76565.0], 'label': ['Furniture, fittings Motor vehicles Motor vehicles $', 'Furniture, fittings Motor vehicles Motor vehicles $', 'Furniture, fittings Motor vehicles Motor vehicles $', 'Furniture, fittings Motor vehicles Motor vehicles $'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), (' loans and borrowings', 33), (' bank overdraft', 28), ('short term debt', 27), ('short-term debt', 21), ('shortterm debt', 21), (' leases', 21), ('borrowings', 19), ('shortterm borrowings', 19)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('lease liabilities', 51), (' loans and borrowings', 38), ('short term debt', 30), ('short-term debt', 30), ('shortterm debt', 30), (' bank overdraft', 30), ('shortterm borrowings', 29), ('borrowings', 26), (' leases', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('lease liabilities', 51), (' loans and borrowings', 38), ('short term debt', 30), ('short-term debt', 30), ('shortterm debt', 30), (' bank overdraft', 30), ('shortterm borrowings', 29), ('borrowings', 26), (' leases', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('short-term debt', 35), ('shortterm debt', 35), (' bank overdraft', 35), ('short term debt', 33), (' leases', 31), ('lease liabilities', 30), (' loans and borrowings', 25), ('shortterm borrowings', 24), ('borrowings', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 100, 'value': 547413.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['18'], 'line_item_value': [547413.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), (' loans and borrowings', 33), (' bank overdraft', 28), ('short term debt', 27), ('short-term debt', 21), ('shortterm debt', 21), (' leases', 21), ('borrowings', 19), ('shortterm borrowings', 19)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('lease liabilities', 51), (' loans and borrowings', 38), ('short term debt', 30), ('short-term debt', 30), ('shortterm debt', 30), (' bank overdraft', 30), ('shortterm borrowings', 29), ('borrowings', 26), (' leases', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('lease liabilities', 51), (' loans and borrowings', 38), ('short term debt', 30), ('short-term debt', 30), ('shortterm debt', 30), (' bank overdraft', 30), ('shortterm borrowings', 29), ('borrowings', 26), (' leases', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('short-term debt', 35), ('shortterm debt', 35), (' bank overdraft', 35), ('short term debt', 33), (' leases', 31), ('lease liabilities', 30), (' loans and borrowings', 25), ('shortterm borrowings', 24), ('borrowings', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 100, 'value': 555318.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['18'], 'line_item_value': [555318.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities lease liability , res_fuzz_match = [('current', 100), (' leases', 100), (' current', 100), (' lease liabilities', 100), (' lease liabilities - current', 58), (' not later than 1 year', 47), (' secured long-term bank loans', 46), (' loans from related party', 38), (' utilised – bank borrowings', 35), (' bank overdraft', 29), (' balance at the end of period', 29), ('bank borrowings', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current liabilities lease liability , res_fuzz_match = [(' leases', 100), (' lease liabilities', 100), (' lease liabilities - current', 58), ('current', 57), (' current', 57), (' loans from related party', 43), (' not later than 1 year', 42), (' secured long-term bank loans', 42), ('bank borrowings', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 35), (' balance at the end of period', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' balance at the end of period', 43), (' secured long-term bank loans', 42), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities lease liability , res_fuzz_match = [('current', 100), (' leases', 100), (' current', 100), (' lease liabilities', 100), (' lease liabilities - current', 58), (' not later than 1 year', 47), (' secured long-term bank loans', 46), (' loans from related party', 38), (' utilised – bank borrowings', 35), (' bank overdraft', 29), (' balance at the end of period', 29), ('bank borrowings', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current liabilities lease liability , res_fuzz_match = [(' leases', 100), (' lease liabilities', 100), (' lease liabilities - current', 58), ('current', 57), (' current', 57), (' loans from related party', 43), (' not later than 1 year', 42), (' secured long-term bank loans', 42), ('bank borrowings', 36), (' bank overdraft', 36), (' utilised – bank borrowings', 35), (' balance at the end of period', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' balance at the end of period', 43), (' secured long-term bank loans', 42), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [555318.0, 1017566.0, 600721.0, 1047302.0, 1648023.0, 547413.0, 1358430.0, 603697.0, 1420842.0, 2024539.0], 'label': ['Current liabilities Lease liability', 'Non-current liabilities Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: ', 'Current liabilities Lease liability', 'Non-current liabilities Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current liabilities', 42), ('current maturities of long-term debt', 34), ('current maturities of longterm debt', 34), ('current maturities', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current liabilities', 42), ('current maturities of long-term debt', 34), ('current maturities of longterm debt', 34), ('current maturities', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33), ('other current liabilities', 28), ('other financial liabilities', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current liabilities', 42), ('current maturities of long-term debt', 34), ('current maturities of longterm debt', 34), ('current maturities', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current liabilities', 42), ('current maturities of long-term debt', 34), ('current maturities of longterm debt', 34), ('current maturities', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33), ('other current liabilities', 28), ('other financial liabilities', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('note payable(debt)', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('note payable(debt)', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('note payable(debt)', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('note payable(debt)', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('note payable(debt)', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('note payable(debt)', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('trade and other payables', 21), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 55), ('other trade payables', 42), ('small enterprises', 40), ('trade and other payables', 38), ('micro enterprises', 33), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('trade payable', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('outstanding dues of creditors other than micro enterprises and small enterprises', 24), ('total outstanding due of other creditors other than micro and small', 24)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other trade payables', 36), ('other than micro and small enterprises', 35), ('trade and other payables', 33), ('micro enterprises and small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 33), ('trade payable', 32), ('outstanding dues of micro enterprises and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('micro enterprises', 30), ('small enterprises', 30), ('accounts payable', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other trade payables', 36), ('other than micro and small enterprises', 35), ('trade and other payables', 33), ('micro enterprises and small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 33), ('trade payable', 32), ('outstanding dues of micro enterprises and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('micro enterprises', 30), ('small enterprises', 30), ('accounts payable', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('trade payable', 29), ('micro enterprises and small enterprises', 27), ('other than micro and small enterprises', 27), ('trade and other payables', 26), ('accounts payable', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('other trade payables', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 18), ('total outstanding due of other creditors other than micro and small', 17)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('trade and other payables', 21), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 55), ('other trade payables', 42), ('small enterprises', 40), ('trade and other payables', 38), ('micro enterprises', 33), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('trade payable', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('outstanding dues of creditors other than micro enterprises and small enterprises', 24), ('total outstanding due of other creditors other than micro and small', 24)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other trade payables', 36), ('other than micro and small enterprises', 35), ('trade and other payables', 33), ('micro enterprises and small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 33), ('trade payable', 32), ('outstanding dues of micro enterprises and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('micro enterprises', 30), ('small enterprises', 30), ('accounts payable', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other trade payables', 36), ('other than micro and small enterprises', 35), ('trade and other payables', 33), ('micro enterprises and small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 33), ('trade payable', 32), ('outstanding dues of micro enterprises and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('outstanding dues of creditors other than micro enterprises and small enterprises', 30), ('micro enterprises', 30), ('small enterprises', 30), ('accounts payable', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('trade payable', 29), ('micro enterprises and small enterprises', 27), ('other than micro and small enterprises', 27), ('trade and other payables', 26), ('accounts payable', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('other trade payables', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 18), ('total outstanding due of other creditors other than micro and small', 17)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35), ('trade and other payables', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44), ('trade and other payables', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 42), ('other liabilities', 41), ('trade and other payables', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 42), ('other liabilities', 41), ('trade and other payables', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other liabilities', 29), ('other current liabilities', 28), ('other current financial liabilities', 27), ('trade and other payables', 26), ('other financial liabilities', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35), ('trade and other payables', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44), ('trade and other payables', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 42), ('other liabilities', 41), ('trade and other payables', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 42), ('other liabilities', 41), ('trade and other payables', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other liabilities', 29), ('other current liabilities', 28), ('other current financial liabilities', 27), ('trade and other payables', 26), ('other financial liabilities', 21)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current tax liabilities', 67), ('tax', 67), (' income tax payable', 55)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('tax', 67), ('current tax liabilities', 61), (' income tax payable', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('tax', 67), ('current tax liabilities', 61), (' income tax payable', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('tax', 67), ('current tax liabilities', 44), (' income tax payable', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 0.0, 'line_item_label': ['Liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 50), ('tax', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current tax liabilities', 67), ('tax', 67), (' income tax payable', 55)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('tax', 67), ('current tax liabilities', 61), (' income tax payable', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('tax', 67), ('current tax liabilities', 61), (' income tax payable', 38)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('tax', 67), ('current tax liabilities', 44), (' income tax payable', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 0.0, 'line_item_label': ['Liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [(' financial liabilities', 69), (' foreign exchange contract liability', 65), ('other current liabilities', 57), (' other current liabilities', 57), (' other financial liabilities', 57), (' trade and other payables', 38), (' customer deposits', 28), (' employee benefits', 27), ('provisions', 19), (' deferred revenue', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [(' other financial liabilities', 50), (' financial liabilities', 43), ('other current liabilities', 42), (' other current liabilities', 42), (' foreign exchange contract liability', 35), (' trade and other payables', 33), (' customer deposits', 22), (' employee benefits', 21), (' deferred revenue', 18), ('provisions', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [(' other financial liabilities', 50), (' financial liabilities', 43), ('other current liabilities', 42), (' other current liabilities', 42), (' foreign exchange contract liability', 35), (' trade and other payables', 33), (' customer deposits', 22), (' employee benefits', 21), (' deferred revenue', 18), ('provisions', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' customer deposits', 43), (' employee benefits', 33), (' deferred revenue', 29), ('other current liabilities', 28), (' other current liabilities', 28), (' trade and other payables', 26), (' foreign exchange contract liability', 25), (' other financial liabilities', 21), (' financial liabilities', 17), ('provisions', 13)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 1132600.0, 'line_item_label': ['Current liabilities', 'Employee benefits'], 'note_numbers': [nan, '14'], 'line_item_value': [0.0, 1132600.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [(' financial liabilities', 69), (' foreign exchange contract liability', 65), ('other current liabilities', 57), (' other current liabilities', 57), (' other financial liabilities', 57), (' trade and other payables', 38), (' customer deposits', 28), (' employee benefits', 27), ('provisions', 19), (' deferred revenue', 15)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [(' other financial liabilities', 50), (' financial liabilities', 43), ('other current liabilities', 42), (' other current liabilities', 42), (' foreign exchange contract liability', 35), (' trade and other payables', 33), (' customer deposits', 22), (' employee benefits', 21), (' deferred revenue', 18), ('provisions', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [(' other financial liabilities', 50), (' financial liabilities', 43), ('other current liabilities', 42), (' other current liabilities', 42), (' foreign exchange contract liability', 35), (' trade and other payables', 33), (' customer deposits', 22), (' employee benefits', 21), (' deferred revenue', 18), ('provisions', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' customer deposits', 43), (' employee benefits', 33), (' deferred revenue', 29), ('other current liabilities', 28), (' other current liabilities', 28), (' trade and other payables', 26), (' foreign exchange contract liability', 25), (' other financial liabilities', 21), (' financial liabilities', 17), ('provisions', 13)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 1472552.0, 'line_item_label': ['Current liabilities', 'Employee benefits'], 'note_numbers': [nan, '14'], 'line_item_value': [0.0, 1472552.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities annual leave , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 85), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), (' total current employee benefits', 49), (' secured long-term bank loans', 46), (' provisions - current', 43), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 41), (' derivative contracts - at fair value', 38), (' share of joint venture payables', 37), (' loan payable to relayed party under tax funding agreement', 35), (' loans from related party', 33), (' gst', 33), (' employee benefits - payroll', 32), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' arising from service contracts', 28), (' make good provisions', 25), (' other', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities long service leave , res_fuzz_match = [('current', 100), (' gst liabilities', 80), (' current - liability for annual and long service leave', 68), (' gst', 67), (' warranty', 62), (' rebates', 60), (' arising from service contracts', 57), (' gst payables', 50), (' contract liabilites - current', 48), (' total current employee benefits', 45), (' secured long-term bank loans', 44), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' loan payable to relayed party under tax funding agreement', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' other', 40), (' derivative contracts - at fair value', 39), ('other creditors and accruals', 38), (' loans from related party', 38), (' share of joint venture payables', 38), (' forward exchange contracts', 38), (' employee benefits - payroll', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 100), (' gst liabilities', 80), (' contract liabilites - current', 64), (' total current employee benefits', 64), (' warranty', 62), (' rebates', 60), (' other related parties', 52), (' ultimate parent entity', 50), (' secured long-term bank loans', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' share of joint venture payables', 50), (' gst payables', 50), (' loans from related party', 44), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' employee benefits - payroll', 43), (' loan payable to relayed party under tax funding agreement', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' gst payable and accruals', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 21), (' make good provisions', 21), (' other', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current liabilities long service leave , res_fuzz_match = [(' current - liability for annual and long service leave', 71), (' gst liabilities', 70), (' gst', 67), ('current', 57), (' arising from service contracts', 57), (' contract liabilites - current', 48), (' loan payable to relayed party under tax funding agreement', 45), (' secured long-term bank loans', 44), (' make good provisions', 44), (' gst payables', 40), (' rebates', 40), (' other', 40), (' derivative contracts - at fair value', 39), (' loans from related party', 38), (' share of joint venture payables', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' gst payable and accruals', 36), (' provisions - current', 36), ('other creditors and accruals', 35), (' other related parties', 35), (' employee benefits - payroll', 33), (' provision for associate funding', 32), (' employee benefits - current', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities annual leave , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 85), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), (' total current employee benefits', 49), (' secured long-term bank loans', 46), (' provisions - current', 43), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 41), (' derivative contracts - at fair value', 38), (' share of joint venture payables', 37), (' loan payable to relayed party under tax funding agreement', 35), (' loans from related party', 33), (' gst', 33), (' employee benefits - payroll', 32), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' arising from service contracts', 28), (' make good provisions', 25), (' other', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities long service leave , res_fuzz_match = [('current', 100), (' gst liabilities', 80), (' current - liability for annual and long service leave', 68), (' gst', 67), (' warranty', 62), (' rebates', 60), (' arising from service contracts', 57), (' gst payables', 50), (' contract liabilites - current', 48), (' total current employee benefits', 45), (' secured long-term bank loans', 44), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' loan payable to relayed party under tax funding agreement', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' other', 40), (' derivative contracts - at fair value', 39), ('other creditors and accruals', 38), (' loans from related party', 38), (' share of joint venture payables', 38), (' forward exchange contracts', 38), (' employee benefits - payroll', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = current liabilities , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 100), (' gst liabilities', 80), (' contract liabilites - current', 64), (' total current employee benefits', 64), (' warranty', 62), (' rebates', 60), (' other related parties', 52), (' ultimate parent entity', 50), (' secured long-term bank loans', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' share of joint venture payables', 50), (' gst payables', 50), (' loans from related party', 44), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' employee benefits - payroll', 43), (' loan payable to relayed party under tax funding agreement', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' gst payable and accruals', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 21), (' make good provisions', 21), (' other', 20)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows = non-current liabilities long service leave , res_fuzz_match = [(' current - liability for annual and long service leave', 71), (' gst liabilities', 70), (' gst', 67), ('current', 57), (' arising from service contracts', 57), (' contract liabilites - current', 48), (' loan payable to relayed party under tax funding agreement', 45), (' secured long-term bank loans', 44), (' make good provisions', 44), (' gst payables', 40), (' rebates', 40), (' other', 40), (' derivative contracts - at fair value', 39), (' loans from related party', 38), (' share of joint venture payables', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' gst payable and accruals', 36), (' provisions - current', 36), ('other creditors and accruals', 35), (' other related parties', 35), (' employee benefits - payroll', 33), (' provision for associate funding', 32), (' employee benefits - current', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 4, 5, 6], 'score': [100, 100, 100, 100, 100, 100], 'value': [687951.0, 784601.0, 1472552.0, 551013.0, 581587.0, 1132600.0], 'label': ['Current liabilities Annual leave', 'Current liabilities Long service leave', 'Current liabilities ', 'Current liabilities Annual leave', 'Current liabilities Long service leave', 'Current liabilities '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('current liabilities', 35)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('current liabilities', 35)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('current liabilities', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('current liabilities', 35)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = lease liabilities total non-current liabilities , res_fuzz_match = [('current liabilities', 35)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('current liabilities', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48), ('interest bearing loans and borrowings', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48), ('interest bearing loans and borrowings', 28)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Non-current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Non-current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('perpetual equity instrument', 39), ('share capital', 36), ('equity share capital', 34), ('common stock', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('perpetual equity instrument', 39), ('share capital', 36), ('equity share capital', 34), ('common stock', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:05+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-05-23 09:56:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('additional paid in capital', 37), ('additional paid up capital', 37), ('reserves and surplus', 36), ('other equity', 26)]
2023-05-23 09:56:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:05+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('additional paid in capital', 37), ('additional paid up capital', 37), ('reserves and surplus', 36), ('other equity', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('retained earnings', 100), ('reserves surplus', 33), ('other equity', 26), (' accumulated losses', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [24], 'score': 100, 'value': 0.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('retained earnings', 100), ('reserves surplus', 33), ('other equity', 26), (' accumulated losses', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [24], 'score': 100, 'value': 0.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves', 'reserves']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other reserves', 'reserves'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('reserves', 17), ('other reserves', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27), ('reserves', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other reserves', 'reserves'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('reserves', 17), ('other reserves', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27), ('reserves', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 91, 'value': 0.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 91, 'value': 0.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [0.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('gross', 60), ('cost', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 8, 11, 14, 17, 21, 23, 26, 29, 32, 35, 38], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [180000.0, 2566334.0, 558880.0, 274537.0, 213575.0, 37409.0, 624496.0, 180000.0, 2508553.0, 540040.0, 274537.0, 180456.0, 34484.0, 553155.0], 'label': ['Non-current assets Leasehold improvements at cost', 'Non-current assets Plant and equipment - at cost', 'Non-current assets Furniture, fittings and fixtures at cost', 'Non-current assets Motor vehicles at cost', 'Non-current assets Computer equipment at cost', 'Non-current assets Office equipment at cost', 'Non-current assets Tools and dies at cost', 'Non-current assets Leasehold improvements at cost', 'Non-current assets Plant and equipment - at cost', 'Non-current assets Furniture, fittings and fixtures at cost', 'Non-current assets Motor vehicles at cost', 'Non-current assets Computer equipment at cost', 'Non-current assets Office equipment at cost', 'Non-current assets Tools and dies at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets leasehold improvements at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets furniture, fittings and fixtures at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets motor vehicles at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets computer equipment at cost , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets office equipment at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets tools and dies at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 64), ('net value', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = non-current assets , res_fuzz_match = [('accumulated depreciation', 31), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 6, 9, 12, 15, 18, 22, 24, 27, 30, 33, 36, 39], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [-180000.0, -1311336.0, -127742.0, -197972.0, -162781.0, -26911.0, -221230.0, -180000.0, -1145251.0, -83157.0, -175681.0, -143681.0, -23666.0, -140419.0], 'label': ['Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation', 'Non-current assets Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings plant and equipment $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and fixtures $ , res_fuzz_match = [('net value', 38), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings motor vehicles motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings computer equipment $ , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('depreciatio', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings office equipment $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools and dies $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = furniture, fittings tools total $ , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('trade and other receivables', 45), ('account receivables', 44), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 38), ('receivable', 33), ('billed', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('trade and other receivables', 45), ('account receivables', 44), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 38), ('receivable', 33), ('billed', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 13773393.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['7'], 'line_item_value': [13773393.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('trade and other receivables', 45), ('account receivables', 44), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 38), ('receivable', 33), ('billed', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other assets total current assets , res_fuzz_match = [('trade and other receivables', 45), ('account receivables', 44), ('trade receivables', 42), ('unbilled', 40), ('government subsidies receivable', 38), ('receivable', 33), ('billed', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 25532182.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['7'], 'line_item_value': [25532182.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets trade receivables , res_fuzz_match = [('current', 100), ('trade receivables', 100), (' net trade debtors', 69), (' related party receivables', 61), (' share of joint venture receivables', 61), (' other debtors', 42)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets other receivables , res_fuzz_match = [('current', 100), ('trade receivables', 75), (' related party receivables', 61), (' share of joint venture receivables', 61), (' other debtors', 58), (' net trade debtors', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets amounts due from other related parties (note 25) amounts due from other related parties (note 25) amounts due from other related parties (note 25) , res_fuzz_match = [('current', 100), (' related party receivables', 72), (' other debtors', 67), (' share of joint venture receivables', 44), (' net trade debtors', 44), ('trade receivables', 42)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('current', 100), (' related party receivables', 46), (' share of joint venture receivables', 46), (' net trade debtors', 38), ('trade receivables', 35), (' other debtors', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets trade receivables , res_fuzz_match = [('current', 100), ('trade receivables', 100), (' net trade debtors', 69), (' related party receivables', 61), (' share of joint venture receivables', 61), (' other debtors', 42)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets other receivables , res_fuzz_match = [('current', 100), ('trade receivables', 75), (' related party receivables', 61), (' share of joint venture receivables', 61), (' other debtors', 58), (' net trade debtors', 50)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets amounts due from other related parties (note 25) amounts due from other related parties (note 25) amounts due from other related parties (note 25) , res_fuzz_match = [('current', 100), (' related party receivables', 72), (' other debtors', 67), (' share of joint venture receivables', 44), (' net trade debtors', 44), ('trade receivables', 42)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = current assets , res_fuzz_match = [('current', 100), (' related party receivables', 46), (' share of joint venture receivables', 46), (' net trade debtors', 38), ('trade receivables', 35), (' other debtors', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [8685215.0, 114913.0, 16732054.0, 25532182.0, 10429241.0, 66573.0, 3277579.0, 13773393.0], 'label': ['Current assets Trade receivables  ', 'Current assets Other receivables  ', 'Current assets Amounts due from other related parties (note 25) Amounts due from other related parties (note 25) Amounts due from other related parties (note 25)', 'Current assets   ', 'Current assets Trade receivables  ', 'Current assets Other receivables  ', 'Current assets Amounts due from other related parties (note 25) Amounts due from other related parties (note 25) Amounts due from other related parties (note 25)', 'Current assets   '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('net sales', 67), (' Sale of coal', 62), (' Sales revenue', 53), ('sale of products', 50), ('from trading business', 32), (' Revenue', 20), ('transmission and distribution business', 12), ('revenue from contracts with customers', 11), ('Revenue from contract with customers', 11), ('revenue from operations', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal', 78), ('net sales', 71), ('sale of products', 67), (' Sales revenue', 50), ('from trading business', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22), (' Revenue', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('transmission and distribution business', 39), ('from trading business', 33), ('revenue from operations', 32), (' Sales revenue', 31), ('net sales', 28), ('sale of products', 25), (' Revenue', 24), (' Sale of coal', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('transmission and distribution business', 39), ('from trading business', 33), ('revenue from operations', 32), (' Sales revenue', 31), ('net sales', 28), ('sale of products', 25), (' Revenue', 24), (' Sale of coal', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('transmission and distribution business', 39), ('from trading business', 33), ('revenue from operations', 32), (' Sales revenue', 31), ('net sales', 28), ('sale of products', 25), (' Revenue', 24), (' Sale of coal', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('revenue from operations', 25), ('sale of products', 24), (' Sales revenue', 24), ('from trading business', 23), ('net sales', 19), (' Sale of coal', 19), (' Revenue', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('revenue from operations', 25), ('sale of products', 24), (' Sales revenue', 24), ('from trading business', 23), ('net sales', 19), (' Sale of coal', 19), (' Revenue', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 41), ('revenue from operations', 36), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('transmission and distribution business', 35), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 23), ('net sales', 22), (' Sale of coal', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), (' Sales revenue', 37), ('transmission and distribution business', 32), (' Sale of coal', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Revenue', 27), ('revenue from operations', 25), ('net sales', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 31), ('sale of products', 26), (' Sales revenue', 26), ('net sales', 20), (' Sale of coal', 20), (' Revenue', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), (' Sales revenue', 26), ('net sales', 24), (' Sale of coal', 19), (' Revenue', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('from trading business', 40), ('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('sale of products', 38), (' Sales revenue', 35), ('revenue from operations', 31), ('transmission and distribution business', 29), ('net sales', 28), (' Sale of coal', 27), (' Revenue', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('net sales', 67), (' Sale of coal', 62), (' Sales revenue', 53), ('sale of products', 50), ('from trading business', 32), (' Revenue', 20), ('transmission and distribution business', 12), ('revenue from contracts with customers', 11), ('Revenue from contract with customers', 11), ('revenue from operations', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal', 78), ('net sales', 71), ('sale of products', 67), (' Sales revenue', 50), ('from trading business', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22), (' Revenue', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('transmission and distribution business', 39), ('from trading business', 33), ('revenue from operations', 32), (' Sales revenue', 31), ('net sales', 28), ('sale of products', 25), (' Revenue', 24), (' Sale of coal', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('transmission and distribution business', 39), ('from trading business', 33), ('revenue from operations', 32), (' Sales revenue', 31), ('net sales', 28), ('sale of products', 25), (' Revenue', 24), (' Sale of coal', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('transmission and distribution business', 39), ('from trading business', 33), ('revenue from operations', 32), (' Sales revenue', 31), ('net sales', 28), ('sale of products', 25), (' Revenue', 24), (' Sale of coal', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('revenue from operations', 25), ('sale of products', 24), (' Sales revenue', 24), ('from trading business', 23), ('net sales', 19), (' Sale of coal', 19), (' Revenue', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('revenue from operations', 25), ('sale of products', 24), (' Sales revenue', 24), ('from trading business', 23), ('net sales', 19), (' Sale of coal', 19), (' Revenue', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 41), ('revenue from operations', 36), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('transmission and distribution business', 35), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 23), ('net sales', 22), (' Sale of coal', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), (' Sales revenue', 37), ('transmission and distribution business', 32), (' Sale of coal', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Revenue', 27), ('revenue from operations', 25), ('net sales', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 31), ('sale of products', 26), (' Sales revenue', 26), ('net sales', 20), (' Sale of coal', 20), (' Revenue', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), (' Sales revenue', 26), ('net sales', 24), (' Sale of coal', 19), (' Revenue', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('from trading business', 40), ('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('sale of products', 38), (' Sales revenue', 35), ('revenue from operations', 31), ('transmission and distribution business', 29), ('net sales', 28), (' Sale of coal', 27), (' Revenue', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('cost of sales', 62), ('Cost of sales', 62), ('total expenses', 38), (' cost of coal sold', 22), (' Personnel costs', 22), ('expense', 20), ('total expenditure', 20), (' Cost of product sold', 19), ('purchase of stock-in-trade', 17), (' Cost of inventory sold', 17), ('expenditure', 14), (' Cost of goods and services sold', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('total expenses', 45), ('expenditure', 42), ('total expenditure', 41), (' Cost of goods and services sold', 38), (' Personnel costs', 38), ('expense', 35), ('purchase of stock-in-trade', 34), (' Cost of inventory sold', 34), (' Cost of product sold', 31), (' cost of coal sold', 29), ('cost of sales', 27), ('Cost of sales', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('total expenses', 45), ('expenditure', 42), ('total expenditure', 41), (' Cost of goods and services sold', 38), (' Personnel costs', 38), ('expense', 35), ('purchase of stock-in-trade', 34), (' Cost of inventory sold', 34), (' Cost of product sold', 31), (' cost of coal sold', 29), ('cost of sales', 27), ('Cost of sales', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('total expenses', 45), ('expenditure', 42), ('total expenditure', 41), (' Cost of goods and services sold', 38), (' Personnel costs', 38), ('expense', 35), ('purchase of stock-in-trade', 34), (' Cost of inventory sold', 34), (' Cost of product sold', 31), (' cost of coal sold', 29), ('cost of sales', 27), ('Cost of sales', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('total expenses', 27), ('expenditure', 25), ('total expenditure', 25), ('cost of sales', 25), ('Cost of sales', 25), (' cost of coal sold', 23), ('purchase of stock-in-trade', 22), ('expense', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('total expenses', 27), ('expenditure', 25), ('total expenditure', 25), ('cost of sales', 25), ('Cost of sales', 25), (' cost of coal sold', 23), ('purchase of stock-in-trade', 22), ('expense', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), (' Cost of inventory sold', 38), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), (' Cost of goods and services sold', 30), ('purchase of stock-in-trade', 29), (' cost of coal sold', 28), (' Personnel costs', 28), ('cost of sales', 26), ('Cost of sales', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' Cost of product sold', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('total expenditure', 38), ('total expenses', 37), ('expenditure', 31), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' Cost of product sold', 27), ('purchase of stock-in-trade', 26), ('expense', 25), ('cost of sales', 24), ('Cost of sales', 24), (' cost of coal sold', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 35), ('total expenditure', 34), ('total expenses', 33), (' Personnel costs', 32), (' Cost of product sold', 30), (' Cost of goods and services sold', 29), (' cost of coal sold', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -25957285.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-25957285.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('cost of sales', 62), ('Cost of sales', 62), ('total expenses', 38), (' cost of coal sold', 22), (' Personnel costs', 22), ('expense', 20), ('total expenditure', 20), (' Cost of product sold', 19), ('purchase of stock-in-trade', 17), (' Cost of inventory sold', 17), ('expenditure', 14), (' Cost of goods and services sold', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('total expenses', 45), ('expenditure', 42), ('total expenditure', 41), (' Cost of goods and services sold', 38), (' Personnel costs', 38), ('expense', 35), ('purchase of stock-in-trade', 34), (' Cost of inventory sold', 34), (' Cost of product sold', 31), (' cost of coal sold', 29), ('cost of sales', 27), ('Cost of sales', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('total expenses', 45), ('expenditure', 42), ('total expenditure', 41), (' Cost of goods and services sold', 38), (' Personnel costs', 38), ('expense', 35), ('purchase of stock-in-trade', 34), (' Cost of inventory sold', 34), (' Cost of product sold', 31), (' cost of coal sold', 29), ('cost of sales', 27), ('Cost of sales', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('total expenses', 45), ('expenditure', 42), ('total expenditure', 41), (' Cost of goods and services sold', 38), (' Personnel costs', 38), ('expense', 35), ('purchase of stock-in-trade', 34), (' Cost of inventory sold', 34), (' Cost of product sold', 31), (' cost of coal sold', 29), ('cost of sales', 27), ('Cost of sales', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('total expenses', 27), ('expenditure', 25), ('total expenditure', 25), ('cost of sales', 25), ('Cost of sales', 25), (' cost of coal sold', 23), ('purchase of stock-in-trade', 22), ('expense', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' Personnel costs', 32), (' Cost of product sold', 31), ('total expenses', 27), ('expenditure', 25), ('total expenditure', 25), ('cost of sales', 25), ('Cost of sales', 25), (' cost of coal sold', 23), ('purchase of stock-in-trade', 22), ('expense', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), (' Cost of inventory sold', 38), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), (' Cost of goods and services sold', 30), ('purchase of stock-in-trade', 29), (' cost of coal sold', 28), (' Personnel costs', 28), ('cost of sales', 26), ('Cost of sales', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' Cost of product sold', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('total expenditure', 38), ('total expenses', 37), ('expenditure', 31), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' Cost of product sold', 27), ('purchase of stock-in-trade', 26), ('expense', 25), ('cost of sales', 24), ('Cost of sales', 24), (' cost of coal sold', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 35), ('total expenditure', 34), ('total expenses', 33), (' Personnel costs', 32), (' Cost of product sold', 30), (' Cost of goods and services sold', 29), (' cost of coal sold', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -52534388.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-52534388.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' Sales and marketing', 42), (' Lease expenses', 40), (' Marketing expenses', 35), (' Selling Expenses', 27), ('other expenses', 25), (' Other expenses', 25), (' Management expenses', 25), (' Other expenses', 25), (' Amortisation expenses', 22), (' Advertising expenses', 21), ('Distribution expenses', 20), (' Administrative expenses', 20), (' Administrative and other expenses', 20), (' Administration expenses', 20), (' depreciation', 18), (' Logistics and distribution', 17), (' Selling & distribution expenses', 16), (' Occupancy expenses', 12), (' Depreciation expenses', 11), (' Depreciation expenses', 11), (' Occupancy ', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing', 50), (' Lease expenses', 40), (' Selling Expenses', 40), (' Marketing expenses', 36), (' Amortisation expenses', 35), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 29), (' Other expenses', 29), (' Administrative and other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Logistics and distribution', 28), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Advertising expenses', 25), (' Occupancy expenses', 19), (' Occupancy ', 14), (' depreciation', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administrative and other expenses', 81), (' Administrative expenses', 73), (' Administration expenses', 73), ('other expenses', 60), (' Other expenses', 60), (' Other expenses', 60), (' Selling & distribution expenses', 57), ('Distribution expenses', 55), (' Amortisation expenses', 52), (' Advertising expenses', 51), (' Marketing expenses', 44), (' Depreciation expenses', 43), (' Depreciation expenses', 43), (' Logistics and distribution', 42), (' Lease expenses', 41), (' Selling Expenses', 41), (' Occupancy expenses', 40), (' Management expenses', 40), (' Sales and marketing', 33), (' depreciation', 29), (' Occupancy ', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administrative and other expenses', 81), (' Administrative expenses', 73), (' Administration expenses', 73), ('other expenses', 60), (' Other expenses', 60), (' Other expenses', 60), (' Selling & distribution expenses', 57), ('Distribution expenses', 55), (' Amortisation expenses', 52), (' Advertising expenses', 51), (' Marketing expenses', 44), (' Depreciation expenses', 43), (' Depreciation expenses', 43), (' Logistics and distribution', 42), (' Lease expenses', 41), (' Selling Expenses', 41), (' Occupancy expenses', 40), (' Management expenses', 40), (' Sales and marketing', 33), (' depreciation', 29), (' Occupancy ', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administrative and other expenses', 81), (' Administrative expenses', 73), (' Administration expenses', 73), ('other expenses', 60), (' Other expenses', 60), (' Other expenses', 60), (' Selling & distribution expenses', 57), ('Distribution expenses', 55), (' Amortisation expenses', 52), (' Advertising expenses', 51), (' Marketing expenses', 44), (' Depreciation expenses', 43), (' Depreciation expenses', 43), (' Logistics and distribution', 42), (' Lease expenses', 41), (' Selling Expenses', 41), (' Occupancy expenses', 40), (' Management expenses', 40), (' Sales and marketing', 33), (' depreciation', 29), (' Occupancy ', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Selling & distribution expenses', 50), ('Distribution expenses', 45), (' Administrative and other expenses', 42), (' Marketing expenses', 38), (' Occupancy expenses', 36), (' Logistics and distribution', 35), (' Administrative expenses', 34), (' Administration expenses', 34), (' Depreciation expenses', 32), (' Depreciation expenses', 32), (' Amortisation expenses', 32), (' Advertising expenses', 31), (' Management expenses', 30), (' Sales and marketing', 29), ('other expenses', 27), (' Other expenses', 27), (' Lease expenses', 27), (' Selling Expenses', 27), (' Other expenses', 27), (' depreciation', 19), (' Occupancy ', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Selling & distribution expenses', 50), ('Distribution expenses', 45), (' Administrative and other expenses', 42), (' Marketing expenses', 38), (' Occupancy expenses', 36), (' Logistics and distribution', 35), (' Administrative expenses', 34), (' Administration expenses', 34), (' Depreciation expenses', 32), (' Depreciation expenses', 32), (' Amortisation expenses', 32), (' Advertising expenses', 31), (' Management expenses', 30), (' Sales and marketing', 29), ('other expenses', 27), (' Other expenses', 27), (' Lease expenses', 27), (' Selling Expenses', 27), (' Other expenses', 27), (' depreciation', 19), (' Occupancy ', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Marketing expenses', 48), ('other expenses', 44), (' Occupancy expenses', 44), (' Other expenses', 44), (' Management expenses', 44), (' Other expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), (' Advertising expenses', 41), (' Administrative and other expenses', 40), (' Lease expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Selling Expenses', 35), (' Logistics and distribution', 33), (' Sales and marketing', 32), (' depreciation', 28), (' Occupancy ', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' Other expenses', 64), (' Management expenses', 64), (' Other expenses', 64), (' Marketing expenses', 62), (' Lease expenses', 59), (' Occupancy expenses', 57), (' Selling Expenses', 52), (' Administrative and other expenses', 43), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 39), ('Distribution expenses', 38), (' Administrative expenses', 38), (' Selling & distribution expenses', 38), (' Administration expenses', 38), (' depreciation', 35), (' Sales and marketing', 32), (' Logistics and distribution', 28), (' Occupancy ', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' Administrative and other expenses', 47), ('other expenses', 44), (' Other expenses', 44), (' Other expenses', 44), (' Occupancy expenses', 37), (' Management expenses', 37), (' Marketing expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 35), (' Administrative expenses', 34), (' Lease expenses', 34), (' Administration expenses', 34), (' Depreciation expenses', 32), (' Depreciation expenses', 32), (' Amortisation expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Selling Expenses', 30), (' Logistics and distribution', 29), (' depreciation', 20), (' Occupancy ', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 41), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Selling & distribution expenses', 31), (' Marketing expenses', 29), (' Management expenses', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Administrative expenses', 27), (' Administration expenses', 27), (' Lease expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), (' Advertising expenses', 24), (' Selling Expenses', 22), (' depreciation', 16), (' Occupancy ', 8)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other expenses', 43), (' Other expenses', 43), (' Administrative and other expenses', 43), (' Other expenses', 43), (' Lease expenses', 35), (' Management expenses', 34), (' Marketing expenses', 33), (' Sales and marketing', 32), (' Occupancy expenses', 30), (' Selling Expenses', 30), (' Depreciation expenses', 29), (' Selling & distribution expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Logistics and distribution', 29), (' Administrative expenses', 27), (' Administration expenses', 27), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 19), (' Occupancy ', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 81, 'value': -4094142.0, 'line_item_label': ['Other income Administration expenses', 'Other income Administration expenses', 'Other income Administration expenses'], 'note_numbers': ['3', '4', nan], 'line_item_value': [117171.0, -4200865.0, -10448.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' Sales and marketing', 42), (' Lease expenses', 40), (' Marketing expenses', 35), (' Selling Expenses', 27), ('other expenses', 25), (' Other expenses', 25), (' Management expenses', 25), (' Other expenses', 25), (' Amortisation expenses', 22), (' Advertising expenses', 21), ('Distribution expenses', 20), (' Administrative expenses', 20), (' Administrative and other expenses', 20), (' Administration expenses', 20), (' depreciation', 18), (' Logistics and distribution', 17), (' Selling & distribution expenses', 16), (' Occupancy expenses', 12), (' Depreciation expenses', 11), (' Depreciation expenses', 11), (' Occupancy ', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing', 50), (' Lease expenses', 40), (' Selling Expenses', 40), (' Marketing expenses', 36), (' Amortisation expenses', 35), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 29), (' Other expenses', 29), (' Administrative and other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Logistics and distribution', 28), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Advertising expenses', 25), (' Occupancy expenses', 19), (' Occupancy ', 14), (' depreciation', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administrative and other expenses', 81), (' Administrative expenses', 73), (' Administration expenses', 73), ('other expenses', 60), (' Other expenses', 60), (' Other expenses', 60), (' Selling & distribution expenses', 57), ('Distribution expenses', 55), (' Amortisation expenses', 52), (' Advertising expenses', 51), (' Marketing expenses', 44), (' Depreciation expenses', 43), (' Depreciation expenses', 43), (' Logistics and distribution', 42), (' Lease expenses', 41), (' Selling Expenses', 41), (' Occupancy expenses', 40), (' Management expenses', 40), (' Sales and marketing', 33), (' depreciation', 29), (' Occupancy ', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administrative and other expenses', 81), (' Administrative expenses', 73), (' Administration expenses', 73), ('other expenses', 60), (' Other expenses', 60), (' Other expenses', 60), (' Selling & distribution expenses', 57), ('Distribution expenses', 55), (' Amortisation expenses', 52), (' Advertising expenses', 51), (' Marketing expenses', 44), (' Depreciation expenses', 43), (' Depreciation expenses', 43), (' Logistics and distribution', 42), (' Lease expenses', 41), (' Selling Expenses', 41), (' Occupancy expenses', 40), (' Management expenses', 40), (' Sales and marketing', 33), (' depreciation', 29), (' Occupancy ', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administrative and other expenses', 81), (' Administrative expenses', 73), (' Administration expenses', 73), ('other expenses', 60), (' Other expenses', 60), (' Other expenses', 60), (' Selling & distribution expenses', 57), ('Distribution expenses', 55), (' Amortisation expenses', 52), (' Advertising expenses', 51), (' Marketing expenses', 44), (' Depreciation expenses', 43), (' Depreciation expenses', 43), (' Logistics and distribution', 42), (' Lease expenses', 41), (' Selling Expenses', 41), (' Occupancy expenses', 40), (' Management expenses', 40), (' Sales and marketing', 33), (' depreciation', 29), (' Occupancy ', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Selling & distribution expenses', 50), ('Distribution expenses', 45), (' Administrative and other expenses', 42), (' Marketing expenses', 38), (' Occupancy expenses', 36), (' Logistics and distribution', 35), (' Administrative expenses', 34), (' Administration expenses', 34), (' Depreciation expenses', 32), (' Depreciation expenses', 32), (' Amortisation expenses', 32), (' Advertising expenses', 31), (' Management expenses', 30), (' Sales and marketing', 29), ('other expenses', 27), (' Other expenses', 27), (' Lease expenses', 27), (' Selling Expenses', 27), (' Other expenses', 27), (' depreciation', 19), (' Occupancy ', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Selling & distribution expenses', 50), ('Distribution expenses', 45), (' Administrative and other expenses', 42), (' Marketing expenses', 38), (' Occupancy expenses', 36), (' Logistics and distribution', 35), (' Administrative expenses', 34), (' Administration expenses', 34), (' Depreciation expenses', 32), (' Depreciation expenses', 32), (' Amortisation expenses', 32), (' Advertising expenses', 31), (' Management expenses', 30), (' Sales and marketing', 29), ('other expenses', 27), (' Other expenses', 27), (' Lease expenses', 27), (' Selling Expenses', 27), (' Other expenses', 27), (' depreciation', 19), (' Occupancy ', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Marketing expenses', 48), ('other expenses', 44), (' Occupancy expenses', 44), (' Other expenses', 44), (' Management expenses', 44), (' Other expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), (' Advertising expenses', 41), (' Administrative and other expenses', 40), (' Lease expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Selling Expenses', 35), (' Logistics and distribution', 33), (' Sales and marketing', 32), (' depreciation', 28), (' Occupancy ', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' Other expenses', 64), (' Management expenses', 64), (' Other expenses', 64), (' Marketing expenses', 62), (' Lease expenses', 59), (' Occupancy expenses', 57), (' Selling Expenses', 52), (' Administrative and other expenses', 43), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 39), ('Distribution expenses', 38), (' Administrative expenses', 38), (' Selling & distribution expenses', 38), (' Administration expenses', 38), (' depreciation', 35), (' Sales and marketing', 32), (' Logistics and distribution', 28), (' Occupancy ', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' Administrative and other expenses', 47), ('other expenses', 44), (' Other expenses', 44), (' Other expenses', 44), (' Occupancy expenses', 37), (' Management expenses', 37), (' Marketing expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 35), (' Administrative expenses', 34), (' Lease expenses', 34), (' Administration expenses', 34), (' Depreciation expenses', 32), (' Depreciation expenses', 32), (' Amortisation expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Selling Expenses', 30), (' Logistics and distribution', 29), (' depreciation', 20), (' Occupancy ', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 41), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Selling & distribution expenses', 31), (' Marketing expenses', 29), (' Management expenses', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Administrative expenses', 27), (' Administration expenses', 27), (' Lease expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), (' Advertising expenses', 24), (' Selling Expenses', 22), (' depreciation', 16), (' Occupancy ', 8)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other expenses', 43), (' Other expenses', 43), (' Administrative and other expenses', 43), (' Other expenses', 43), (' Lease expenses', 35), (' Management expenses', 34), (' Marketing expenses', 33), (' Sales and marketing', 32), (' Occupancy expenses', 30), (' Selling Expenses', 30), (' Depreciation expenses', 29), (' Selling & distribution expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Logistics and distribution', 29), (' Administrative expenses', 27), (' Administration expenses', 27), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 19), (' Occupancy ', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 81, 'value': -6270461.0, 'line_item_label': ['Other income Administration expenses', 'Other income Administration expenses', 'Other income Administration expenses'], 'note_numbers': ['3', '4', nan], 'line_item_value': [92825.0, -6359349.0, -3937.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: depreciation of property, plant and equipment depreciation of property, plant and equipment , res_fuzz_match = [('equipment', 100), (' plant and equipment', 100), (' Depreciation – property', 89), (' Depreciation – right-of-use assets', 52), ('consum', 50), ('analytical', 50), ('social', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), (' Wages and salaries', 47), ('machinery', 44), ('miscellaneous', 44), (' Compulsory superannuation contributions', 43), ('power', 40), ('donation', 40), ('research', 38), ('csr', 33), (' Staff welfare', 33), ('exchange', 29), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: depreciation of right-of-use asset depreciation of right-of-use asset , res_fuzz_match = [(' Depreciation – right-of-use assets', 92), (' Depreciation – property', 56), ('consum', 50), ('loss on', 50), ('social', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), (' Staff welfare', 42), ('power', 40), ('charges', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Wages and salaries', 40), (' Compulsory superannuation contributions', 40), ('research', 38), ('analytical', 33), ('csr', 33), ('miscellaneous', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: depreciation not allocated to cost of sales depreciation not allocated to cost of sales , res_fuzz_match = [('loss allowance', 60), (' Depreciation – property', 56), (' Depreciation – right-of-use assets', 52), ('consum', 50), ('research', 50), ('social', 50), (' Administrative expenses', 50), (' Staff welfare', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Wages and salaries', 40), (' Compulsory superannuation contributions', 37), ('analytical', 33), ('csr', 33), ('miscellaneous', 33), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: , res_fuzz_match = [('consum', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Compulsory superannuation contributions', 40), (' Depreciation – property', 39), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Wages and salaries', 33), (' Staff welfare', 33), ('research', 25), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: other finance costs , res_fuzz_match = [('power', 60), ('consum', 50), ('loss on', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), (' Depreciation – property', 44), (' Compulsory superannuation contributions', 43), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Wages and salaries', 40), ('research', 38), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Staff welfare', 33), ('exchange', 29), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: lease liability interest expense lease liability interest expense , res_fuzz_match = [(' Administrative expenses', 69), ('Included in administrative expenses', 61), ('consum', 50), ('loss allowance', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), (' Wages and salaries', 47), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Depreciation – property', 39), ('research', 38), (' Compulsory superannuation contributions', 37), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Staff welfare', 33), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: , res_fuzz_match = [('consum', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Compulsory superannuation contributions', 40), (' Depreciation – property', 39), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Wages and salaries', 33), (' Staff welfare', 33), ('research', 25), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = net foreign exchange loss net foreign exchange loss , res_fuzz_match = [('exchange', 100), ('loss on', 100), ('charges', 80), ('analytical', 50), ('loss allowance', 50), ('machinery', 44), (' Administrative expenses', 44), (' Staff welfare', 42), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Depreciation – right-of-use assets', 40), (' Wages and salaries', 40), (' Payroll on-costs (excluding employee benefit provision)', 40), ('Included in administrative expenses', 39), ('research', 38), (' Compulsory superannuation contributions', 37), ('consum', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Depreciation – property', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = wages and salaries wages and salaries , res_fuzz_match = [(' Wages and salaries', 100), ('analytical', 50), ('social', 50), (' plant and equipment', 47), ('exchange', 43), (' Staff welfare', 42), ('power', 40), ('charges', 40), ('donation', 40), ('Included in administrative expenses', 39), ('research', 38), (' Administrative expenses', 38), (' Depreciation – right-of-use assets', 36), (' Compulsory superannuation contributions', 36), ('consum', 33), ('machinery', 33), ('csr', 33), ('miscellaneous', 33), (' Depreciation – property', 33), (' Payroll on-costs (excluding employee benefit provision)', 32), ('loss allowance', 30), ('loss on', 25), ('equipment', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = superannuation expense defined contribution superannuation expense defined contribution superannuation expense , res_fuzz_match = [('power', 60), ('donation', 60), (' Compulsory superannuation contributions', 57), (' Administrative expenses', 56), ('Included in administrative expenses', 52), ('consum', 50), (' plant and equipment', 47), ('machinery', 44), ('miscellaneous', 44), ('exchange', 43), (' Payroll on-costs (excluding employee benefit provision)', 42), ('charges', 40), ('equipment', 40), (' Depreciation – right-of-use assets', 40), (' Depreciation – property', 39), ('research', 38), ('analytical', 33), ('csr', 33), ('social', 33), (' Wages and salaries', 33), (' Staff welfare', 33), ('loss on', 25), ('loss allowance', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = management fees management fees , res_fuzz_match = [('exchange', 57), ('analytical', 50), (' Wages and salaries', 47), ('machinery', 44), ('charges', 40), ('donation', 40), ('research', 38), (' Administrative expenses', 38), (' plant and equipment', 34), ('miscellaneous', 33), (' Staff welfare', 33), ('Included in administrative expenses', 32), (' Compulsory superannuation contributions', 32), (' Payroll on-costs (excluding employee benefit provision)', 32), (' Depreciation – property', 28), (' Depreciation – right-of-use assets', 26), ('power', 20), ('equipment', 20), ('loss allowance', 20), ('consum', 17), ('social', 17), ('loss on', 0), ('csr', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: depreciation of property, plant and equipment depreciation of property, plant and equipment , res_fuzz_match = [('equipment', 100), (' plant and equipment', 100), (' Depreciation – property', 89), (' Depreciation – right-of-use assets', 52), ('consum', 50), ('analytical', 50), ('social', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), (' Wages and salaries', 47), ('machinery', 44), ('miscellaneous', 44), (' Compulsory superannuation contributions', 43), ('power', 40), ('donation', 40), ('research', 38), ('csr', 33), (' Staff welfare', 33), ('exchange', 29), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: depreciation of right-of-use asset depreciation of right-of-use asset , res_fuzz_match = [(' Depreciation – right-of-use assets', 92), (' Depreciation – property', 56), ('consum', 50), ('loss on', 50), ('social', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), (' Staff welfare', 42), ('power', 40), ('charges', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Wages and salaries', 40), (' Compulsory superannuation contributions', 40), ('research', 38), ('analytical', 33), ('csr', 33), ('miscellaneous', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: depreciation not allocated to cost of sales depreciation not allocated to cost of sales , res_fuzz_match = [('loss allowance', 60), (' Depreciation – property', 56), (' Depreciation – right-of-use assets', 52), ('consum', 50), ('research', 50), ('social', 50), (' Administrative expenses', 50), (' Staff welfare', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Wages and salaries', 40), (' Compulsory superannuation contributions', 37), ('analytical', 33), ('csr', 33), ('miscellaneous', 33), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: , res_fuzz_match = [('consum', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Compulsory superannuation contributions', 40), (' Depreciation – property', 39), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Wages and salaries', 33), (' Staff welfare', 33), ('research', 25), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: other finance costs , res_fuzz_match = [('power', 60), ('consum', 50), ('loss on', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), (' Depreciation – property', 44), (' Compulsory superannuation contributions', 43), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Wages and salaries', 40), ('research', 38), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Staff welfare', 33), ('exchange', 29), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: lease liability interest expense lease liability interest expense , res_fuzz_match = [(' Administrative expenses', 69), ('Included in administrative expenses', 61), ('consum', 50), ('loss allowance', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), (' Wages and salaries', 47), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Depreciation – property', 39), ('research', 38), (' Compulsory superannuation contributions', 37), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Staff welfare', 33), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = profit before income tax includes the following specific expenses: , res_fuzz_match = [('consum', 50), ('loss allowance', 50), (' Administrative expenses', 50), (' Payroll on-costs (excluding employee benefit provision)', 49), ('Included in administrative expenses', 48), ('machinery', 44), ('exchange', 43), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Compulsory superannuation contributions', 40), (' Depreciation – property', 39), (' Depreciation – right-of-use assets', 36), ('analytical', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Wages and salaries', 33), (' Staff welfare', 33), ('research', 25), ('loss on', 25), ('charges', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = net foreign exchange loss net foreign exchange loss , res_fuzz_match = [('exchange', 100), ('loss on', 100), ('charges', 80), ('analytical', 50), ('loss allowance', 50), ('machinery', 44), (' Administrative expenses', 44), (' Staff welfare', 42), ('power', 40), ('equipment', 40), ('donation', 40), (' plant and equipment', 40), (' Depreciation – right-of-use assets', 40), (' Wages and salaries', 40), (' Payroll on-costs (excluding employee benefit provision)', 40), ('Included in administrative expenses', 39), ('research', 38), (' Compulsory superannuation contributions', 37), ('consum', 33), ('csr', 33), ('social', 33), ('miscellaneous', 33), (' Depreciation – property', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = wages and salaries wages and salaries , res_fuzz_match = [(' Wages and salaries', 100), ('analytical', 50), ('social', 50), (' plant and equipment', 47), ('exchange', 43), (' Staff welfare', 42), ('power', 40), ('charges', 40), ('donation', 40), ('Included in administrative expenses', 39), ('research', 38), (' Administrative expenses', 38), (' Depreciation – right-of-use assets', 36), (' Compulsory superannuation contributions', 36), ('consum', 33), ('machinery', 33), ('csr', 33), ('miscellaneous', 33), (' Depreciation – property', 33), (' Payroll on-costs (excluding employee benefit provision)', 32), ('loss allowance', 30), ('loss on', 25), ('equipment', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = superannuation expense defined contribution superannuation expense defined contribution superannuation expense , res_fuzz_match = [('power', 60), ('donation', 60), (' Compulsory superannuation contributions', 57), (' Administrative expenses', 56), ('Included in administrative expenses', 52), ('consum', 50), (' plant and equipment', 47), ('machinery', 44), ('miscellaneous', 44), ('exchange', 43), (' Payroll on-costs (excluding employee benefit provision)', 42), ('charges', 40), ('equipment', 40), (' Depreciation – right-of-use assets', 40), (' Depreciation – property', 39), ('research', 38), ('analytical', 33), ('csr', 33), ('social', 33), (' Wages and salaries', 33), (' Staff welfare', 33), ('loss on', 25), ('loss allowance', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = management fees management fees , res_fuzz_match = [('exchange', 57), ('analytical', 50), (' Wages and salaries', 47), ('machinery', 44), ('charges', 40), ('donation', 40), ('research', 38), (' Administrative expenses', 38), (' plant and equipment', 34), ('miscellaneous', 33), (' Staff welfare', 33), ('Included in administrative expenses', 32), (' Compulsory superannuation contributions', 32), (' Payroll on-costs (excluding employee benefit provision)', 32), (' Depreciation – property', 28), (' Depreciation – right-of-use assets', 26), ('power', 20), ('equipment', 20), ('loss allowance', 20), ('consum', 17), ('social', 17), ('loss on', 0), ('csr', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('consum', 0), ('power', 0), ('machinery', 0), ('charges', 0), ('research', 0), ('analytical', 0), ('equipment', 0), ('exchange', 0), ('loss on', 0), ('donation', 0), ('csr', 0), ('social', 0), ('miscellaneous', 0), ('loss allowance', 0), ('Included in administrative expenses', 0), (' Depreciation – property', 0), (' plant and equipment', 0), (' Depreciation – right-of-use assets', 0), (' Administrative expenses', 0), (' Wages and salaries', 0), (' Compulsory superannuation contributions', 0), (' Payroll on-costs (excluding employee benefit provision)', 0), (' Staff welfare', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 7, 8, 11, 12, 18, 19], 'score': [100, 92, 100, 100, 100, 92, 100, 100], 'value': [44295.0, 572568.0, 734378.0, 1650631.0, 51992.0, 559485.0, 101115.0, 1464672.0], 'label': ['Profit before income tax includes the following specific expenses: Depreciation of property, plant and equipment Depreciation of property, plant and equipment ', 'Profit before income tax includes the following specific expenses: Depreciation of right-of-use asset Depreciation of right-of-use asset ', 'Net foreign exchange loss Net foreign exchange loss  ', 'Wages and salaries Wages and salaries  ', 'Profit before income tax includes the following specific expenses: Depreciation of property, plant and equipment Depreciation of property, plant and equipment ', 'Profit before income tax includes the following specific expenses: Depreciation of right-of-use asset Depreciation of right-of-use asset ', 'Net foreign exchange loss Net foreign exchange loss  ', 'Wages and salaries Wages and salaries  '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' Rental expenses', 35), ('Rent', 25), (' Administration expenses', 20), (' Occupancy expenses', 12), (' Occupancy', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 32), (' Occupancy expenses', 19), ('Rent', 15), (' Occupancy', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administration expenses', 73), (' Rental expenses', 44), (' Occupancy expenses', 40), ('Rent', 25), (' Occupancy', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administration expenses', 73), (' Rental expenses', 44), (' Occupancy expenses', 40), ('Rent', 25), (' Occupancy', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administration expenses', 73), (' Rental expenses', 44), (' Occupancy expenses', 40), ('Rent', 25), (' Occupancy', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Occupancy expenses', 36), (' Administration expenses', 34), (' Rental expenses', 29), (' Occupancy', 17), ('Rent', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Occupancy expenses', 36), (' Administration expenses', 34), (' Rental expenses', 29), (' Occupancy', 17), ('Rent', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses', 48), (' Occupancy expenses', 44), (' Administration expenses', 36), ('Rent', 24), (' Occupancy', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses', 57), (' Administration expenses', 38), ('Rent', 30), (' Occupancy', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 37), (' Administration expenses', 34), ('Rent', 17), (' Occupancy', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 32), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses', 42), (' Occupancy expenses', 30), (' Administration expenses', 27), ('Rent', 21), (' Occupancy', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' Rental expenses', 35), ('Rent', 25), (' Administration expenses', 20), (' Occupancy expenses', 12), (' Occupancy', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 32), (' Occupancy expenses', 19), ('Rent', 15), (' Occupancy', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administration expenses', 73), (' Rental expenses', 44), (' Occupancy expenses', 40), ('Rent', 25), (' Occupancy', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administration expenses', 73), (' Rental expenses', 44), (' Occupancy expenses', 40), ('Rent', 25), (' Occupancy', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Administration expenses', 73), (' Rental expenses', 44), (' Occupancy expenses', 40), ('Rent', 25), (' Occupancy', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Occupancy expenses', 36), (' Administration expenses', 34), (' Rental expenses', 29), (' Occupancy', 17), ('Rent', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Occupancy expenses', 36), (' Administration expenses', 34), (' Rental expenses', 29), (' Occupancy', 17), ('Rent', 14)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses', 48), (' Occupancy expenses', 44), (' Administration expenses', 36), ('Rent', 24), (' Occupancy', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses', 57), (' Administration expenses', 38), ('Rent', 30), (' Occupancy', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 37), (' Administration expenses', 34), ('Rent', 17), (' Occupancy', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 32), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses', 42), (' Occupancy expenses', 30), (' Administration expenses', 27), ('Rent', 21), (' Occupancy', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('other operating', 14), (' Other income', 13), ('Other revenue', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Other income', 56), ('other operating', 42), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Other income', 56), ('other operating', 42), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Other income', 56), ('other operating', 42), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('Other revenue', 24), ('other operating', 18), (' Other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('Other revenue', 24), ('other operating', 18), (' Other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' Other income', 42), ('other operating', 35), ('Other revenue', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Other income', 41), ('other operating', 38), ('Other revenue', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('other operating', 14), (' Other income', 13), ('Other revenue', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Other income', 56), ('other operating', 42), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Other income', 56), ('other operating', 42), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' Other income', 56), ('other operating', 42), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('Other revenue', 24), ('other operating', 18), (' Other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('Other revenue', 24), ('other operating', 18), (' Other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' Other income', 42), ('other operating', 35), ('Other revenue', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Other income', 41), ('other operating', 38), ('Other revenue', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' Net finance costs', 32), (' Interest revenue', 21), (' Finance income and costs', 16), ('other income', 13), ('finance income', 12), ('Finance income', 12), (' Finance income and finance costs', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19), ('Finance income', 19)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('other income', 56), (' Finance income and costs', 49), ('finance income', 45), ('Finance income', 45), (' Finance income and finance costs', 43), (' Interest revenue', 37), (' Net finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('other income', 56), (' Finance income and costs', 49), ('finance income', 45), ('Finance income', 45), (' Finance income and finance costs', 43), (' Interest revenue', 37), (' Net finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('other income', 56), (' Finance income and costs', 49), ('finance income', 45), ('Finance income', 45), (' Finance income and finance costs', 43), (' Interest revenue', 37), (' Net finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Finance income and finance costs', 41), (' Net finance costs', 40), (' Finance income and costs', 34), (' Interest revenue', 29), ('finance income', 24), ('Finance income', 24), ('other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Finance income and finance costs', 41), (' Net finance costs', 40), (' Finance income and costs', 34), (' Interest revenue', 29), ('finance income', 24), ('Finance income', 24), ('other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income', 39), (' Finance income and costs', 36), (' Net finance costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), ('Finance income', 50), (' Net finance costs', 45), (' Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('other income', 42), (' Finance income and finance costs', 37), (' Finance income and costs', 35), (' Interest revenue', 32), ('finance income', 30), ('Finance income', 30), (' Net finance costs', 28)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), (' Net finance costs', 41), (' Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 31), ('finance income', 25), ('Finance income', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), (' Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), ('Finance income', 30), (' Interest revenue', 28)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' Net finance costs', 32), (' Interest revenue', 21), (' Finance income and costs', 16), ('other income', 13), ('finance income', 12), ('Finance income', 12), (' Finance income and finance costs', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19), ('Finance income', 19)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('other income', 56), (' Finance income and costs', 49), ('finance income', 45), ('Finance income', 45), (' Finance income and finance costs', 43), (' Interest revenue', 37), (' Net finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('other income', 56), (' Finance income and costs', 49), ('finance income', 45), ('Finance income', 45), (' Finance income and finance costs', 43), (' Interest revenue', 37), (' Net finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('other income', 56), (' Finance income and costs', 49), ('finance income', 45), ('Finance income', 45), (' Finance income and finance costs', 43), (' Interest revenue', 37), (' Net finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Finance income and finance costs', 41), (' Net finance costs', 40), (' Finance income and costs', 34), (' Interest revenue', 29), ('finance income', 24), ('Finance income', 24), ('other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' Finance income and finance costs', 41), (' Net finance costs', 40), (' Finance income and costs', 34), (' Interest revenue', 29), ('finance income', 24), ('Finance income', 24), ('other income', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income', 39), (' Finance income and costs', 36), (' Net finance costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), ('Finance income', 50), (' Net finance costs', 45), (' Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('other income', 42), (' Finance income and finance costs', 37), (' Finance income and costs', 35), (' Interest revenue', 32), ('finance income', 30), ('Finance income', 30), (' Net finance costs', 28)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), (' Net finance costs', 41), (' Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 31), ('finance income', 25), ('Finance income', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), (' Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), ('Finance income', 30), (' Interest revenue', 28)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' net finance costs ', 32), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' finance expenses', 40), (' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' finance expenses', 38), ('finance cost', 35), ('finance costs', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' net finance costs ', 32), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' finance expenses', 40), (' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' finance expenses', 38), ('finance cost', 35), ('finance costs', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' net finance costs ', 32), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' finance expenses', 40), (' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' finance expenses', 38), ('finance cost', 35), ('finance costs', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [(' net finance costs ', 32), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' finance expenses', 49), (' net finance costs ', 37), ('finance cost', 31), ('finance costs', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' net finance costs ', 40), (' finance expenses', 38), ('finance cost', 33), ('finance costs', 33)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [(' finance expenses', 40), (' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' finance expenses', 38), ('finance cost', 35), ('finance costs', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('NULL', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('NULL', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('earlier year', 38), (' income tax expense', 20), ('provision for taxation previous year', 18), (' tax (expense)/benefit', 18), ('minimum alternate tax credit entitlement', 17), ('deferred tax', 15), (' income tax', 15), ('prior year ', 14), (' income tax benefit/(expense)', 14), ('current tax', 13), ('amount transferred to retained earnings', 13), (' income tax benefit', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' income tax benefit/(expense)', 69), (' income tax expense', 64), (' tax (expense)/benefit', 52), ('amount transferred to retained earnings', 51), (' income tax benefit', 49), ('minimum alternate tax credit entitlement', 43), ('provision for taxation previous year', 39), (' income tax', 38), ('prior year ', 32), ('earlier year', 30), ('deferred tax', 27), ('current tax', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' income tax benefit/(expense)', 69), (' income tax expense', 64), (' tax (expense)/benefit', 52), ('amount transferred to retained earnings', 51), (' income tax benefit', 49), ('minimum alternate tax credit entitlement', 43), ('provision for taxation previous year', 39), (' income tax', 38), ('prior year ', 32), ('earlier year', 30), ('deferred tax', 27), ('current tax', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' income tax benefit/(expense)', 69), (' income tax expense', 64), (' tax (expense)/benefit', 52), ('amount transferred to retained earnings', 51), (' income tax benefit', 49), ('minimum alternate tax credit entitlement', 43), ('provision for taxation previous year', 39), (' income tax', 38), ('prior year ', 32), ('earlier year', 30), ('deferred tax', 27), ('current tax', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' income tax benefit/(expense)', 43), (' tax (expense)/benefit', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('provision for taxation previous year', 33), ('minimum alternate tax credit entitlement', 30), (' income tax benefit', 28), ('earlier year', 21), ('current tax', 18), ('prior year ', 18), ('deferred tax', 16), (' income tax', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' income tax benefit/(expense)', 43), (' tax (expense)/benefit', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('provision for taxation previous year', 33), ('minimum alternate tax credit entitlement', 30), (' income tax benefit', 28), ('earlier year', 21), ('current tax', 18), ('prior year ', 18), ('deferred tax', 16), (' income tax', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year ', 31), ('earlier year', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('provision for taxation previous year', 62), (' income tax benefit/(expense)', 58), (' income tax expense', 55), (' income tax benefit', 44), ('minimum alternate tax credit entitlement', 43), (' tax (expense)/benefit', 43), ('amount transferred to retained earnings', 41), ('prior year ', 38), (' income tax', 35), ('earlier year', 33), ('current tax', 30), ('deferred tax', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 50), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), ('prior year ', 38), ('earlier year', 36), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('current tax', 33), ('deferred tax', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -828251.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['5'], 'line_item_value': [-828251.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('earlier year', 38), (' income tax expense', 20), ('provision for taxation previous year', 18), (' tax (expense)/benefit', 18), ('minimum alternate tax credit entitlement', 17), ('deferred tax', 15), (' income tax', 15), ('prior year ', 14), (' income tax benefit/(expense)', 14), ('current tax', 13), ('amount transferred to retained earnings', 13), (' income tax benefit', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' income tax benefit/(expense)', 69), (' income tax expense', 64), (' tax (expense)/benefit', 52), ('amount transferred to retained earnings', 51), (' income tax benefit', 49), ('minimum alternate tax credit entitlement', 43), ('provision for taxation previous year', 39), (' income tax', 38), ('prior year ', 32), ('earlier year', 30), ('deferred tax', 27), ('current tax', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' income tax benefit/(expense)', 69), (' income tax expense', 64), (' tax (expense)/benefit', 52), ('amount transferred to retained earnings', 51), (' income tax benefit', 49), ('minimum alternate tax credit entitlement', 43), ('provision for taxation previous year', 39), (' income tax', 38), ('prior year ', 32), ('earlier year', 30), ('deferred tax', 27), ('current tax', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [(' income tax benefit/(expense)', 69), (' income tax expense', 64), (' tax (expense)/benefit', 52), ('amount transferred to retained earnings', 51), (' income tax benefit', 49), ('minimum alternate tax credit entitlement', 43), ('provision for taxation previous year', 39), (' income tax', 38), ('prior year ', 32), ('earlier year', 30), ('deferred tax', 27), ('current tax', 26)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' income tax benefit/(expense)', 43), (' tax (expense)/benefit', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('provision for taxation previous year', 33), ('minimum alternate tax credit entitlement', 30), (' income tax benefit', 28), ('earlier year', 21), ('current tax', 18), ('prior year ', 18), ('deferred tax', 16), (' income tax', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [(' income tax benefit/(expense)', 43), (' tax (expense)/benefit', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('provision for taxation previous year', 33), ('minimum alternate tax credit entitlement', 30), (' income tax benefit', 28), ('earlier year', 21), ('current tax', 18), ('prior year ', 18), ('deferred tax', 16), (' income tax', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year ', 31), ('earlier year', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('provision for taxation previous year', 62), (' income tax benefit/(expense)', 58), (' income tax expense', 55), (' income tax benefit', 44), ('minimum alternate tax credit entitlement', 43), (' tax (expense)/benefit', 43), ('amount transferred to retained earnings', 41), ('prior year ', 38), (' income tax', 35), ('earlier year', 33), ('current tax', 30), ('deferred tax', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 50), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), ('prior year ', 38), ('earlier year', 36), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('current tax', 33), ('deferred tax', 31)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -2809204.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['5'], 'line_item_value': [-2809204.0]}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 77), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 75), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 61), (' deferred income tax', 47)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax expense , res_fuzz_match = [('income tax expense', 100), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 73), (' income tax expense on continuing operations', 69), (' total income tax expense / (benefit)', 67), (' deferred income tax', 60), (' total tax (expense)/benefit in income statement', 58), (' current income tax', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense prior year tax adjustment , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 61), (' total tax (expense)/benefit in income statement', 50), (' current income tax', 47), (' deferred income tax', 47)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense research and development tax offset , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 66), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' deferred income tax', 53), (' total tax (expense)/benefit in income statement', 52), (' current income tax', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 73), (' current income tax', 71), (' income tax expense on continuing operations', 69), (' total tax (expense)/benefit in income statement', 65), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: research and development rebate , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' total income tax expense / (benefit)', 50), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: tax true up , res_fuzz_match = [('income tax expense', 69), (' deferred income tax', 67), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 51), (' total income tax expense / (benefit)', 50), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 39)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: non-allowable items , res_fuzz_match = [(' current income tax', 53), (' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 45), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax adjustment from prior year , res_fuzz_match = [('income tax expense', 69), (' deferred income tax', 67), (' current income tax', 65), (' income tax expense on continuing operations', 55), (' total income tax expense / (benefit)', 53), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 67), (' total income tax expense / (benefit)', 67), (' current income tax', 65), (' income tax expense on continuing operations', 55), (' total tax (expense)/benefit in income statement', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets provisions , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' total tax (expense)/benefit in income statement', 45), ('income tax expense', 44), (' income tax expense on continuing operations', 41), (' total income tax expense / (benefit)', 36), (' current income tax', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets unrealised foreign exchange gain (loss) , res_fuzz_match = [(' deferred income tax', 60), (' income tax expense on continuing operations', 45), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' current income tax', 41), (' total tax (expense)/benefit in income statement', 40), (' total income tax expense / (benefit)', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets accruals, amortisation and superannuation , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' current income tax', 41), (' income tax expense on continuing operations', 41), (' total tax (expense)/benefit in income statement', 38), (' total income tax expense / (benefit)', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets total deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 47), (' current income tax', 41), (' income tax expense on continuing operations', 41), (' total tax (expense)/benefit in income statement', 41), ('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 45), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 45), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: opening balance , res_fuzz_match = [(' deferred income tax', 60), (' income tax expense on continuing operations', 45), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38), (' current income tax', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: credited to profit or loss current year movement , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: charged to profit or loss prior period correction , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 41), ('income tax expense', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: closing balance , res_fuzz_match = [(' deferred income tax', 60), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38), (' current income tax', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 77), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 75), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 61), (' deferred income tax', 47)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax expense , res_fuzz_match = [('income tax expense', 100), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 73), (' income tax expense on continuing operations', 69), (' total income tax expense / (benefit)', 67), (' deferred income tax', 60), (' total tax (expense)/benefit in income statement', 58), (' current income tax', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense prior year tax adjustment , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 61), (' total tax (expense)/benefit in income statement', 50), (' current income tax', 47), (' deferred income tax', 47)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense research and development tax offset , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 66), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' deferred income tax', 53), (' total tax (expense)/benefit in income statement', 52), (' current income tax', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 73), (' current income tax', 71), (' income tax expense on continuing operations', 69), (' total tax (expense)/benefit in income statement', 65), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: research and development rebate , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' total income tax expense / (benefit)', 50), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: tax true up , res_fuzz_match = [('income tax expense', 69), (' deferred income tax', 67), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 51), (' total income tax expense / (benefit)', 50), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 39)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: non-allowable items , res_fuzz_match = [(' current income tax', 53), (' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 45), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 40)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax adjustment from prior year , res_fuzz_match = [('income tax expense', 69), (' deferred income tax', 67), (' current income tax', 65), (' income tax expense on continuing operations', 55), (' total income tax expense / (benefit)', 53), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 67), (' total income tax expense / (benefit)', 67), (' current income tax', 65), (' income tax expense on continuing operations', 55), (' total tax (expense)/benefit in income statement', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets provisions , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' total tax (expense)/benefit in income statement', 45), ('income tax expense', 44), (' income tax expense on continuing operations', 41), (' total income tax expense / (benefit)', 36), (' current income tax', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets unrealised foreign exchange gain (loss) , res_fuzz_match = [(' deferred income tax', 60), (' income tax expense on continuing operations', 45), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' current income tax', 41), (' total tax (expense)/benefit in income statement', 40), (' total income tax expense / (benefit)', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets accruals, amortisation and superannuation , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' current income tax', 41), (' income tax expense on continuing operations', 41), (' total tax (expense)/benefit in income statement', 38), (' total income tax expense / (benefit)', 37)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = deferred tax assets total deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 47), (' current income tax', 41), (' income tax expense on continuing operations', 41), (' total tax (expense)/benefit in income statement', 41), ('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 45), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 45), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: opening balance , res_fuzz_match = [(' deferred income tax', 60), (' income tax expense on continuing operations', 45), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38), (' current income tax', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: credited to profit or loss current year movement , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 41)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: charged to profit or loss prior period correction , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 41), ('income tax expense', 38)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows = the overall movement in the deferred tax account is as follows: closing balance , res_fuzz_match = [(' deferred income tax', 60), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 38), (' current income tax', 35)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 11, 24, 25, 26, 27, 28, 29, 30, 35], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [3226933.0, -172524.0, -32870.0, -212335.0, 2809204.0, 9628501.0, 2888550.0, 2809204.0, 983960.0, -63024.0, 4478.0, -97163.0, 828251.0, 2742159.0, 822648.0, 828251.0], 'label': ['Income tax expense Current tax', 'Income tax expense Deferred tax expense', 'Income tax expense Prior year tax adjustment', 'Income tax expense Research and development tax offset', 'Income tax expense Aggregate income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Profit before income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Tax at the statutory tax rate of 30%', 'Tax effect amounts which are not deductible/taxable) in calculating taxable income: Income tax expense', 'Income tax expense Current tax', 'Income tax expense Deferred tax expense', 'Income tax expense Prior year tax adjustment', 'Income tax expense Research and development tax offset', 'Income tax expense Aggregate income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Profit before income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Tax at the statutory tax rate of 30%', 'Tax effect amounts which are not deductible/taxable) in calculating taxable income: Income tax expense'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('share of', 67), ('share in', 67)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('share of', 67), ('share in', 67)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('exceptional', 20), ('prior period', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('prior period', 18), ('exceptional', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('prior period', 18), ('exceptional', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('prior period', 37), ('exceptional', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('prior period', 34), ('exceptional', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('exceptional', 20), ('prior period', 12)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('prior period', 35), ('exceptional', 24)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('prior period', 18), ('exceptional', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('prior period', 18), ('exceptional', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('prior period', 37), ('exceptional', 21)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('prior period', 34), ('exceptional', 20)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 09:56:06+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-05-23 09:56:06+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('NULL', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 09:56:06+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 09:56:06+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = sales , res_fuzz_match = [('NULL', 25)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other income administration expenses , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = distribution expenses marketing expenses occupancy expenses finance cost , res_fuzz_match = [('NULL', 7)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-05-23 09:56:06+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:01:36+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-05-23 10:01:36+0530 - sLogger - DEBUG - {'fileid': '2ce3fb66-b0d5-467f-99d6-9ad6ef3a8bc1', 'filename': 'Audit Report Fuji SMBE Macquarie 2022.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Audit Report Fuji SMBE Macquarie 2022.pdf'}
2023-05-23 10:01:36+0530 - sLogger - DEBUG - save file completed
2023-05-23 10:01:36+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-05-23 10:01:36+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-05-23 10:01:36+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-05-23 10:01:36+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-05-23 10:01:36+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-05-23 10:01:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 10:01:36+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 10:01:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 10:01:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 10:01:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 10:01:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 10:01:39+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 10:01:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 10:01:39+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 10:01:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-05-23 10:01:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-05-23 10:01:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-05-23 10:01:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-05-23 10:01:47+0530 - sLogger - DEBUG - function: predict completed.
2023-05-23 10:01:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-05-23 10:01:47+0530 - sLogger - DEBUG - filetype: pdf
2023-05-23 10:10:36+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-05-23 10:10:36+0530 - sLogger - DEBUG - process_main_pages started
2023-05-23 10:10:36+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:10:36+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:10:36+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:10:36+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:10:36+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:10:36+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:10:36+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:10:36+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:10:36+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:25:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-05-23 10:25:15+0530 - sLogger - DEBUG - process_main_pages started
2023-05-23 10:25:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:25:15+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:25:15+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:25:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:25:15+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:25:15+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:25:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:25:15+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:25:15+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:25:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-05-23 10:25:15+0530 - sLogger - DEBUG - set_section_details started
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Contract assets | [('current assets', 67), ('noncurrent assets', 67), ('assets', 53), ('noncurrent liabilities', 36), ('equity and liabilities', 32), ('equity liabilities', 30), ('current liabilities', 29), ('equity', 20), ('liabilities', 10)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD current assets | score 69
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD current liabilities | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD noncurrent assets | score 69
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD noncurrent liabilities | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD non current assets | score 67
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD non current liabilities | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD equity and liabilities | score 32
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Other | [('current assets', 22), ('noncurrent assets', 22), ('noncurrent liabilities', 21), ('assets', 20), ('equity', 18), ('current liabilities', 11), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current assets | score 21
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current assets | score 26
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity and liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity | score 18
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Intangibles | [('liabilities', 33), ('equity', 33), ('equity liabilities', 32), ('current liabilities', 30), ('noncurrent liabilities', 30), ('equity and liabilities', 26), ('current assets', 21), ('noncurrent assets', 21), ('assets', 18)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD current assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD current liabilities | score 50
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrent assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrent liabilities | score 50
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD non current assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD non current liabilities | score 50
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equity and liabilities | score 55
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equity | score 24
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Other | [('current assets', 22), ('noncurrent assets', 22), ('noncurrent liabilities', 21), ('assets', 20), ('equity', 18), ('current liabilities', 11), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current assets | score 21
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current assets | score 26
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity and liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity | score 18
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Contract liabilities | [('current liabilities', 69), ('liabilities', 57), ('equity liabilities', 57), ('equity and liabilities', 56), ('noncurrent liabilities', 41), ('current assets', 21), ('noncurrent assets', 21), ('assets', 20), ('equity', 19)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD current assets | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD current liabilities | score 77
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD noncurrent assets | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD noncurrent liabilities | score 76
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD non current assets | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD non current liabilities | score 74
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD equity and liabilities | score 67
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Derivative financial instruments  forward contracts | [('current assets', 33), ('noncurrent assets', 30), ('noncurrent liabilities', 29), ('equity and liabilities', 28), ('current liabilities', 25), ('equity liabilities', 22), ('assets', 17), ('liabilities', 13), ('equity', 13)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD current assets | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD current liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD noncurrent assets | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD noncurrent liabilities | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD non current assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD non current liabilities | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD equity and liabilities | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Income tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current assets | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current liabilities | score 28
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent assets | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity and liabilities | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Retained profits | [('current liabilities', 44), ('current assets', 38), ('equity liabilities', 38), ('equity and liabilities', 33), ('liabilities', 32), ('equity', 32), ('noncurrent liabilities', 30), ('noncurrent assets', 23), ('assets', 22)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current assets | score 47
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current liabilities | score 46
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent assets | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent liabilities | score 42
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current assets | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current liabilities | score 41
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity and liabilities | score 47
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity | score 30
2023-05-23 10:25:15+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-05-23 10:25:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-05-23 10:25:16+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-05-23 10:25:16+0530 - sLogger - DEBUG - set_section_details started
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers (inclusive of GST) | adjustments for increase decrease in operating assets
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees (inclusive of GST) | changes in operating assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest and other finance costs paid | operating profit before changes in assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes (paid)/refunded | adiustments for movements in working capital
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating assets
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for purchase of subsidiary, net of cash acquired | adjustments for increase decrease in operating liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for intangibles | operating profit before working capital changes
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for security deposits | adiustments for movements in working capital
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of property, plant and equipment | operating profit before changes in assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of intangibles | adiustments for movements in working capital
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from release of security deposits | adjustments for increase decrease in operating assets
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of principal portion of lease liabilities | operating profit before changes in assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in financing activities | adjustments for increase decrease in operating assets
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decreaseyincrease in cash and cash equivalents | adjustments for increase decrease in operating liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effects of exchange rate changes on cash and cash equivalents | changes in operating assets and liabilities
2023-05-23 10:25:16+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-05-23 10:25:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:25:19+0530 - sLogger - ERROR - error occured: 'year'
2023-05-23 10:25:19+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:25:19+0530 - sLogger - ERROR - error occured: 'year'
2023-05-23 10:25:19+0530 - sLogger - DEBUG - process_main_pages completed
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 10:25:33+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 10:25:33+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 10:25:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:33+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('cash and short term deposits', 39), ('bank balances other than above', 34), ('other bank balances', 32), ('bank balances other than cash and cash equivalents', 31), ('cash and cash equivalents', 29), ('cash and bank balances', 29), (' cash and cash equivalents', 29)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other bank balances', 45), ('bank balances other than above', 31), ('cash and short term deposits', 31), ('bank balances other than cash and cash equivalents', 20), ('cash and cash equivalents', 15), (' cash and cash equivalents', 15), ('cash and bank balances', 8)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 119092.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [119092.0]}
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:33+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('cash and short term deposits', 39), ('bank balances other than above', 34), ('other bank balances', 32), ('bank balances other than cash and cash equivalents', 31), ('cash and cash equivalents', 29), ('cash and bank balances', 29), (' cash and cash equivalents', 29)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other bank balances', 45), ('bank balances other than above', 31), ('cash and short term deposits', 31), ('bank balances other than cash and cash equivalents', 20), ('cash and cash equivalents', 15), (' cash and cash equivalents', 15), ('cash and bank balances', 8)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 76310.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [76310.0]}
2023-05-23 10:25:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:33+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = cash on hand cash at bank , res_fuzz_match = [('cash on hand', 100), (' cash at bank', 100), (' cash on hand and at bank', 83), (' cash and cash equivalents', 74), (' cash at bank and on hand', 67), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 58), (' short term deposits', 29)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 38), (' cash and cash equivalents', 38), ('cash on hand', 25), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = cash on hand short-term deposits , res_fuzz_match = [('cash on hand', 100), (' short term deposits', 97), (' cash at bank', 78), (' cash and cash equivalents', 57), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 56), (' cash on hand and at bank', 56)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 38), (' cash and cash equivalents', 38), ('cash on hand', 25), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = cash on hand , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash and cash equivalents', 89), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 78), (' short term deposits', 22)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 38), (' cash and cash equivalents', 38), ('cash on hand', 25), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = cash on hand cash at bank , res_fuzz_match = [('cash on hand', 100), (' cash at bank', 100), (' cash on hand and at bank', 83), (' cash and cash equivalents', 74), (' cash at bank and on hand', 67), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 58), (' short term deposits', 29)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 38), (' cash and cash equivalents', 38), ('cash on hand', 25), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = cash on hand short-term deposits , res_fuzz_match = [('cash on hand', 100), (' short term deposits', 97), (' cash at bank', 78), (' cash and cash equivalents', 57), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 56), (' cash on hand and at bank', 56)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 38), (' cash and cash equivalents', 38), ('cash on hand', 25), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = cash on hand , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash and cash equivalents', 89), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 78), (' short term deposits', 22)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 38), (' cash and cash equivalents', 38), ('cash on hand', 25), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-05-23 10:25:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [18283.0, 58026.0, 76310.0, 43482.0, 75609.0, 119092.0], 'label': ['Cash on hand Cash at bank', 'Cash on hand Short-term deposits', 'Cash on hand ', 'Cash on hand Cash at bank', 'Cash on hand Short-term deposits', 'Cash on hand '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('inventories', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 67918.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [67918.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('inventories', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 105830.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [105830.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = 112774 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = $'000 $'000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = (6,944) , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = $'000 $'000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = 105830 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = $'000 $'000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59), ('prepayments', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59), ('prepayments', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), (' financial assets', 67), ('other current assets', 61), (' other current assets', 61), (' other financial assets', 61), (' biological assets', 54), (' trade and other receivables', 39), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 37), (' deferred operating expenditure', 23), (' income tax receivable from related parties', 21), (' biological assets', 12), (' financial assets', 11)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 186308.0, 'line_item_label': ['Current assets', 'Trade and other receivables'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 186308.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), (' financial assets', 67), ('other current assets', 61), (' other current assets', 61), (' other financial assets', 61), (' biological assets', 54), (' trade and other receivables', 39), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 37), (' deferred operating expenditure', 23), (' income tax receivable from related parties', 21), (' biological assets', 12), (' financial assets', 11)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 263120.0, 'line_item_label': ['Current assets', 'Trade and other receivables'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 263120.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: within one year , res_fuzz_match = [(' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other', 60), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' rental bond', 55), (' other receivables - related party', 54), (' long service leave receivable', 52), (' other deposits receivable - related party', 50), (' share of jv prepayments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' forward exchange contracts', 46), (' amount receivable from controlling entity', 45), (' foreign exchange forward contracts', 44), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' electricity derivatives at fair value', 41), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: one to five years , res_fuzz_match = [(' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other', 60), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' income tax receivable from related parties', 55), (' rental bond', 55), (' other receivables - related party', 54), (' other deposits receivable - related party', 53), (' long service leave receivable', 52), (' derivative contracts - fair value', 50), (' share of jv prepayments', 50), (' related party disclosures', 48), (' forward exchange contracts', 46), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' foreign exchange forward contracts', 44), (' current investments', 43), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: more than five years , res_fuzz_match = [(' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other', 60), (' other receivables - related party', 58), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' income tax receivable from related parties', 55), (' rental bond', 55), (' other deposits receivable - related party', 53), (' long service leave receivable', 52), (' amount receivable from controlling entity', 52), (' derivative contracts - fair value', 50), (' share of jv prepayments', 50), (' current investments', 50), (' related party disclosures', 48), (' forward exchange contracts', 46), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: total commitment , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' other deposits receivable - related party', 53), (' long service leave receivable', 52), (' amount receivable from controlling entity', 52), (' other receivables - related party', 50), (' share of jv prepayments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' forward exchange contracts', 46), (' rental bond', 45), (' foreign exchange forward contracts', 44), (' current investments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' electricity derivatives at fair value', 41), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: less: future finance charges , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' rental bond', 55), (' other receivables - related party', 54), (' long service leave receivable', 52), (' other deposits receivable - related party', 50), (' share of jv prepayments', 50), (' current investments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' forward exchange contracts', 46), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' foreign exchange forward contracts', 44), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: net commitment recognised as assets , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' other deposits receivable - related party', 56), (' related party receivable', 56), (' amount receivable from controlling entity', 55), (' rental bond', 55), (' other receivables - related party', 54), (' long service leave receivable', 52), (' share of jv prepayments', 50), (' current investments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' derivative contracts - fair value', 46), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), ('foreign exchange derivatives at fair value', 39), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = representing: lease receivable current , res_fuzz_match = [('current', 100), (' interest receivable', 67), (' other deposits receivable - related party', 62), (' related party receivable', 61), (' long service leave receivable', 57), (' income tax receivable from related parties', 54), (' related party disclosures', 52), (' other receivables - related party', 50), (' amount receivable from controlling entity', 50), (' current investments', 50), ('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' bank guarantee', 40), (' forward exchange contracts', 38), (' rental bond', 36), (' other debtors and prepayments', 35), (' derivative contracts - fair value', 33), (' lng', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = representing: finance lease receivable non-current (note 13) , res_fuzz_match = [('current', 71), (' interest receivable', 67), (' long service leave receivable', 61), (' other', 60), (' related party receivable', 56), (' income tax receivable from related parties', 54), (' other receivables - related party', 50), (' amount receivable from controlling entity', 50), (' current investments', 50), (' related party disclosures', 48), (' other deposits receivable - related party', 47), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other debtors and prepayments', 39), ('other assets', 36), (' lng', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = representing: , res_fuzz_match = [(' share of jv prepayments', 83), (' accrued interest', 67), ('current', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' other deposits receivable - related party', 50), (' deposits', 50), (' amount receivable from controlling entity', 50), (' interest receivable', 50), (' related party receivable', 50), (' accrued rebates', 50), (' other debtors and prepayments', 50), (' other', 40), ('other assets', 33), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' bank guarantee', 33), (' rental bond', 33), (' current investments', 33), (' condensate', 33), (' foreign exchange forward contracts', 33), (' forward exchange contracts', 33), (' derivative contracts - fair value', 17), (' lng', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: within one year , res_fuzz_match = [(' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other', 60), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' rental bond', 55), (' other receivables - related party', 54), (' long service leave receivable', 52), (' other deposits receivable - related party', 50), (' share of jv prepayments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' forward exchange contracts', 46), (' amount receivable from controlling entity', 45), (' foreign exchange forward contracts', 44), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' electricity derivatives at fair value', 41), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: one to five years , res_fuzz_match = [(' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other', 60), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' income tax receivable from related parties', 55), (' rental bond', 55), (' other receivables - related party', 54), (' other deposits receivable - related party', 53), (' long service leave receivable', 52), (' derivative contracts - fair value', 50), (' share of jv prepayments', 50), (' related party disclosures', 48), (' forward exchange contracts', 46), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' foreign exchange forward contracts', 44), (' current investments', 43), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: more than five years , res_fuzz_match = [(' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other', 60), (' other receivables - related party', 58), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' income tax receivable from related parties', 55), (' rental bond', 55), (' other deposits receivable - related party', 53), (' long service leave receivable', 52), (' amount receivable from controlling entity', 52), (' derivative contracts - fair value', 50), (' share of jv prepayments', 50), (' current investments', 50), (' related party disclosures', 48), (' forward exchange contracts', 46), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: total commitment , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' other deposits receivable - related party', 53), (' long service leave receivable', 52), (' amount receivable from controlling entity', 52), (' other receivables - related party', 50), (' share of jv prepayments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' forward exchange contracts', 46), (' rental bond', 45), (' foreign exchange forward contracts', 44), (' current investments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' electricity derivatives at fair value', 41), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: less: future finance charges , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' related party receivable', 56), (' rental bond', 55), (' other receivables - related party', 54), (' long service leave receivable', 52), (' other deposits receivable - related party', 50), (' share of jv prepayments', 50), (' current investments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' forward exchange contracts', 46), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' foreign exchange forward contracts', 44), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: net commitment recognised as assets , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' other deposits receivable - related party', 56), (' related party receivable', 56), (' amount receivable from controlling entity', 55), (' rental bond', 55), (' other receivables - related party', 54), (' long service leave receivable', 52), (' share of jv prepayments', 50), (' current investments', 50), (' related party disclosures', 48), (' income tax receivable from related parties', 48), (' derivative contracts - fair value', 46), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), ('foreign exchange derivatives at fair value', 39), (' bank guarantee', 38), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33), ('current', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = representing: lease receivable current , res_fuzz_match = [('current', 100), (' interest receivable', 67), (' other deposits receivable - related party', 62), (' related party receivable', 61), (' long service leave receivable', 57), (' income tax receivable from related parties', 54), (' related party disclosures', 52), (' other receivables - related party', 50), (' amount receivable from controlling entity', 50), (' current investments', 50), ('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' bank guarantee', 40), (' forward exchange contracts', 38), (' rental bond', 36), (' other debtors and prepayments', 35), (' derivative contracts - fair value', 33), (' lng', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = representing: finance lease receivable non-current (note 13) , res_fuzz_match = [('current', 71), (' interest receivable', 67), (' long service leave receivable', 61), (' other', 60), (' related party receivable', 56), (' income tax receivable from related parties', 54), (' other receivables - related party', 50), (' amount receivable from controlling entity', 50), (' current investments', 50), (' related party disclosures', 48), (' other deposits receivable - related party', 47), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other debtors and prepayments', 39), ('other assets', 36), (' lng', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = representing: , res_fuzz_match = [(' share of jv prepayments', 83), (' accrued interest', 67), ('current', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' other deposits receivable - related party', 50), (' deposits', 50), (' amount receivable from controlling entity', 50), (' interest receivable', 50), (' related party receivable', 50), (' accrued rebates', 50), (' other debtors and prepayments', 50), (' other', 40), ('other assets', 33), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' bank guarantee', 33), (' rental bond', 33), (' current investments', 33), (' condensate', 33), (' foreign exchange forward contracts', 33), (' forward exchange contracts', 33), (' derivative contracts - fair value', 17), (' lng', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 6, 8, 12, 13, 14, 15, 17], 'score': [80, 80, 80, 100, 83, 80, 80, 80, 100, 83], 'value': [244465.0, -48360.0, 196105.0, 86029.0, 195971.0, 253474.0, -48261.0, 205213.0, 91600.0, 205213.0], 'label': ['Committed at the reporting date and recognised as assets, receivable: Total commitment', 'Committed at the reporting date and recognised as assets, receivable: Less: Future finance charges', 'Committed at the reporting date and recognised as assets, receivable: Net commitment recognised as assets', 'Representing: Lease receivable current', 'Representing: ', 'Committed at the reporting date and recognised as assets, receivable: Total commitment', 'Committed at the reporting date and recognised as assets, receivable: Less: Future finance charges', 'Committed at the reporting date and recognised as assets, receivable: Net commitment recognised as assets', 'Representing: Lease receivable current', 'Representing: '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = trade receivables , res_fuzz_match = [(' income tax receivable from related parties', 75), (' other receivables - related party', 75), (' interest receivable', 75), (' long service leave receivable', 67), (' other deposits receivable - related party', 67), (' amount receivable from controlling entity', 67), (' related party receivable', 67), (' electricity derivatives at fair value', 58), ('foreign exchange derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 42), (' current investments', 42), (' foreign exchange forward contracts', 42), (' other', 40), ('other assets', 36), (' accrued rebates', 36), (' accrued interest', 33), (' related party disclosures', 33), (' bank guarantee', 33), ('current', 29), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' lng', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' related party disclosures', 49), (' interest receivable', 47), (' forward exchange contracts', 46), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' other receivables - related party', 43), (' deposits', 43), (' current investments', 43), (' electricity derivatives at fair value', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' amount receivable from controlling entity', 36), (' other debtors and prepayments', 35), (' income tax receivable from related parties', 34), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = lease receivables , res_fuzz_match = [(' long service leave receivable', 91), (' interest receivable', 82), (' income tax receivable from related parties', 73), (' other receivables - related party', 73), (' other deposits receivable - related party', 73), (' related party receivable', 73), (' amount receivable from controlling entity', 64), (' electricity derivatives at fair value', 55), ('foreign exchange derivatives at fair value', 45), (' related party disclosures', 45), (' share of jv prepayments', 38), (' other debtors and prepayments', 38), ('other assets', 36), (' derivative contracts - fair value', 36), (' current investments', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' lng', 33), ('current', 29), (' deposits', 29), (' condensate', 29), (' accrued interest', 27), (' bank guarantee', 27), (' rental bond', 27), (' other', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' related party disclosures', 49), (' interest receivable', 47), (' forward exchange contracts', 46), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' other receivables - related party', 43), (' deposits', 43), (' current investments', 43), (' electricity derivatives at fair value', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' amount receivable from controlling entity', 36), (' other debtors and prepayments', 35), (' income tax receivable from related parties', 34), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = receivable from related party , res_fuzz_match = [(' income tax receivable from related parties', 100), (' other receivables - related party', 78), (' other deposits receivable - related party', 78), (' amount receivable from controlling entity', 70), (' related party receivable', 61), (' accrued rebates', 55), (' related party disclosures', 52), (' derivative contracts - fair value', 48), (' electricity derivatives at fair value', 45), ('current', 43), ('foreign exchange derivatives at fair value', 43), (' share of jv prepayments', 42), (' interest receivable', 41), (' other', 40), (' foreign exchange forward contracts', 39), (' bank guarantee', 38), (' current investments', 37), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 36), (' rental bond', 36), (' forward exchange contracts', 36), (' other debtors and prepayments', 36), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = other receivables , res_fuzz_match = [(' other', 100), (' other receivables - related party', 100), (' other deposits receivable - related party', 75), (' amount receivable from controlling entity', 75), (' interest receivable', 75), (' income tax receivable from related parties', 67), (' long service leave receivable', 67), (' related party receivable', 67), ('other assets', 64), (' other debtors and prepayments', 58), (' electricity derivatives at fair value', 50), ('current', 43), (' share of jv prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' current investments', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' accrued rebates', 36), (' accrued interest', 33), (' related party disclosures', 33), (' deposits', 29), (' condensate', 29), (' bank guarantee', 25), (' rental bond', 18), (' lng', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = loans receivable (note 32) , res_fuzz_match = [(' amount receivable from controlling entity', 69), (' income tax receivable from related parties', 62), (' other deposits receivable - related party', 62), (' other', 60), (' long service leave receivable', 56), (' other receivables - related party', 56), (' related party receivable', 56), (' interest receivable', 53), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' other debtors and prepayments', 38), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), ('other assets', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = trade receivables , res_fuzz_match = [(' income tax receivable from related parties', 75), (' other receivables - related party', 75), (' interest receivable', 75), (' long service leave receivable', 67), (' other deposits receivable - related party', 67), (' amount receivable from controlling entity', 67), (' related party receivable', 67), (' electricity derivatives at fair value', 58), ('foreign exchange derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 42), (' current investments', 42), (' foreign exchange forward contracts', 42), (' other', 40), ('other assets', 36), (' accrued rebates', 36), (' accrued interest', 33), (' related party disclosures', 33), (' bank guarantee', 33), ('current', 29), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' lng', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' related party disclosures', 49), (' interest receivable', 47), (' forward exchange contracts', 46), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' other receivables - related party', 43), (' deposits', 43), (' current investments', 43), (' electricity derivatives at fair value', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' amount receivable from controlling entity', 36), (' other debtors and prepayments', 35), (' income tax receivable from related parties', 34), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = lease receivables , res_fuzz_match = [(' long service leave receivable', 91), (' interest receivable', 82), (' income tax receivable from related parties', 73), (' other receivables - related party', 73), (' other deposits receivable - related party', 73), (' related party receivable', 73), (' amount receivable from controlling entity', 64), (' electricity derivatives at fair value', 55), ('foreign exchange derivatives at fair value', 45), (' related party disclosures', 45), (' share of jv prepayments', 38), (' other debtors and prepayments', 38), ('other assets', 36), (' derivative contracts - fair value', 36), (' current investments', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' lng', 33), ('current', 29), (' deposits', 29), (' condensate', 29), (' accrued interest', 27), (' bank guarantee', 27), (' rental bond', 27), (' other', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' related party disclosures', 49), (' interest receivable', 47), (' forward exchange contracts', 46), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' other receivables - related party', 43), (' deposits', 43), (' current investments', 43), (' electricity derivatives at fair value', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' amount receivable from controlling entity', 36), (' other debtors and prepayments', 35), (' income tax receivable from related parties', 34), (' share of jv prepayments', 33), (' lng', 33), (' bank guarantee', 31), (' condensate', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = receivable from related party , res_fuzz_match = [(' income tax receivable from related parties', 100), (' other receivables - related party', 78), (' other deposits receivable - related party', 78), (' amount receivable from controlling entity', 70), (' related party receivable', 61), (' accrued rebates', 55), (' related party disclosures', 52), (' derivative contracts - fair value', 48), (' electricity derivatives at fair value', 45), ('current', 43), ('foreign exchange derivatives at fair value', 43), (' share of jv prepayments', 42), (' interest receivable', 41), (' other', 40), (' foreign exchange forward contracts', 39), (' bank guarantee', 38), (' current investments', 37), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 36), (' rental bond', 36), (' forward exchange contracts', 36), (' other debtors and prepayments', 36), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = other receivables , res_fuzz_match = [(' other', 100), (' other receivables - related party', 100), (' other deposits receivable - related party', 75), (' amount receivable from controlling entity', 75), (' interest receivable', 75), (' income tax receivable from related parties', 67), (' long service leave receivable', 67), (' related party receivable', 67), ('other assets', 64), (' other debtors and prepayments', 58), (' electricity derivatives at fair value', 50), ('current', 43), (' share of jv prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' current investments', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' accrued rebates', 36), (' accrued interest', 33), (' related party disclosures', 33), (' deposits', 29), (' condensate', 29), (' bank guarantee', 25), (' rental bond', 18), (' lng', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = loans receivable (note 32) , res_fuzz_match = [(' amount receivable from controlling entity', 69), (' income tax receivable from related parties', 62), (' other deposits receivable - related party', 62), (' other', 60), (' long service leave receivable', 56), (' other receivables - related party', 56), (' related party receivable', 56), (' interest receivable', 53), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' other debtors and prepayments', 38), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), ('other assets', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' deposits', 43), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' rental bond', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' lng', 33), ('current', 29), ('foreign exchange derivatives at fair value', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' interest receivable', 25), (' related party receivable', 25), (' current investments', 25), (' other', 20), ('other assets', 12), (' bank guarantee', 12), (' accrued rebates', 12), (' share of jv prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6, 7, 13, 16, 17], 'score': [91, 100, 100, 91, 100, 100], 'value': [86029.0, 1329.0, 2422.0, 91600.0, 360.0, 3132.0], 'label': [' Lease receivables', ' Receivable from related party', ' Other receivables', ' Lease receivables', ' Receivable from related party', ' Other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = 109942 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = (2,584) , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = 107358 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('current assets', 67)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('current assets', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('current assets', 67)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('current assets', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 27543.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [27543.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets at cost , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets at cost , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 7, 10, 15, 18, 21, 24], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-20615.0, -2616.0, -33685.0, -12685.0, -18902.0, 0.0, -31727.0, -13642.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('cost', 100), ('gross', 80), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('cost', 100), ('gross', 80), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('net value', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 6, 9, 12, 14, 17, 20, 23, 26], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [33573.0, 3687.0, 39604.0, 17069.0, 3211.0, 32454.0, 0.0, 39131.0, 19696.0, 631.0], 'label': [' Leasehold improvements at cost', ' Motor vehicles at cost', ' Office equipment - at cost', ' Rental assets at cost', ' Construction in progress at cost', ' Leasehold improvements at cost', ' Motor vehicles at cost', ' Office equipment - at cost', ' Rental assets at cost', ' Construction in progress at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 40), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 41), ('depreciatio', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2022 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = additions through business balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [32, 33, 34, 35, 36, 37, 38, 39], 'score': [80, 80, 80, 80, 80, 80, 80, 80], 'value': [631.0, 2560.0, 0.0, 0.0, 20.0, 0.0, 0.0, 3211.0], 'label': ["Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 27543.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [27543.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('capital work in progress', 37), ('right of use', 33), ('right to use', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('capital work-in-progress', 40), ('capital workinprogress', 40), ('capital work in progress', 40), ('right of use', 40), ('right to use', 40), ('work in progress', 40), ('rightofuse', 20), ('righttouse', 20), ('tangible', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 34198.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['15'], 'line_item_value': [34198.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('capital work in progress', 37), ('right of use', 33), ('right to use', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('work in progress', 31), ('tangible', 29), ('capital work in progress', 27), ('capital work-in-progress', 20), ('capital workinprogress', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('capital work-in-progress', 40), ('capital workinprogress', 40), ('capital work in progress', 40), ('right of use', 40), ('right to use', 40), ('work in progress', 40), ('rightofuse', 20), ('righttouse', 20), ('tangible', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 52057.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['15'], 'line_item_value': [52057.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('tangible assets', 11)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('tangible assets', 11)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('goodwill', 20), ('goodwill on consolidatio', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 27), ('goodwill', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('goodwill', 20), ('goodwill on consolidatio', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('intangible under development', 40), ('intangible assets under development', 40), ('intangible', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 95613.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['16'], 'line_item_value': [95613.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible', 33), ('intangible under development', 33), ('intangible assets under development', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('intangible under development', 40), ('intangible assets under development', 40), ('intangible', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 92689.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['16'], 'line_item_value': [92689.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('donations', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('donations', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('derivative financial instruments', 67), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investment in associate', 50), (' investments accounted for using the equity method', 50)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [(' investments accounted for using the equity method', 60), ('joint ventures and associates', 40), ('derivative financial instruments', 40), (' investment in joint venture', 40), ('investment', 20), (' investment in associate', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('derivative financial instruments', 67), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investment in associate', 50), (' investments accounted for using the equity method', 50)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [(' investments accounted for using the equity method', 60), ('joint ventures and associates', 40), ('derivative financial instruments', 40), (' investment in joint venture', 40), ('investment', 20), (' investment in associate', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('deferred charges', 38), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1850.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['17'], 'line_item_value': [1850.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('deferred charges', 38), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1918.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['17'], 'line_item_value': [1918.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: allowance for expected credit losses , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: inventories , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: employee benefits , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: accrued expenses , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: foreign currency , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: other , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: lease liabilities , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax assets offset against deferred tax liabilities , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 75)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax asset , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = movements: opening balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = movements: credited to profit or loss (note 8) , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = movements: closing balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: allowance for expected credit losses , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: inventories , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: employee benefits , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: accrued expenses , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: foreign currency , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: other , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: lease liabilities , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax assets offset against deferred tax liabilities , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 75)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax asset , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = movements: opening balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = movements: credited to profit or loss (note 8) , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = movements: closing balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 40)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 19, 20], 'score': [100, 100, 100, 100], 'value': [-34029.0, 1918.0, -31779.0, 1850.0], 'label': ['Amounts recognised in profit or loss: Deferred tax assets offset against deferred tax liabilities', 'Amounts recognised in profit or loss: Deferred tax asset', 'Amounts recognised in profit or loss: Deferred tax assets offset against deferred tax liabilities', 'Amounts recognised in profit or loss: Deferred tax asset'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), ('other assets', 42), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets', 42), ('non-current', 31), (' leased assets', 25), (' loan receivables', 24), (' leases', 20), (' exploration and evaluation expenditure', 18), (' other non-current assets', 16), (' other non-current assets', 16), ('other assets', 12), (' other assets', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), (' other assets', 62), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 33), (' leased assets', 27), (' loan receivables', 25), (' leases', 22), (' exploration and evaluation expenditure', 19), (' financial assets', 11)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), ('other assets', 42), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), ('other assets', 40), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets', 42), ('non-current', 31), (' leased assets', 25), (' loan receivables', 24), (' leases', 20), (' exploration and evaluation expenditure', 18), (' other non-current assets', 16), (' other non-current assets', 16), ('other assets', 12), (' other assets', 12)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), (' other assets', 62), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 33), (' leased assets', 27), (' loan receivables', 25), (' leases', 22), (' exploration and evaluation expenditure', 19), (' financial assets', 11)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 39)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('non-current assets total', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 39)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('non-current assets total', 17)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:34+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-05-23 10:25:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), (' loans and borrowings', 33), (' bank overdraft', 28), ('short term debt', 27), ('short-term debt', 21), ('shortterm debt', 21), (' leases', 21), ('borrowings', 19), ('shortterm borrowings', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('shortterm borrowings', 35), ('short term debt', 32), ('short-term debt', 29), ('shortterm debt', 29), (' loans and borrowings', 29), (' bank overdraft', 29), ('borrowings', 21), ('lease liabilities', 19), (' leases', 13)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [(' loans and borrowings', 33), (' bank overdraft', 26), ('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), (' leases', 15), ('borrowings', 13)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 12196.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [12196.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), (' loans and borrowings', 33), (' bank overdraft', 28), ('short term debt', 27), ('short-term debt', 21), ('shortterm debt', 21), (' leases', 21), ('borrowings', 19), ('shortterm borrowings', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('shortterm borrowings', 35), ('short term debt', 32), ('short-term debt', 29), ('shortterm debt', 29), (' loans and borrowings', 29), (' bank overdraft', 29), ('borrowings', 21), ('lease liabilities', 19), (' leases', 13)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [(' loans and borrowings', 33), (' bank overdraft', 26), ('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), (' leases', 15), ('borrowings', 13)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 13803.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [13803.0]}
2023-05-23 10:25:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:34+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = lease liability , res_fuzz_match = [(' leases', 100), (' lease liabilities - current', 100), (' lease liabilities', 100), (' loans from related party', 45), (' utilised – bank borrowings', 36), (' not later than 1 year', 36), (' secured long-term bank loans', 36), ('bank borrowings', 27), (' balance at the end of period', 27), (' bank overdraft', 18), ('current', 0), (' current', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' balance at the end of period', 43), (' secured long-term bank loans', 42), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [(' leases', 100), (' not later than 1 year', 63), (' lease liabilities', 55), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' secured long-term bank loans', 38), (' balance at the end of period', 38), ('bank borrowings', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('bank borrowings', 0), (' utilised – bank borrowings', 0), (' leases', 0), (' not later than 1 year', 0), (' current', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' lease liabilities - current', 0), (' lease liabilities', 0), (' bank overdraft', 0), (' balance at the end of period', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = lease liability , res_fuzz_match = [(' leases', 100), (' lease liabilities - current', 100), (' lease liabilities', 100), (' loans from related party', 45), (' utilised – bank borrowings', 36), (' not later than 1 year', 36), (' secured long-term bank loans', 36), ('bank borrowings', 27), (' balance at the end of period', 27), (' bank overdraft', 18), ('current', 0), (' current', 0)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' balance at the end of period', 43), (' secured long-term bank loans', 42), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [(' leases', 100), (' not later than 1 year', 63), (' lease liabilities', 55), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' secured long-term bank loans', 38), (' balance at the end of period', 38), ('bank borrowings', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), (' utilised – bank borrowings', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 42), (' balance at the end of period', 38), ('bank borrowings', 36), (' bank overdraft', 36)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' not later than 1 year', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' bank overdraft', 38), ('current', 29), (' current', 29), ('bank borrowings', 25), (' utilised – bank borrowings', 25), (' leases', 25), (' balance at the end of period', 25)]
2023-05-23 10:25:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 4, 5, 6, 9, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [39474.0, 13803.0, 19850.0, 19624.0, 53277.0, 24944.0, 12147.0, 23015.0, 1929.0, 37091.0], 'label': [' Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: More than five years', 'Future lease payments are due as follows: ', ' Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: More than five years', 'Future lease payments are due as follows: '], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('revenue from operations', 70), (' Sales revenue', 69), ('sale of products', 55), ('revenue from contracts with customers', 49), ('Revenue from contract with customers', 49), ('from trading business', 44), (' Revenue', 44), ('net sales', 41), (' Sale of coal', 40), ('transmission and distribution business', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('revenue from operations', 68), (' Sales revenue', 50), ('revenue from contracts with customers', 49), ('Revenue from contract with customers', 49), ('from trading business', 40), (' Revenue', 39), ('sale of products', 38), ('net sales', 30), ('transmission and distribution business', 30), (' Sale of coal', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('from trading business', 44), ('revenue from operations', 43), ('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('sale of products', 36), ('transmission and distribution business', 33), (' Sale of coal', 33), (' Sales revenue', 31), ('net sales', 28), (' Revenue', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal', 78), ('net sales', 71), ('sale of products', 67), (' Sales revenue', 50), ('from trading business', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22), (' Revenue', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('revenue from contracts with customers', 47), ('Revenue from contract with customers', 47), ('revenue from operations', 35), ('transmission and distribution business', 32), (' Sales revenue', 28), ('from trading business', 26), ('sale of products', 25), ('net sales', 20), (' Revenue', 20), (' Sale of coal', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue', 50), (' Sales revenue', 47), ('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('Revenue from contract with customers', 16), (' Sale of coal', 13), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), (' Sales revenue', 37), ('sale of products', 36), (' Revenue', 36), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('revenue from operations', 31), ('from trading business', 26), ('net sales', 25), (' Sale of coal', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('transmission and distribution business', 42), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 31), ('from trading business', 31), ('revenue from operations', 30), (' Sale of coal', 30), ('sale of products', 28), (' Revenue', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue', 44), (' Sales revenue', 35), ('revenue from operations', 29), ('sale of products', 25), ('revenue from contracts with customers', 23), ('Revenue from contract with customers', 23), ('from trading business', 22), ('net sales', 20), ('transmission and distribution business', 20), (' Sale of coal', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), (' Sales revenue', 37), (' Revenue', 36), ('net sales', 33), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('sale of products', 29), ('from trading business', 26), (' Sale of coal', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('revenue from operations', 48), ('from trading business', 36), ('sale of products', 32), (' Revenue', 32), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 29), (' Sale of coal', 27), (' Sales revenue', 25), ('net sales', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal', 40), ('sale of products', 35), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22), (' Sales revenue', 18), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 41), ('revenue from operations', 36), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('transmission and distribution business', 35), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 23), ('net sales', 22), (' Sale of coal', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), (' Sales revenue', 37), ('transmission and distribution business', 32), (' Sale of coal', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Revenue', 27), ('revenue from operations', 25), ('net sales', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 32), ('revenue from operations', 31), ('transmission and distribution business', 29), ('sale of products', 19), (' Sales revenue', 19), ('net sales', 17), (' Sale of coal', 14), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('transmission and distribution business', 41), ('from trading business', 30), ('revenue from operations', 26), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 22), (' Sales revenue', 21), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), (' Sales revenue', 37), ('revenue from operations', 33), ('from trading business', 33), ('sale of products', 31), ('transmission and distribution business', 29), (' Sale of coal', 28), (' Revenue', 24), ('net sales', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 36), ('revenue from operations', 31), ('sale of products', 26), ('from trading business', 25), (' Sales revenue', 23), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('transmission and distribution business', 36), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), (' Sales revenue', 28), ('net sales', 26), ('from trading business', 26), ('revenue from operations', 25), (' Sale of coal', 21), ('sale of products', 20), (' Revenue', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('from trading business', 41), (' Sales revenue', 40), ('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 38), ('revenue from operations', 35), ('net sales', 31), (' Sale of coal', 30), ('sale of products', 28), (' Revenue', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('from trading business', 32), ('revenue from operations', 29), ('transmission and distribution business', 27), ('sale of products', 25), (' Sales revenue', 23), ('net sales', 21), (' Sale of coal', 20), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 33), ('net sales', 26), ('revenue from operations', 25), (' Sale of coal', 25), ('sale of products', 24), (' Sales revenue', 24), (' Revenue', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Revenue'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('revenue from operations', 70), (' Sales revenue', 69), ('sale of products', 55), ('revenue from contracts with customers', 49), ('Revenue from contract with customers', 49), ('from trading business', 44), (' Revenue', 44), ('net sales', 41), (' Sale of coal', 40), ('transmission and distribution business', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('revenue from operations', 68), (' Sales revenue', 50), ('revenue from contracts with customers', 49), ('Revenue from contract with customers', 49), ('from trading business', 40), (' Revenue', 39), ('sale of products', 38), ('net sales', 30), ('transmission and distribution business', 30), (' Sale of coal', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('from trading business', 44), ('revenue from operations', 43), ('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('sale of products', 36), ('transmission and distribution business', 33), (' Sale of coal', 33), (' Sales revenue', 31), ('net sales', 28), (' Revenue', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal', 78), ('net sales', 71), ('sale of products', 67), (' Sales revenue', 50), ('from trading business', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22), (' Revenue', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('revenue from contracts with customers', 47), ('Revenue from contract with customers', 47), ('revenue from operations', 35), ('transmission and distribution business', 32), (' Sales revenue', 28), ('from trading business', 26), ('sale of products', 25), ('net sales', 20), (' Revenue', 20), (' Sale of coal', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue', 50), (' Sales revenue', 47), ('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('Revenue from contract with customers', 16), (' Sale of coal', 13), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), (' Sales revenue', 37), ('sale of products', 36), (' Revenue', 36), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('revenue from operations', 31), ('from trading business', 26), ('net sales', 25), (' Sale of coal', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('transmission and distribution business', 42), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 31), ('from trading business', 31), ('revenue from operations', 30), (' Sale of coal', 30), ('sale of products', 28), (' Revenue', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue', 44), (' Sales revenue', 35), ('revenue from operations', 29), ('sale of products', 25), ('revenue from contracts with customers', 23), ('Revenue from contract with customers', 23), ('from trading business', 22), ('net sales', 20), ('transmission and distribution business', 20), (' Sale of coal', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), (' Sales revenue', 37), (' Revenue', 36), ('net sales', 33), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('sale of products', 29), ('from trading business', 26), (' Sale of coal', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('revenue from operations', 48), ('from trading business', 36), ('sale of products', 32), (' Revenue', 32), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 29), (' Sale of coal', 27), (' Sales revenue', 25), ('net sales', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal', 40), ('sale of products', 35), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22), (' Sales revenue', 18), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 41), ('revenue from operations', 36), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), ('transmission and distribution business', 35), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 23), ('net sales', 22), (' Sale of coal', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), (' Sales revenue', 37), ('transmission and distribution business', 32), (' Sale of coal', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Revenue', 27), ('revenue from operations', 25), ('net sales', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 32), ('revenue from operations', 31), ('transmission and distribution business', 29), ('sale of products', 19), (' Sales revenue', 19), ('net sales', 17), (' Sale of coal', 14), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('transmission and distribution business', 41), ('from trading business', 30), ('revenue from operations', 26), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 22), (' Sales revenue', 21), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), (' Sales revenue', 37), ('revenue from operations', 33), ('from trading business', 33), ('sale of products', 31), ('transmission and distribution business', 29), (' Sale of coal', 28), (' Revenue', 24), ('net sales', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 36), ('revenue from operations', 31), ('sale of products', 26), ('from trading business', 25), (' Sales revenue', 23), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('transmission and distribution business', 36), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), (' Sales revenue', 28), ('net sales', 26), ('from trading business', 26), ('revenue from operations', 25), (' Sale of coal', 21), ('sale of products', 20), (' Revenue', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('from trading business', 41), (' Sales revenue', 40), ('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 38), ('revenue from operations', 35), ('net sales', 31), (' Sale of coal', 30), ('sale of products', 28), (' Revenue', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('from trading business', 32), ('revenue from operations', 29), ('transmission and distribution business', 27), ('sale of products', 25), (' Sales revenue', 23), ('net sales', 21), (' Sale of coal', 20), (' Revenue', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 33), ('net sales', 26), ('revenue from operations', 25), (' Sale of coal', 25), ('sale of products', 24), (' Sales revenue', 24), (' Revenue', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Revenue'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Cost of goods and services sold', 52), (' Cost of product sold', 42), ('cost of sales', 40), ('Cost of sales', 40), (' Cost of inventory sold', 40), ('total expenditure', 38), ('total expenses', 36), (' cost of coal sold', 34), ('expense', 30), (' Personnel costs', 29), ('expenditure', 26), ('purchase of stock-in-trade', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Cost of goods and services sold', 40), (' Cost of inventory sold', 36), (' Cost of product sold', 33), (' Personnel costs', 31), ('expenditure', 29), ('expense', 26), ('total expenditure', 24), ('cost of sales', 24), ('Cost of sales', 24), ('total expenses', 22), (' cost of coal sold', 21), ('purchase of stock-in-trade', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Cost of goods and services sold', 43), (' Cost of product sold', 42), (' cost of coal sold', 40), (' Cost of inventory sold', 40), (' Personnel costs', 40), ('cost of sales', 33), ('Cost of sales', 33), ('purchase of stock-in-trade', 30), ('total expenditure', 27), ('total expenses', 18), ('expense', 15), ('expenditure', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' cost of coal sold', 33), (' Cost of goods and services sold', 33), (' Cost of inventory sold', 33), (' Cost of product sold', 31), (' Personnel costs', 30), ('total expenditure', 29), ('purchase of stock-in-trade', 28), ('total expenses', 25), ('expenditure', 19), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Cost of product sold', 42), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' cost of coal sold', 27), ('purchase of stock-in-trade', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), (' Cost of goods and services sold', 37), (' Cost of product sold', 34), (' cost of coal sold', 32), (' Personnel costs', 32), ('purchase of stock-in-trade', 28), (' Cost of inventory sold', 28), ('cost of sales', 24), ('Cost of sales', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), ('cost of sales', 19), ('Cost of sales', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 28), ('expenditure', 26), (' Cost of goods and services sold', 26), (' cost of coal sold', 22), (' Personnel costs', 22), ('expense', 21), (' Cost of product sold', 20), (' Cost of inventory sold', 19), ('cost of sales', 18), ('Cost of sales', 18), ('total expenses', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' Cost of goods and services sold', 39), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), (' Cost of inventory sold', 38), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), (' Cost of goods and services sold', 30), ('purchase of stock-in-trade', 29), (' cost of coal sold', 28), (' Personnel costs', 28), ('cost of sales', 26), ('Cost of sales', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' Cost of product sold', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('total expenditure', 29), ('total expenses', 27), (' Cost of goods and services sold', 26), (' Cost of inventory sold', 25), (' Personnel costs', 24), ('expenditure', 23), ('purchase of stock-in-trade', 22), (' Cost of product sold', 21), ('expense', 18), ('cost of sales', 17), ('Cost of sales', 17), (' cost of coal sold', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of goods and services sold', 43), (' Cost of inventory sold', 34), ('purchase of stock-in-trade', 31), (' cost of coal sold', 31), ('total expenditure', 30), (' Cost of product sold', 29), (' Personnel costs', 27), ('total expenses', 25), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 18), ('expense', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Cost of inventory sold', 43), ('purchase of stock-in-trade', 39), (' cost of coal sold', 39), ('total expenses', 36), (' Cost of product sold', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), ('expense', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 33), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' Personnel costs', 29), ('total expenditure', 28), ('purchase of stock-in-trade', 26), ('total expenses', 26), ('cost of sales', 24), ('Cost of sales', 24), (' cost of coal sold', 22), ('expenditure', 17), ('expense', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Cost of inventory sold', 31), (' Personnel costs', 30), ('total expenditure', 29), ('purchase of stock-in-trade', 28), (' Cost of goods and services sold', 28), ('total expenses', 27), (' Cost of product sold', 25), (' cost of coal sold', 23), ('cost of sales', 21), ('Cost of sales', 21), ('expenditure', 20), ('expense', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('purchase of stock-in-trade', 47), (' Cost of inventory sold', 42), ('total expenses', 39), (' Cost of goods and services sold', 37), ('total expenditure', 35), (' cost of coal sold', 32), (' Personnel costs', 32), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 29), (' Cost of product sold', 29), ('expense', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Personnel costs', 30), ('total expenditure', 29), (' Cost of product sold', 29), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of coal sold', 27), ('purchase of stock-in-trade', 25), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 17), ('expense', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 38), (' cost of coal sold', 34), ('total expenditure', 33), (' Cost of product sold', 32), ('purchase of stock-in-trade', 31), ('total expenses', 27), (' Personnel costs', 26), ('cost of sales', 21), ('Cost of sales', 21), ('expenditure', 20), ('expense', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 9], 'score': 100, 'value': -416304.0, 'line_item_label': ['Cost of sales', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-416304.0, 0.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Cost of goods and services sold', 52), (' Cost of product sold', 42), ('cost of sales', 40), ('Cost of sales', 40), (' Cost of inventory sold', 40), ('total expenditure', 38), ('total expenses', 36), (' cost of coal sold', 34), ('expense', 30), (' Personnel costs', 29), ('expenditure', 26), ('purchase of stock-in-trade', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Cost of goods and services sold', 40), (' Cost of inventory sold', 36), (' Cost of product sold', 33), (' Personnel costs', 31), ('expenditure', 29), ('expense', 26), ('total expenditure', 24), ('cost of sales', 24), ('Cost of sales', 24), ('total expenses', 22), (' cost of coal sold', 21), ('purchase of stock-in-trade', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Cost of goods and services sold', 43), (' Cost of product sold', 42), (' cost of coal sold', 40), (' Cost of inventory sold', 40), (' Personnel costs', 40), ('cost of sales', 33), ('Cost of sales', 33), ('purchase of stock-in-trade', 30), ('total expenditure', 27), ('total expenses', 18), ('expense', 15), ('expenditure', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' cost of coal sold', 33), (' Cost of goods and services sold', 33), (' Cost of inventory sold', 33), (' Cost of product sold', 31), (' Personnel costs', 30), ('total expenditure', 29), ('purchase of stock-in-trade', 28), ('total expenses', 25), ('expenditure', 19), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Cost of product sold', 42), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' cost of coal sold', 27), ('purchase of stock-in-trade', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), (' Cost of goods and services sold', 37), (' Cost of product sold', 34), (' cost of coal sold', 32), (' Personnel costs', 32), ('purchase of stock-in-trade', 28), (' Cost of inventory sold', 28), ('cost of sales', 24), ('Cost of sales', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), ('cost of sales', 19), ('Cost of sales', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('purchase of stock-in-trade', 31), ('total expenditure', 28), ('expenditure', 26), (' Cost of goods and services sold', 26), (' cost of coal sold', 22), (' Personnel costs', 22), ('expense', 21), (' Cost of product sold', 20), (' Cost of inventory sold', 19), ('cost of sales', 18), ('Cost of sales', 18), ('total expenses', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' Cost of goods and services sold', 39), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), (' Cost of inventory sold', 38), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), (' Cost of goods and services sold', 30), ('purchase of stock-in-trade', 29), (' cost of coal sold', 28), (' Personnel costs', 28), ('cost of sales', 26), ('Cost of sales', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' Cost of product sold', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('total expenditure', 29), ('total expenses', 27), (' Cost of goods and services sold', 26), (' Cost of inventory sold', 25), (' Personnel costs', 24), ('expenditure', 23), ('purchase of stock-in-trade', 22), (' Cost of product sold', 21), ('expense', 18), ('cost of sales', 17), ('Cost of sales', 17), (' cost of coal sold', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of goods and services sold', 43), (' Cost of inventory sold', 34), ('purchase of stock-in-trade', 31), (' cost of coal sold', 31), ('total expenditure', 30), (' Cost of product sold', 29), (' Personnel costs', 27), ('total expenses', 25), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 18), ('expense', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Cost of inventory sold', 43), ('purchase of stock-in-trade', 39), (' cost of coal sold', 39), ('total expenses', 36), (' Cost of product sold', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), ('expense', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 33), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' Personnel costs', 29), ('total expenditure', 28), ('purchase of stock-in-trade', 26), ('total expenses', 26), ('cost of sales', 24), ('Cost of sales', 24), (' cost of coal sold', 22), ('expenditure', 17), ('expense', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Cost of inventory sold', 31), (' Personnel costs', 30), ('total expenditure', 29), ('purchase of stock-in-trade', 28), (' Cost of goods and services sold', 28), ('total expenses', 27), (' Cost of product sold', 25), (' cost of coal sold', 23), ('cost of sales', 21), ('Cost of sales', 21), ('expenditure', 20), ('expense', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('purchase of stock-in-trade', 47), (' Cost of inventory sold', 42), ('total expenses', 39), (' Cost of goods and services sold', 37), ('total expenditure', 35), (' cost of coal sold', 32), (' Personnel costs', 32), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 29), (' Cost of product sold', 29), ('expense', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Personnel costs', 30), ('total expenditure', 29), (' Cost of product sold', 29), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of coal sold', 27), ('purchase of stock-in-trade', 25), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 17), ('expense', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 38), (' cost of coal sold', 34), ('total expenditure', 33), (' Cost of product sold', 32), ('purchase of stock-in-trade', 31), ('total expenses', 27), (' Personnel costs', 26), ('cost of sales', 21), ('Cost of sales', 21), ('expenditure', 20), ('expense', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 9], 'score': 100, 'value': -427427.0, 'line_item_label': ['Cost of sales', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-427427.0, 0.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Sales and marketing', 50), (' Amortisation expenses', 40), (' Selling & distribution expenses', 38), (' Administrative and other expenses', 38), (' Lease expenses', 38), (' Selling Expenses', 38), (' Marketing expenses', 35), (' Depreciation expenses', 34), (' Depreciation expenses', 34), (' Advertising expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Management expenses', 30), (' Other expenses', 30), (' Logistics and distribution', 29), (' Occupancy expenses', 24), (' depreciation', 21), (' Occupancy ', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Administrative and other expenses', 43), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Advertising expenses', 40), (' Sales and marketing', 40), (' Administrative expenses', 39), (' Selling & distribution expenses', 39), (' Administration expenses', 39), (' Amortisation expenses', 36), ('Distribution expenses', 34), (' Selling Expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' depreciation', 31), (' Logistics and distribution', 31), (' Lease expenses', 28), (' Occupancy expenses', 27), (' Marketing expenses', 26), (' Management expenses', 22), (' Occupancy ', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Advertising expenses', 39), (' Administrative expenses', 38), (' Lease expenses', 38), (' Administration expenses', 38), (' Administrative and other expenses', 34), (' Amortisation expenses', 34), (' Logistics and distribution', 34), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Depreciation expenses', 29), (' Selling & distribution expenses', 29), (' Depreciation expenses', 29), (' Management expenses', 24), (' Selling Expenses', 19), ('other expenses', 18), (' Marketing expenses', 18), (' Occupancy expenses', 18), (' Other expenses', 18), (' Other expenses', 18), (' Occupancy ', 15), (' depreciation', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing', 50), (' Lease expenses', 40), (' Selling Expenses', 40), (' Marketing expenses', 36), (' Amortisation expenses', 35), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 29), (' Other expenses', 29), (' Administrative and other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Logistics and distribution', 28), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Advertising expenses', 25), (' Occupancy expenses', 19), (' Occupancy ', 14), (' depreciation', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administrative and other expenses', 41), (' Administrative expenses', 32), (' Selling & distribution expenses', 32), (' Administration expenses', 32), (' Advertising expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), ('Distribution expenses', 29), (' Sales and marketing', 29), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' Depreciation expenses', 27), (' Depreciation expenses', 27), (' Occupancy expenses', 22), (' Lease expenses', 22), (' Selling Expenses', 22), (' Management expenses', 22), (' depreciation', 13), (' Occupancy ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Lease expenses', 71), (' Selling Expenses', 71), ('other expenses', 67), (' Occupancy expenses', 67), (' Other expenses', 67), (' Management expenses', 67), (' Other expenses', 67), (' Marketing expenses', 63), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Amortisation expenses', 60), (' Advertising expenses', 57), ('Distribution expenses', 55), (' Administrative expenses', 55), (' Administration expenses', 55), (' depreciation', 46), (' Selling & distribution expenses', 44), (' Administrative and other expenses', 38), (' Sales and marketing', 19), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Distribution expenses', 100), (' Selling & distribution expenses', 86), (' Administrative expenses', 75), (' Administration expenses', 75), (' Depreciation expenses', 67), (' Depreciation expenses', 67), (' Advertising expenses', 65), (' Logistics and distribution', 61), (' Amortisation expenses', 60), (' Administrative and other expenses', 57), (' Lease expenses', 44), (' Selling Expenses', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' depreciation', 35), (' Sales and marketing', 32), (' Occupancy ', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Marketing expenses', 70), (' Sales and marketing', 56), (' Administrative and other expenses', 52), ('other expenses', 50), (' Other expenses', 50), (' Management expenses', 50), (' Other expenses', 50), (' Lease expenses', 46), (' Advertising expenses', 46), (' Selling Expenses', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Logistics and distribution', 45), (' Occupancy expenses', 44), (' Selling & distribution expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), ('Distribution expenses', 40), (' depreciation', 32), (' Occupancy ', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), ('other expenses', 67), (' Other expenses', 67), (' Other expenses', 67), (' Lease expenses', 61), (' Selling Expenses', 61), (' Occupancy ', 59), (' Management expenses', 58), (' Marketing expenses', 56), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 42), (' Selling & distribution expenses', 42), (' Administrative and other expenses', 42), (' Logistics and distribution', 25), (' Sales and marketing', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses', 100), (' Administration expenses', 100), (' Administrative and other expenses', 76), ('Distribution expenses', 75), (' Amortisation expenses', 73), (' Advertising expenses', 71), (' Selling & distribution expenses', 65), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Lease expenses', 44), (' Selling Expenses', 44), (' Logistics and distribution', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' Sales and marketing', 39), (' depreciation', 35), (' Occupancy ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' depreciation', 50), (' Administrative expenses', 41), (' Administration expenses', 41), (' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Amortisation expenses', 37), (' Advertising expenses', 36), (' Sales and marketing', 36), ('Distribution expenses', 34), (' Marketing expenses', 31), (' Administrative and other expenses', 31), (' Logistics and distribution', 30), (' Selling & distribution expenses', 29), (' Lease expenses', 25), (' Selling Expenses', 25), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' Management expenses', 16), (' Occupancy ', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses', 35), (' Amortisation expenses', 32), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), (' Administrative and other expenses', 27), (' Lease expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Occupancy ', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' Sales and marketing', 23), (' depreciation', 22), (' Selling Expenses', 18), ('other expenses', 17), (' Other expenses', 17), (' Other expenses', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Marketing expenses', 48), ('other expenses', 44), (' Occupancy expenses', 44), (' Other expenses', 44), (' Management expenses', 44), (' Other expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), (' Advertising expenses', 41), (' Administrative and other expenses', 40), (' Lease expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Selling Expenses', 35), (' Logistics and distribution', 33), (' Sales and marketing', 32), (' depreciation', 28), (' Occupancy ', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' Other expenses', 64), (' Management expenses', 64), (' Other expenses', 64), (' Marketing expenses', 62), (' Lease expenses', 59), (' Occupancy expenses', 57), (' Selling Expenses', 52), (' Administrative and other expenses', 43), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 39), ('Distribution expenses', 38), (' Administrative expenses', 38), (' Selling & distribution expenses', 38), (' Administration expenses', 38), (' depreciation', 35), (' Sales and marketing', 32), (' Logistics and distribution', 28), (' Occupancy ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Administrative and other expenses', 41), (' Selling & distribution expenses', 37), ('Distribution expenses', 34), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Advertising expenses', 32), (' Marketing expenses', 30), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Occupancy expenses', 27), (' Depreciation expenses', 27), (' Depreciation expenses', 27), (' Management expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 25), (' Sales and marketing', 24), (' Selling Expenses', 22), (' depreciation', 15), (' Occupancy ', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Administrative and other expenses', 37), (' Logistics and distribution', 37), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), (' Marketing expenses', 24), (' Amortisation expenses', 24), (' Advertising expenses', 23), ('other expenses', 21), (' Occupancy expenses', 21), (' Other expenses', 21), (' Other expenses', 21), (' Depreciation expenses', 20), (' Depreciation expenses', 20), (' Lease expenses', 18), (' Selling Expenses', 18), (' Management expenses', 18), (' depreciation', 15), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other expenses', 51), (' Other expenses', 51), (' Other expenses', 51), (' Administrative and other expenses', 49), (' Lease expenses', 37), (' Selling Expenses', 37), (' Marketing expenses', 35), (' Logistics and distribution', 34), (' Selling & distribution expenses', 33), (' Occupancy expenses', 31), (' Management expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Sales and marketing', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' depreciation', 24), (' Advertising expenses', 24), ('Distribution expenses', 23), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 40), (' Logistics and distribution', 32), (' Selling Expenses', 30), (' Administrative and other expenses', 29), ('Distribution expenses', 28), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Sales and marketing', 25), ('other expenses', 23), (' Marketing expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Other expenses', 23), (' Administrative expenses', 22), (' Administration expenses', 22), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 20), (' Management expenses', 20), (' Advertising expenses', 19), (' Occupancy ', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Selling & distribution expenses', 37), (' Logistics and distribution', 34), ('Distribution expenses', 33), (' Administrative expenses', 33), (' Administration expenses', 33), (' Sales and marketing', 33), (' Advertising expenses', 30), (' Amortisation expenses', 30), (' Marketing expenses', 27), (' Management expenses', 27), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Lease expenses', 24), (' Selling Expenses', 24), ('other expenses', 20), (' Occupancy expenses', 20), (' Other expenses', 20), (' Other expenses', 20), (' Occupancy ', 14), (' depreciation', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Management expenses', 39), (' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Sales and marketing', 36), (' Lease expenses', 34), (' Selling Expenses', 34), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' Administrative and other expenses', 32), (' Amortisation expenses', 32), (' Logistics and distribution', 32), (' Selling & distribution expenses', 31), (' Advertising expenses', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' depreciation', 26), ('Distribution expenses', 25), (' Occupancy expenses', 22), (' Occupancy ', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Administrative and other expenses', 40), (' Selling & distribution expenses', 35), ('Distribution expenses', 29), (' Sales and marketing', 29), ('other expenses', 28), (' Other expenses', 28), (' Logistics and distribution', 28), (' Other expenses', 28), (' Marketing expenses', 25), (' Lease expenses', 23), (' Amortisation expenses', 22), (' Management expenses', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Advertising expenses', 21), (' Selling Expenses', 20), (' Occupancy expenses', 19), (' Depreciation expenses', 19), (' Depreciation expenses', 19), (' depreciation', 12), (' Occupancy ', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Logistics and distribution', 41), (' Selling & distribution expenses', 37), (' Administrative and other expenses', 37), (' Sales and marketing', 37), ('Distribution expenses', 33), (' Administrative expenses', 33), (' Administration expenses', 33), (' Advertising expenses', 26), (' Amortisation expenses', 26), ('other expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' Marketing expenses', 23), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Occupancy expenses', 20), (' Lease expenses', 20), (' Selling Expenses', 20), (' depreciation', 17), (' Management expenses', 16), (' Occupancy ', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 12, 13, 15], 'score': 100, 'value': -164308.0, 'line_item_label': ['Distribution expenses', 'Occupancy expenses', 'Administration expenses', 'Other expenses'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [-20612.0, -3667.0, -139886.0, -143.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Sales and marketing', 50), (' Amortisation expenses', 40), (' Selling & distribution expenses', 38), (' Administrative and other expenses', 38), (' Lease expenses', 38), (' Selling Expenses', 38), (' Marketing expenses', 35), (' Depreciation expenses', 34), (' Depreciation expenses', 34), (' Advertising expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Management expenses', 30), (' Other expenses', 30), (' Logistics and distribution', 29), (' Occupancy expenses', 24), (' depreciation', 21), (' Occupancy ', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Administrative and other expenses', 43), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Advertising expenses', 40), (' Sales and marketing', 40), (' Administrative expenses', 39), (' Selling & distribution expenses', 39), (' Administration expenses', 39), (' Amortisation expenses', 36), ('Distribution expenses', 34), (' Selling Expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' depreciation', 31), (' Logistics and distribution', 31), (' Lease expenses', 28), (' Occupancy expenses', 27), (' Marketing expenses', 26), (' Management expenses', 22), (' Occupancy ', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Advertising expenses', 39), (' Administrative expenses', 38), (' Lease expenses', 38), (' Administration expenses', 38), (' Administrative and other expenses', 34), (' Amortisation expenses', 34), (' Logistics and distribution', 34), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Depreciation expenses', 29), (' Selling & distribution expenses', 29), (' Depreciation expenses', 29), (' Management expenses', 24), (' Selling Expenses', 19), ('other expenses', 18), (' Marketing expenses', 18), (' Occupancy expenses', 18), (' Other expenses', 18), (' Other expenses', 18), (' Occupancy ', 15), (' depreciation', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing', 50), (' Lease expenses', 40), (' Selling Expenses', 40), (' Marketing expenses', 36), (' Amortisation expenses', 35), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 29), (' Other expenses', 29), (' Administrative and other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Logistics and distribution', 28), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Advertising expenses', 25), (' Occupancy expenses', 19), (' Occupancy ', 14), (' depreciation', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administrative and other expenses', 41), (' Administrative expenses', 32), (' Selling & distribution expenses', 32), (' Administration expenses', 32), (' Advertising expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), ('Distribution expenses', 29), (' Sales and marketing', 29), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' Depreciation expenses', 27), (' Depreciation expenses', 27), (' Occupancy expenses', 22), (' Lease expenses', 22), (' Selling Expenses', 22), (' Management expenses', 22), (' depreciation', 13), (' Occupancy ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Lease expenses', 71), (' Selling Expenses', 71), ('other expenses', 67), (' Occupancy expenses', 67), (' Other expenses', 67), (' Management expenses', 67), (' Other expenses', 67), (' Marketing expenses', 63), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Amortisation expenses', 60), (' Advertising expenses', 57), ('Distribution expenses', 55), (' Administrative expenses', 55), (' Administration expenses', 55), (' depreciation', 46), (' Selling & distribution expenses', 44), (' Administrative and other expenses', 38), (' Sales and marketing', 19), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Distribution expenses', 100), (' Selling & distribution expenses', 86), (' Administrative expenses', 75), (' Administration expenses', 75), (' Depreciation expenses', 67), (' Depreciation expenses', 67), (' Advertising expenses', 65), (' Logistics and distribution', 61), (' Amortisation expenses', 60), (' Administrative and other expenses', 57), (' Lease expenses', 44), (' Selling Expenses', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' depreciation', 35), (' Sales and marketing', 32), (' Occupancy ', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Marketing expenses', 70), (' Sales and marketing', 56), (' Administrative and other expenses', 52), ('other expenses', 50), (' Other expenses', 50), (' Management expenses', 50), (' Other expenses', 50), (' Lease expenses', 46), (' Advertising expenses', 46), (' Selling Expenses', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Logistics and distribution', 45), (' Occupancy expenses', 44), (' Selling & distribution expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), ('Distribution expenses', 40), (' depreciation', 32), (' Occupancy ', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), ('other expenses', 67), (' Other expenses', 67), (' Other expenses', 67), (' Lease expenses', 61), (' Selling Expenses', 61), (' Occupancy ', 59), (' Management expenses', 58), (' Marketing expenses', 56), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 42), (' Selling & distribution expenses', 42), (' Administrative and other expenses', 42), (' Logistics and distribution', 25), (' Sales and marketing', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses', 100), (' Administration expenses', 100), (' Administrative and other expenses', 76), ('Distribution expenses', 75), (' Amortisation expenses', 73), (' Advertising expenses', 71), (' Selling & distribution expenses', 65), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Lease expenses', 44), (' Selling Expenses', 44), (' Logistics and distribution', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' Sales and marketing', 39), (' depreciation', 35), (' Occupancy ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' depreciation', 50), (' Administrative expenses', 41), (' Administration expenses', 41), (' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Amortisation expenses', 37), (' Advertising expenses', 36), (' Sales and marketing', 36), ('Distribution expenses', 34), (' Marketing expenses', 31), (' Administrative and other expenses', 31), (' Logistics and distribution', 30), (' Selling & distribution expenses', 29), (' Lease expenses', 25), (' Selling Expenses', 25), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' Management expenses', 16), (' Occupancy ', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses', 35), (' Amortisation expenses', 32), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), (' Administrative and other expenses', 27), (' Lease expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Occupancy ', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' Sales and marketing', 23), (' depreciation', 22), (' Selling Expenses', 18), ('other expenses', 17), (' Other expenses', 17), (' Other expenses', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Marketing expenses', 48), ('other expenses', 44), (' Occupancy expenses', 44), (' Other expenses', 44), (' Management expenses', 44), (' Other expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), (' Advertising expenses', 41), (' Administrative and other expenses', 40), (' Lease expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Selling Expenses', 35), (' Logistics and distribution', 33), (' Sales and marketing', 32), (' depreciation', 28), (' Occupancy ', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' Other expenses', 64), (' Management expenses', 64), (' Other expenses', 64), (' Marketing expenses', 62), (' Lease expenses', 59), (' Occupancy expenses', 57), (' Selling Expenses', 52), (' Administrative and other expenses', 43), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 39), ('Distribution expenses', 38), (' Administrative expenses', 38), (' Selling & distribution expenses', 38), (' Administration expenses', 38), (' depreciation', 35), (' Sales and marketing', 32), (' Logistics and distribution', 28), (' Occupancy ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Administrative and other expenses', 41), (' Selling & distribution expenses', 37), ('Distribution expenses', 34), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Advertising expenses', 32), (' Marketing expenses', 30), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Occupancy expenses', 27), (' Depreciation expenses', 27), (' Depreciation expenses', 27), (' Management expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 25), (' Sales and marketing', 24), (' Selling Expenses', 22), (' depreciation', 15), (' Occupancy ', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Administrative and other expenses', 37), (' Logistics and distribution', 37), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), (' Marketing expenses', 24), (' Amortisation expenses', 24), (' Advertising expenses', 23), ('other expenses', 21), (' Occupancy expenses', 21), (' Other expenses', 21), (' Other expenses', 21), (' Depreciation expenses', 20), (' Depreciation expenses', 20), (' Lease expenses', 18), (' Selling Expenses', 18), (' Management expenses', 18), (' depreciation', 15), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other expenses', 51), (' Other expenses', 51), (' Other expenses', 51), (' Administrative and other expenses', 49), (' Lease expenses', 37), (' Selling Expenses', 37), (' Marketing expenses', 35), (' Logistics and distribution', 34), (' Selling & distribution expenses', 33), (' Occupancy expenses', 31), (' Management expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Sales and marketing', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' depreciation', 24), (' Advertising expenses', 24), ('Distribution expenses', 23), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 40), (' Logistics and distribution', 32), (' Selling Expenses', 30), (' Administrative and other expenses', 29), ('Distribution expenses', 28), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Sales and marketing', 25), ('other expenses', 23), (' Marketing expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Other expenses', 23), (' Administrative expenses', 22), (' Administration expenses', 22), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 20), (' Management expenses', 20), (' Advertising expenses', 19), (' Occupancy ', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Selling & distribution expenses', 37), (' Logistics and distribution', 34), ('Distribution expenses', 33), (' Administrative expenses', 33), (' Administration expenses', 33), (' Sales and marketing', 33), (' Advertising expenses', 30), (' Amortisation expenses', 30), (' Marketing expenses', 27), (' Management expenses', 27), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Lease expenses', 24), (' Selling Expenses', 24), ('other expenses', 20), (' Occupancy expenses', 20), (' Other expenses', 20), (' Other expenses', 20), (' Occupancy ', 14), (' depreciation', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Management expenses', 39), (' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Sales and marketing', 36), (' Lease expenses', 34), (' Selling Expenses', 34), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' Administrative and other expenses', 32), (' Amortisation expenses', 32), (' Logistics and distribution', 32), (' Selling & distribution expenses', 31), (' Advertising expenses', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' depreciation', 26), ('Distribution expenses', 25), (' Occupancy expenses', 22), (' Occupancy ', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Administrative and other expenses', 40), (' Selling & distribution expenses', 35), ('Distribution expenses', 29), (' Sales and marketing', 29), ('other expenses', 28), (' Other expenses', 28), (' Logistics and distribution', 28), (' Other expenses', 28), (' Marketing expenses', 25), (' Lease expenses', 23), (' Amortisation expenses', 22), (' Management expenses', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Advertising expenses', 21), (' Selling Expenses', 20), (' Occupancy expenses', 19), (' Depreciation expenses', 19), (' Depreciation expenses', 19), (' depreciation', 12), (' Occupancy ', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Logistics and distribution', 41), (' Selling & distribution expenses', 37), (' Administrative and other expenses', 37), (' Sales and marketing', 37), ('Distribution expenses', 33), (' Administrative expenses', 33), (' Administration expenses', 33), (' Advertising expenses', 26), (' Amortisation expenses', 26), ('other expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' Marketing expenses', 23), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Occupancy expenses', 20), (' Lease expenses', 20), (' Selling Expenses', 20), (' depreciation', 17), (' Management expenses', 16), (' Occupancy ', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 12, 13, 15], 'score': 100, 'value': -181105.0, 'line_item_label': ['Distribution expenses', 'Occupancy expenses', 'Administration expenses', 'Other expenses'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [-22949.0, -3766.0, -152966.0, -1424.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 32), ('Rent', 24), (' Occupancy expenses', 24), (' Occupancy', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Administration expenses', 39), (' Rental expenses', 32), (' Occupancy expenses', 27), ('Rent', 21), (' Occupancy', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Administration expenses', 38), (' Rental expenses', 24), (' Occupancy expenses', 18), ('Rent', 16), (' Occupancy', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 32), (' Occupancy expenses', 19), ('Rent', 15), (' Occupancy', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 14), (' Occupancy', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 63), (' Administration expenses', 55), ('Rent', 40), (' Occupancy', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Administration expenses', 75), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Rental expenses', 54), (' Administration expenses', 45), (' Occupancy expenses', 44), ('Rent', 21), (' Occupancy', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy', 59), (' Rental expenses', 56), (' Administration expenses', 43), ('Rent', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses', 100), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Administration expenses', 41), (' Rental expenses', 31), ('Rent', 24), (' Occupancy expenses', 24), (' Occupancy', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 30), (' Occupancy expenses', 26), (' Occupancy', 25), ('Rent', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses', 48), (' Occupancy expenses', 44), (' Administration expenses', 36), ('Rent', 24), (' Occupancy', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses', 57), (' Administration expenses', 38), ('Rent', 30), (' Occupancy', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Rental expenses', 30), (' Occupancy expenses', 27), (' Administration expenses', 26), ('Rent', 12), (' Occupancy', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 28), (' Occupancy expenses', 21), ('Rent', 16), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Rental expenses', 35), (' Occupancy expenses', 31), (' Administration expenses', 28), ('Rent', 26), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 22), (' Occupancy expenses', 20), ('Rent', 11), (' Occupancy', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 31), (' Occupancy expenses', 20), ('Rent', 19), (' Occupancy', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Rental expenses', 49), (' Administration expenses', 30), ('Rent', 29), (' Occupancy expenses', 22), (' Occupancy', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Rental expenses', 27), (' Administration expenses', 21), (' Occupancy expenses', 19), ('Rent', 12), (' Occupancy', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 31), (' Occupancy expenses', 20), ('Rent', 19), (' Occupancy', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': -143553.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-3667.0, -139886.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 32), ('Rent', 24), (' Occupancy expenses', 24), (' Occupancy', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Administration expenses', 39), (' Rental expenses', 32), (' Occupancy expenses', 27), ('Rent', 21), (' Occupancy', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Administration expenses', 38), (' Rental expenses', 24), (' Occupancy expenses', 18), ('Rent', 16), (' Occupancy', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 32), (' Occupancy expenses', 19), ('Rent', 15), (' Occupancy', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 14), (' Occupancy', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 63), (' Administration expenses', 55), ('Rent', 40), (' Occupancy', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Administration expenses', 75), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Rental expenses', 54), (' Administration expenses', 45), (' Occupancy expenses', 44), ('Rent', 21), (' Occupancy', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy', 59), (' Rental expenses', 56), (' Administration expenses', 43), ('Rent', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses', 100), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Administration expenses', 41), (' Rental expenses', 31), ('Rent', 24), (' Occupancy expenses', 24), (' Occupancy', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 30), (' Occupancy expenses', 26), (' Occupancy', 25), ('Rent', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses', 48), (' Occupancy expenses', 44), (' Administration expenses', 36), ('Rent', 24), (' Occupancy', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses', 57), (' Administration expenses', 38), ('Rent', 30), (' Occupancy', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Rental expenses', 30), (' Occupancy expenses', 27), (' Administration expenses', 26), ('Rent', 12), (' Occupancy', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 28), (' Occupancy expenses', 21), ('Rent', 16), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Rental expenses', 35), (' Occupancy expenses', 31), (' Administration expenses', 28), ('Rent', 26), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 22), (' Occupancy expenses', 20), ('Rent', 11), (' Occupancy', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 31), (' Occupancy expenses', 20), ('Rent', 19), (' Occupancy', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Rental expenses', 49), (' Administration expenses', 30), ('Rent', 29), (' Occupancy expenses', 22), (' Occupancy', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Rental expenses', 27), (' Administration expenses', 21), (' Occupancy expenses', 19), ('Rent', 12), (' Occupancy', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 31), (' Occupancy expenses', 20), ('Rent', 19), (' Occupancy', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': -156732.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-3766.0, -152966.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('Other revenue', 48), (' Other income', 31), ('other operating', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('Other revenue', 54), ('other operating', 34), (' Other income', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Other income', 44), ('other operating', 26), ('Other revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('Other revenue', 31), ('other operating', 22), (' Other income', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Other revenue', 43), ('other operating', 23), (' Other income', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other operating', 35), (' Other income', 29), ('Other revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('Other revenue', 40), ('other operating', 35), (' Other income', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Other income', 31), ('other operating', 25), ('Other revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Other income', 25), ('Other revenue', 21), ('other operating', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Other income', 58), ('other operating', 49), ('Other revenue', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('Other revenue', 24), ('other operating', 16), (' Other income', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Other income', 34), ('other operating', 29), ('Other revenue', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Other income', 31), ('other operating', 29), ('Other revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('Other revenue', 24), ('other operating', 20), (' Other income', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 1617.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [1617.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('Other revenue', 48), (' Other income', 31), ('other operating', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('Other revenue', 54), ('other operating', 34), (' Other income', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Other income', 44), ('other operating', 26), ('Other revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('Other revenue', 31), ('other operating', 22), (' Other income', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Other revenue', 43), ('other operating', 23), (' Other income', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other operating', 35), (' Other income', 29), ('Other revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('Other revenue', 40), ('other operating', 35), (' Other income', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Other income', 31), ('other operating', 25), ('Other revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Other income', 25), ('Other revenue', 21), ('other operating', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Other income', 58), ('other operating', 49), ('Other revenue', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('Other revenue', 24), ('other operating', 16), (' Other income', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Other income', 34), ('other operating', 29), ('Other revenue', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Other income', 31), ('other operating', 29), ('Other revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('Other revenue', 24), ('other operating', 20), (' Other income', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 2483.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [2483.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Interest revenue', 44), ('other income', 31), (' Net finance costs', 28), (' Finance income and costs', 24), (' Finance income and finance costs', 24), ('finance income', 18), ('Finance income', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Interest revenue', 50), ('finance income', 32), ('Finance income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 30), ('other income', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Finance income and costs', 52), (' Net finance costs', 50), (' Finance income and finance costs', 49), ('finance income', 48), ('Finance income', 48), ('other income', 44), (' Interest revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19), ('Finance income', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Interest revenue', 44), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 26), ('other income', 22), ('finance income', 22), ('Finance income', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), (' Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Interest revenue', 52), (' Finance income and costs', 32), (' Net finance costs', 32), (' Finance income and finance costs', 27), ('other income', 22), ('finance income', 21), ('Finance income', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), (' Interest revenue', 36), ('finance income', 33), ('Finance income', 33), (' Net finance costs', 31), ('other income', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), (' Finance income and costs', 30), ('other income', 26), ('finance income', 25), ('Finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), (' Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), ('Finance income', 29), (' Net finance costs', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Interest revenue', 43), ('other income', 33), ('finance income', 32), ('Finance income', 32), (' Net finance costs', 29), (' Finance income and costs', 24), (' Finance income and finance costs', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), (' Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), ('Finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income', 39), (' Finance income and costs', 36), (' Net finance costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), ('Finance income', 50), (' Net finance costs', 45), (' Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other income', 31), (' Finance income and finance costs', 29), (' Finance income and costs', 27), (' Net finance costs', 26), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and finance costs', 38), (' Finance income and costs', 36), (' Net finance costs', 30), ('other income', 25), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other income', 58), (' Net finance costs', 43), (' Finance income and costs', 38), ('finance income', 36), ('Finance income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 34), (' Interest revenue', 31), (' Net finance costs', 31), (' Finance income and costs', 29), ('other income', 23), ('finance income', 16), ('Finance income', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Net finance costs', 44), (' Finance income and finance costs', 42), (' Finance income and costs', 37), (' Interest revenue', 30), ('finance income', 27), ('Finance income', 27), ('other income', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), ('other income', 34), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Finance income and costs', 35), (' Finance income and finance costs', 34), (' Net finance costs', 32), ('other income', 31), ('finance income', 28), ('Finance income', 28), (' Interest revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and finance costs', 39), (' Finance income and costs', 37), (' Net finance costs', 30), (' Interest revenue', 26), ('finance income', 24), ('Finance income', 24), ('other income', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': 85, 'value': 511.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [1617.0, -1106.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Interest revenue', 44), ('other income', 31), (' Net finance costs', 28), (' Finance income and costs', 24), (' Finance income and finance costs', 24), ('finance income', 18), ('Finance income', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Interest revenue', 50), ('finance income', 32), ('Finance income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 30), ('other income', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Finance income and costs', 52), (' Net finance costs', 50), (' Finance income and finance costs', 49), ('finance income', 48), ('Finance income', 48), ('other income', 44), (' Interest revenue', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19), ('Finance income', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Interest revenue', 44), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 26), ('other income', 22), ('finance income', 22), ('Finance income', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), (' Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Interest revenue', 52), (' Finance income and costs', 32), (' Net finance costs', 32), (' Finance income and finance costs', 27), ('other income', 22), ('finance income', 21), ('Finance income', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), (' Interest revenue', 36), ('finance income', 33), ('Finance income', 33), (' Net finance costs', 31), ('other income', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), (' Finance income and costs', 30), ('other income', 26), ('finance income', 25), ('Finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), (' Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), ('Finance income', 29), (' Net finance costs', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Interest revenue', 43), ('other income', 33), ('finance income', 32), ('Finance income', 32), (' Net finance costs', 29), (' Finance income and costs', 24), (' Finance income and finance costs', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), (' Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), ('Finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income', 39), (' Finance income and costs', 36), (' Net finance costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), ('Finance income', 50), (' Net finance costs', 45), (' Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other income', 31), (' Finance income and finance costs', 29), (' Finance income and costs', 27), (' Net finance costs', 26), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and finance costs', 38), (' Finance income and costs', 36), (' Net finance costs', 30), ('other income', 25), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other income', 58), (' Net finance costs', 43), (' Finance income and costs', 38), ('finance income', 36), ('Finance income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 34), (' Interest revenue', 31), (' Net finance costs', 31), (' Finance income and costs', 29), ('other income', 23), ('finance income', 16), ('Finance income', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Net finance costs', 44), (' Finance income and finance costs', 42), (' Finance income and costs', 37), (' Interest revenue', 30), ('finance income', 27), ('Finance income', 27), ('other income', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), ('other income', 34), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Finance income and costs', 35), (' Finance income and finance costs', 34), (' Net finance costs', 32), ('other income', 31), ('finance income', 28), ('Finance income', 28), (' Interest revenue', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and finance costs', 39), (' Finance income and costs', 37), (' Net finance costs', 30), (' Interest revenue', 26), ('finance income', 24), ('Finance income', 24), ('other income', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': 85, 'value': 1627.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [2483.0, -856.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 28), ('finance cost', 25), ('finance costs', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 32), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' net finance costs ', 50), ('finance cost', 44), ('finance costs', 44), (' finance expenses', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), (' finance expenses', 24), ('finance cost', 22), ('finance costs', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), (' net finance costs ', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 31), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 26), ('finance costs', 26), (' net finance costs ', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 26), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 21), ('finance costs', 21), (' finance expenses', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 41), ('finance cost', 40), ('finance costs', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 20), ('finance costs', 20), (' finance expenses', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -1106.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-1106.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 28), ('finance cost', 25), ('finance costs', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 32), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' net finance costs ', 50), ('finance cost', 44), ('finance costs', 44), (' finance expenses', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), (' finance expenses', 24), ('finance cost', 22), ('finance costs', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), (' net finance costs ', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 31), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 26), ('finance costs', 26), (' net finance costs ', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 26), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 21), ('finance costs', 21), (' finance expenses', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 41), ('finance cost', 40), ('finance costs', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 20), ('finance costs', 20), (' finance expenses', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -856.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-856.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 28), ('finance cost', 25), ('finance costs', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 32), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' net finance costs ', 50), ('finance cost', 44), ('finance costs', 44), (' finance expenses', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), (' finance expenses', 24), ('finance cost', 22), ('finance costs', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), (' net finance costs ', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 31), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 26), ('finance costs', 26), (' net finance costs ', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 26), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 21), ('finance costs', 21), (' finance expenses', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 41), ('finance cost', 40), ('finance costs', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 20), ('finance costs', 20), (' finance expenses', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -1106.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-1106.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 28), ('finance cost', 25), ('finance costs', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 32), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' net finance costs ', 50), ('finance cost', 44), ('finance costs', 44), (' finance expenses', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), (' finance expenses', 24), ('finance cost', 22), ('finance costs', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), (' net finance costs ', 32), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 31), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 26), ('finance costs', 26), (' net finance costs ', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), (' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' net finance costs ', 45), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 26), ('finance cost', 17), ('finance costs', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 21), ('finance costs', 21), (' finance expenses', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 41), ('finance cost', 40), ('finance costs', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' net finance costs ', 30), ('finance cost', 20), ('finance costs', 20), (' finance expenses', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -856.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-856.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('provision for taxation previous year', 44), ('current tax', 38), ('amount transferred to retained earnings', 38), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), ('prior year ', 32), (' income tax benefit/(expense)', 31), (' income tax expense', 27), (' income tax', 27), (' income tax benefit', 26), ('earlier year', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('amount transferred to retained earnings', 46), ('provision for taxation previous year', 44), (' income tax benefit/(expense)', 41), (' tax (expense)/benefit', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('earlier year', 32), (' income tax expense', 29), (' income tax benefit', 29), ('current tax', 28), ('deferred tax', 24), (' income tax', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' income tax', 47), (' income tax benefit', 47), (' income tax benefit/(expense)', 44), (' income tax expense', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('prior year ', 39), ('earlier year', 36), ('provision for taxation previous year', 32), ('current tax', 31), ('deferred tax', 27), (' tax (expense)/benefit', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' income tax benefit/(expense)', 34), ('provision for taxation previous year', 32), (' tax (expense)/benefit', 31), (' income tax expense', 29), (' income tax benefit', 29), ('current tax', 25), ('earlier year', 25), ('deferred tax', 19), ('prior year ', 19), (' income tax', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 45), (' income tax expense', 38), ('amount transferred to retained earnings', 33), ('deferred tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('minimum alternate tax credit entitlement', 29), ('earlier year', 29), ('provision for taxation previous year', 27), (' income tax', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' income tax expense', 50), (' income tax benefit/(expense)', 50), (' tax (expense)/benefit', 48), ('amount transferred to retained earnings', 43), (' income tax benefit', 39), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 36), ('provision for taxation previous year', 34), ('earlier year', 33), ('current tax', 29), ('prior year ', 24), (' income tax', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('prior year ', 43), ('earlier year', 40), ('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 31), ('provision for taxation previous year', 29), (' income tax', 27), (' income tax benefit/(expense)', 27), (' tax (expense)/benefit', 26), ('current tax', 25), (' income tax expense', 21), (' income tax benefit', 20), ('deferred tax', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year ', 31), ('earlier year', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax benefit/(expense)', 47), (' income tax expense', 42), ('minimum alternate tax credit entitlement', 41), (' income tax benefit', 36), (' tax (expense)/benefit', 35), ('amount transferred to retained earnings', 34), ('earlier year', 30), ('prior year ', 28), (' income tax', 26), ('current tax', 25), ('deferred tax', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 36), ('provision for taxation previous year', 32), ('current tax', 29), (' income tax benefit/(expense)', 29), (' income tax expense', 26), (' income tax benefit', 26), ('earlier year', 25), (' tax (expense)/benefit', 25), ('prior year ', 22), (' income tax', 22), ('deferred tax', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' income tax expense', 56), (' income tax benefit/(expense)', 47), ('provision for taxation previous year', 46), (' income tax benefit', 45), (' income tax', 39), ('prior year ', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), ('current tax', 32), (' tax (expense)/benefit', 31), ('earlier year', 26), ('deferred tax', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), (' income tax benefit', 30), (' income tax expense', 25), ('prior year ', 24), ('earlier year', 23), ('deferred tax', 21), (' income tax', 21), ('current tax', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' income tax benefit/(expense)', 54), (' tax (expense)/benefit', 53), ('minimum alternate tax credit entitlement', 51), (' income tax benefit', 50), ('amount transferred to retained earnings', 48), ('current tax', 40), (' income tax expense', 36), ('deferred tax', 33), ('provision for taxation previous year', 32), ('earlier year', 27), (' income tax', 25), ('prior year ', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('amount transferred to retained earnings', 55), ('current tax', 51), ('provision for taxation previous year', 42), (' income tax expense', 40), (' income tax benefit', 39), (' income tax benefit/(expense)', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('prior year ', 29), ('earlier year', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('provision for taxation previous year', 38), (' income tax benefit/(expense)', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), (' income tax expense', 34), (' income tax benefit', 34), ('prior year ', 29), ('earlier year', 28), (' tax (expense)/benefit', 28), ('current tax', 23), (' income tax', 23), ('deferred tax', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('amount transferred to retained earnings', 36), ('current tax', 32), ('provision for taxation previous year', 32), (' income tax benefit/(expense)', 32), (' income tax benefit', 29), (' tax (expense)/benefit', 28), ('earlier year', 27), (' income tax expense', 25), ('prior year ', 24), (' income tax', 21), ('deferred tax', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': -8410.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['8'], 'line_item_value': [-8410.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('provision for taxation previous year', 44), ('current tax', 38), ('amount transferred to retained earnings', 38), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), ('prior year ', 32), (' income tax benefit/(expense)', 31), (' income tax expense', 27), (' income tax', 27), (' income tax benefit', 26), ('earlier year', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('amount transferred to retained earnings', 46), ('provision for taxation previous year', 44), (' income tax benefit/(expense)', 41), (' tax (expense)/benefit', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('earlier year', 32), (' income tax expense', 29), (' income tax benefit', 29), ('current tax', 28), ('deferred tax', 24), (' income tax', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' income tax', 47), (' income tax benefit', 47), (' income tax benefit/(expense)', 44), (' income tax expense', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('prior year ', 39), ('earlier year', 36), ('provision for taxation previous year', 32), ('current tax', 31), ('deferred tax', 27), (' tax (expense)/benefit', 26)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' income tax benefit/(expense)', 34), ('provision for taxation previous year', 32), (' tax (expense)/benefit', 31), (' income tax expense', 29), (' income tax benefit', 29), ('current tax', 25), ('earlier year', 25), ('deferred tax', 19), ('prior year ', 19), (' income tax', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 45), (' income tax expense', 38), ('amount transferred to retained earnings', 33), ('deferred tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('minimum alternate tax credit entitlement', 29), ('earlier year', 29), ('provision for taxation previous year', 27), (' income tax', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' income tax expense', 50), (' income tax benefit/(expense)', 50), (' tax (expense)/benefit', 48), ('amount transferred to retained earnings', 43), (' income tax benefit', 39), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 36), ('provision for taxation previous year', 34), ('earlier year', 33), ('current tax', 29), ('prior year ', 24), (' income tax', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('prior year ', 43), ('earlier year', 40), ('amount transferred to retained earnings', 35), ('minimum alternate tax credit entitlement', 31), ('provision for taxation previous year', 29), (' income tax', 27), (' income tax benefit/(expense)', 27), (' tax (expense)/benefit', 26), ('current tax', 25), (' income tax expense', 21), (' income tax benefit', 20), ('deferred tax', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year ', 31), ('earlier year', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax benefit/(expense)', 47), (' income tax expense', 42), ('minimum alternate tax credit entitlement', 41), (' income tax benefit', 36), (' tax (expense)/benefit', 35), ('amount transferred to retained earnings', 34), ('earlier year', 30), ('prior year ', 28), (' income tax', 26), ('current tax', 25), ('deferred tax', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 36), ('provision for taxation previous year', 32), ('current tax', 29), (' income tax benefit/(expense)', 29), (' income tax expense', 26), (' income tax benefit', 26), ('earlier year', 25), (' tax (expense)/benefit', 25), ('prior year ', 22), (' income tax', 22), ('deferred tax', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' income tax expense', 56), (' income tax benefit/(expense)', 47), ('provision for taxation previous year', 46), (' income tax benefit', 45), (' income tax', 39), ('prior year ', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), ('current tax', 32), (' tax (expense)/benefit', 31), ('earlier year', 26), ('deferred tax', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), (' income tax benefit', 30), (' income tax expense', 25), ('prior year ', 24), ('earlier year', 23), ('deferred tax', 21), (' income tax', 21), ('current tax', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' income tax benefit/(expense)', 54), (' tax (expense)/benefit', 53), ('minimum alternate tax credit entitlement', 51), (' income tax benefit', 50), ('amount transferred to retained earnings', 48), ('current tax', 40), (' income tax expense', 36), ('deferred tax', 33), ('provision for taxation previous year', 32), ('earlier year', 27), (' income tax', 25), ('prior year ', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('amount transferred to retained earnings', 55), ('current tax', 51), ('provision for taxation previous year', 42), (' income tax expense', 40), (' income tax benefit', 39), (' income tax benefit/(expense)', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('prior year ', 29), ('earlier year', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('provision for taxation previous year', 38), (' income tax benefit/(expense)', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), (' income tax expense', 34), (' income tax benefit', 34), ('prior year ', 29), ('earlier year', 28), (' tax (expense)/benefit', 28), ('current tax', 23), (' income tax', 23), ('deferred tax', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('amount transferred to retained earnings', 36), ('current tax', 32), ('provision for taxation previous year', 32), (' income tax benefit/(expense)', 32), (' income tax benefit', 29), (' tax (expense)/benefit', 28), ('earlier year', 27), (' income tax expense', 25), ('prior year ', 24), (' income tax', 21), ('deferred tax', 17)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': -9702.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['8'], 'line_item_value': [-9702.0]}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 77), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 75), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 61), (' deferred income tax', 47)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' deferred income tax', 60), (' total income tax expense / (benefit)', 60), (' total tax (expense)/benefit in income statement', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' current income tax', 41)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense adjustment recognised for prior periods , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 69), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 67), (' total income tax expense / (benefit)', 63), (' total tax (expense)/benefit in income statement', 48), (' current income tax', 41), (' deferred income tax', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 73), (' current income tax', 71), (' income tax expense on continuing operations', 69), (' total tax (expense)/benefit in income statement', 65), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase in deferred tax assets (note 17) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total tax (expense)/benefit in income statement', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 54)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase/(decrease) in deferred tax liabilities (note 23) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 52)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 50)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: entertainment expenses , res_fuzz_match = [(' total income tax expense / (benefit)', 63), ('income tax expense', 62), (' deferred income tax', 60), (' current income tax', 53), (' income tax expense on continuing operations', 52), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: other , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 53), ('income tax expense', 50), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' total income tax expense / (benefit)', 43)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 38)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: adjustment recognised for prior periods , res_fuzz_match = [(' income tax expense on continuing operations', 59), (' total income tax expense / (benefit)', 57), (' current income tax', 53), (' deferred income tax', 53), ('income tax expense', 50), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 67), (' total income tax expense / (benefit)', 67), (' current income tax', 65), (' income tax expense on continuing operations', 55), (' total tax (expense)/benefit in income statement', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 77), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 75), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 61), (' deferred income tax', 47)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' deferred income tax', 60), (' total income tax expense / (benefit)', 60), (' total tax (expense)/benefit in income statement', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' current income tax', 41)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense adjustment recognised for prior periods , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 69), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 67), (' total income tax expense / (benefit)', 63), (' total tax (expense)/benefit in income statement', 48), (' current income tax', 41), (' deferred income tax', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 73), (' current income tax', 71), (' income tax expense on continuing operations', 69), (' total tax (expense)/benefit in income statement', 65), (' total income tax expense / (benefit)', 63), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase in deferred tax assets (note 17) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total tax (expense)/benefit in income statement', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 54)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase/(decrease) in deferred tax liabilities (note 23) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 52)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 50)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 55)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: entertainment expenses , res_fuzz_match = [(' total income tax expense / (benefit)', 63), ('income tax expense', 62), (' deferred income tax', 60), (' current income tax', 53), (' income tax expense on continuing operations', 52), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: other , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 53), ('income tax expense', 50), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' total income tax expense / (benefit)', 43)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense / (benefit)', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' income tax expense on continuing operations', 38)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: adjustment recognised for prior periods , res_fuzz_match = [(' income tax expense on continuing operations', 59), (' total income tax expense / (benefit)', 57), (' current income tax', 53), (' deferred income tax', 53), ('income tax expense', 50), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductible/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 67), (' total income tax expense / (benefit)', 67), (' current income tax', 65), (' income tax expense on continuing operations', 55), (' total tax (expense)/benefit in income statement', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [9046.0, -307.0, 963.0, 9702.0, -68.0, -239.0, -307.0, 38111.0, 11433.0, 9702.0, 11425.0, 1490.0, -4505.0, 8410.0, -488.0, 1978.0, 1490.0, 51428.0, 15428.0, 8410.0], 'label': ['Income tax expense Current tax', 'Income tax expense Deferred tax - origination and reversal of temporary differences', 'Income tax expense Adjustment recognised for prior periods', 'Income tax expense Aggregate income tax expense', 'Deferred tax included in income tax expense comprises: Increase in deferred tax assets (note 17)', 'Deferred tax included in income tax expense comprises: Increase/(decrease) in deferred tax liabilities (note 23)', 'Deferred tax included in income tax expense comprises: Deferred tax - origination and reversal of temporary differences', 'Numerical reconciliation of income tax expense and tax at the statutory rate Profit before income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Tax at the statutory tax rate of 30%', 'Tax effect amounts which are not deductible/taxable) in calculating taxable income: Income tax expense', 'Income tax expense Current tax', 'Income tax expense Deferred tax - origination and reversal of temporary differences', 'Income tax expense Adjustment recognised for prior periods', 'Income tax expense Aggregate income tax expense', 'Deferred tax included in income tax expense comprises: Increase in deferred tax assets (note 17)', 'Deferred tax included in income tax expense comprises: Increase/(decrease) in deferred tax liabilities (note 23)', 'Deferred tax included in income tax expense comprises: Deferred tax - origination and reversal of temporary differences', 'Numerical reconciliation of income tax expense and tax at the statutory rate Profit before income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Tax at the statutory tax rate of 30%', 'Tax effect amounts which are not deductible/taxable) in calculating taxable income: Income tax expense'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('prior period', 32), ('exceptional', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('prior period', 22), ('exceptional', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('prior period', 29), ('exceptional', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('prior period', 39), ('exceptional', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('prior period', 40), ('exceptional', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('prior period', 36), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('prior period', 28), ('exceptional', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('prior period', 25), ('exceptional', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('prior period', 32), ('exceptional', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 27), ('prior period', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('prior period', 22), ('exceptional', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('prior period', 29), ('exceptional', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('prior period', 39), ('exceptional', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 33)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('prior period', 40), ('exceptional', 32)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('prior period', 36), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('prior period', 28), ('exceptional', 27)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('prior period', 25), ('exceptional', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:25:36+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-05-23 10:25:36+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:25:36+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:25:36+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-05-23 10:25:36+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-05-23 10:57:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-05-23 10:57:15+0530 - sLogger - DEBUG - process_main_pages started
2023-05-23 10:57:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:57:15+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:57:15+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:57:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:57:15+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:57:15+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:57:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-05-23 10:57:15+0530 - sLogger - DEBUG - start_refactoring started
2023-05-23 10:57:15+0530 - sLogger - DEBUG - start_refactoring completed
2023-05-23 10:57:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-05-23 10:57:15+0530 - sLogger - DEBUG - set_section_details started
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Prepayments | [('current liabilities', 30), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('liabilities', 12)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total | [('liabilities', 36), ('equity liabilities', 33), ('current liabilities', 32), ('equity and liabilities', 27), ('current assets', 22), ('noncurrent assets', 22), ('noncurrent liabilities', 21), ('assets', 20), ('equity', 18)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD current assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD current liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD noncurrent assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD non current assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD non current liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD equity and liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total | MATCH WORD equity | score 18
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Lease liabili ties | [('liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('equity and liabilities', 48), ('noncurrent liabilities', 47), ('equity', 36), ('assets', 29), ('current assets', 28), ('noncurrent assets', 21)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD current assets | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD current liabilities | score 70
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD noncurrent assets | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD noncurrent liabilities | score 65
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD non current assets | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD non current liabilities | score 63
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD equity and liabilities | score 70
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabili ties | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Current tax liability | [('current liabilities', 88), ('equity liabilities', 58), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD current assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD current liabilities | score 80
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD noncurrent assets | score 53
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD noncurrent liabilities | score 74
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD non current assets | score 53
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD non current liabilities | score 73
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD equity and liabilities | score 60
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Current tax liability | MATCH WORD equity | score 45
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('current assets', 21), ('assets', 19), ('noncurrent assets', 14)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 42
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 39
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Share capital | [('current assets', 42), ('assets', 38), ('equity and liabilities', 36), ('noncurrent assets', 33), ('equity liabilities', 33), ('current liabilities', 32), ('noncurrent liabilities', 32), ('liabilities', 24), ('equity', 24)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current assets | score 37
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent assets | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent liabilities | score 41
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current assets | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current liabilities | score 41
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity and liabilities | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity | score 32
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Retained earnin ngs | [('equity and liabilities', 42), ('current liabilities', 40), ('equity', 36), ('current assets', 34), ('equity liabilities', 34), ('noncurrent liabilities', 33), ('assets', 29), ('noncurrent assets', 28), ('liabilities', 27)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD current assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD current liabilities | score 37
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD noncurrent assets | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD noncurrent liabilities | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD non current assets | score 36
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD non current liabilities | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD equity and liabilities | score 44
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Retained earnin ngs | MATCH WORD equity | score 30
2023-05-23 10:57:15+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-05-23 10:57:15+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-05-23 10:57:15+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-05-23 10:57:15+0530 - sLogger - DEBUG - set_section_details started
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash generated from operations | movements in working capital
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax paid | changes in working capital
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from discontinued operations | adiustments for movements in working capital
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from investing activities | adjustments for increase decrease in operating liabilities
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in financing activities | adjustments for increase decrease in operating assets
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net Idecreasel/increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-05-23 10:57:15+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: ord() expected a character, but string of length 2 found
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: ord() expected a character, but string of length 2 found
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: ord() expected a character, but string of length 2 found
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: ord() expected a character, but string of length 2 found
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: list index out of range
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: 'value'
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: 'value'
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: sequence item 1: expected str instance, float found
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: 'year'
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: 'value'
2023-05-23 10:57:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-05-23 10:57:17+0530 - sLogger - ERROR - error occured: 'value'
2023-05-23 10:57:17+0530 - sLogger - DEBUG - process_main_pages completed
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash and short term deposits', 18), ('cash and cash equivalents', 15), (' cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other bank balances', 50), ('cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 92315.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [92315.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash and short term deposits', 18), ('cash and cash equivalents', 15), (' cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other bank balances', 50), ('cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 41842.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [41842.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 27635.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [27635.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 34319.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [34319.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('prepayments', 100), ('other current financial assets', 18), ('other current assets', 16), ('other financial assets', 16), ('other assets', 12)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets', 100), ('other current assets', 73), ('other financial assets', 73), ('other current financial assets', 58), ('prepayments', 12)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8], 'score': 100, 'value': 880.0, 'line_item_label': ['Prepayments', 'Other assets'], 'note_numbers': [nan, nan], 'line_item_value': [815.0, 65.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('prepayments', 100), ('other current financial assets', 18), ('other current assets', 16), ('other financial assets', 16), ('other assets', 12)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets', 100), ('other current assets', 73), ('other financial assets', 73), ('other current financial assets', 58), ('prepayments', 12)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8], 'score': 100, 'value': 745.0, 'line_item_label': ['Prepayments', 'Other assets'], 'note_numbers': [nan, nan], 'line_item_value': [680.0, 65.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-05-23 10:57:21+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-05-23 10:57:21+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure', 22), (' financial assets', 21), (' income tax receivable from related parties', 21), (' trade and other receivables', 21), ('other current assets', 16), (' other current assets', 16), (' other financial assets', 16), ('other assets', 12), (' biological assets', 11)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets', 100), ('other current assets', 73), (' other current assets', 73), (' other financial assets', 73), (' biological assets', 61), (' financial assets', 50), (' trade and other receivables', 42), (' deferred operating expenditure', 38), (' income tax receivable from related parties', 23)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 25794.0, 'line_item_label': ['Trade and other receivables', 'Other assets'], 'note_numbers': ['9', nan], 'line_item_value': [25729.0, 65.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure', 22), (' financial assets', 21), (' income tax receivable from related parties', 21), (' trade and other receivables', 21), ('other current assets', 16), (' other current assets', 16), (' other financial assets', 16), ('other assets', 12), (' biological assets', 11)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets', 100), ('other current assets', 73), (' other current assets', 73), (' other financial assets', 73), (' biological assets', 61), (' financial assets', 50), (' trade and other receivables', 42), (' deferred operating expenditure', 38), (' income tax receivable from related parties', 23)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 25275.0, 'line_item_label': ['Trade and other receivables', 'Other assets'], 'note_numbers': ['9', nan], 'line_item_value': [25210.0, 65.0]}
2023-05-23 10:57:21+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-05-23 10:57:21+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-05-23 10:57:21+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 0.0, 0.0, 24577.0, 626.0, 7.0, 25210.0, 0.0, 25031.0, 677.0, 21.0, 25729.0, 0.0], 'label': ['Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
