2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:00:17+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:00:17+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:00:17+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:00:17+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:00:17+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:00:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:00:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:00:17+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:00:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:00:18+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 20558234.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 20558234.0, 0.0, 0.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 29230893.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 28301337.0, 409556.0, 520000.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 78927392.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [55677648.0, 20558234.0, 1961402.0, 0.0, 0.0, 730108.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 98754244.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [66271138.0, 28301337.0, 2213375.0, 409556.0, 520000.0, 1038838.0]}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 5, 6, 7, 8], 'score': [100, 80, 82, 100, 100, 80, 82, 100], 'value': [8166254.0, 785740.0, 44920374.0, 12398770.0, 6067584.0, 471416.0, 37688849.0, 11449799.0], 'label': ['Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan', 'Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5, 11, 16], 'score': [100, 100, 100, 100], 'value': [7248723.0, 0.0, 6327762.0, 0.0], 'label': ['Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers', 'Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 6, 7, 8], 'score': [90, 80, 100, 90, 80, 100], 'value': [1386692.0, 576678.0, 250005.0, 1189057.0, 772345.0, 0.0], 'label': ['Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits', 'Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:19+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:19+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:00:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:00:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:19+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 29913675.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [29913675.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 41223680.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [41223680.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 92742998.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [92742998.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 121289307.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [121289307.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Sales revenue ', 50), (' net sales ', 38), (' from trading business ', 36), ('revenue from operations ', 34), (' sale of products ', 32), (' Revenue ', 32), (' revenue from contracts with customers ', 31), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' transmission and distribution business ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' from trading business ', 39), (' net sales ', 35), (' revenue from contracts with customers ', 31), (' revenue from continuing activities', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' Sales revenue ', 27), (' Sale of coal ', 23), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' revenue from continuing activities', 35), ('revenue from operations ', 34), (' from trading business ', 34), (' sale of products ', 33), (' Sales revenue ', 33), (' net sales ', 27), (' Sale of coal ', 27), (' transmission and distribution business ', 25), (' Revenue ', 16)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 435163948.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [435163948.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Sales revenue ', 50), (' net sales ', 38), (' from trading business ', 36), ('revenue from operations ', 34), (' sale of products ', 32), (' Revenue ', 32), (' revenue from contracts with customers ', 31), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' transmission and distribution business ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' from trading business ', 39), (' net sales ', 35), (' revenue from contracts with customers ', 31), (' revenue from continuing activities', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' Sales revenue ', 27), (' Sale of coal ', 23), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' revenue from continuing activities', 35), ('revenue from operations ', 34), (' from trading business ', 34), (' sale of products ', 33), (' Sales revenue ', 33), (' net sales ', 27), (' Sale of coal ', 27), (' transmission and distribution business ', 25), (' Revenue ', 16)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 530127762.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [530127762.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('Cost of sales', 36), ('purchase of stock-in-trade', 31), (' Personnel costs', 30), (' change in inventory', 29), (' Cost of product sold', 27), (' Cost of inventory sold', 25), (' Cost of goods and services sold', 21), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('total expenses', 53), ('total expenditure', 43), ('expenditure', 39), ('expense', 38), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Cost of inventory sold', 31), (' change in inventory', 29), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' Cost of product sold', 23), (' cost of goods sold ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 39), (' change in inventory', 38), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 26), ('expense', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -408854724.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-408854724.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('Cost of sales', 36), ('purchase of stock-in-trade', 31), (' Personnel costs', 30), (' change in inventory', 29), (' Cost of product sold', 27), (' Cost of inventory sold', 25), (' Cost of goods and services sold', 21), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('total expenses', 53), ('total expenditure', 43), ('expenditure', 39), ('expense', 38), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Cost of inventory sold', 31), (' change in inventory', 29), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' Cost of product sold', 23), (' cost of goods sold ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 39), (' change in inventory', 38), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 26), ('expense', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -482165742.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-482165742.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Marketing expenses ', 100), (' Management expenses ', 72), (' Lease expenses ', 67), (' Selling Expenses ', 67), (' other expenses ', 64), (' Other expenses ', 64), (' Other expenses ', 64), (' property espense ', 64), ('expenses ', 63), (' Sales and marketing ', 57), (' Occupancy expenses ', 56), (' Selling & distribution expenses ', 47), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Administrative and other expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Administration ', 27), (' Logistics and distribution ', 24), (' Royalties ', 20), (' levies', 12), (' Occupancy ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' employee benefits expense ', 58), (' employee benefit espense ', 58), (' Depreciation expenses ', 50), (' Administrative and other expenses ', 50), (' Administrative expenses ', 48), (' Administration expenses ', 48), (' other expenses ', 47), (' Other expenses ', 47), (' Selling & distribution expenses ', 47), (' Management expenses ', 47), (' Other expenses ', 47), (' Marketing expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Lease expenses ', 43), (' Selling Expenses ', 43), (' Occupancy expenses ', 42), (' Amortisation expenses ', 40), (' property espense ', 39), ('expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' depreciation ', 24), (' Administration ', 23), (' levies', 13), (' Royalties ', 12), (' Occupancy ', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Selling & distribution expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Depreciation expenses ', 39), (' Amortisation expenses ', 39), (' Depreciation and amortisation expenses ', 38), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 37), (' Distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling Expenses ', 33), (' Management expenses ', 33), (' Marketing expenses ', 32), (' Sales and marketing ', 31), (' Occupancy expenses ', 29), (' Logistics and distribution ', 25), ('expenses ', 24), (' Administration ', 23), (' depreciation ', 16), (' Royalties ', 16), (' Occupancy ', 12), (' levies', 9)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 100, 'value': -26864228.0, 'line_item_label': ['Occupancy expenses', 'Marketing expenses', 'Administrative expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-1435468.0, -6479612.0, -18949148.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Marketing expenses ', 100), (' Management expenses ', 72), (' Lease expenses ', 67), (' Selling Expenses ', 67), (' other expenses ', 64), (' Other expenses ', 64), (' Other expenses ', 64), (' property espense ', 64), ('expenses ', 63), (' Sales and marketing ', 57), (' Occupancy expenses ', 56), (' Selling & distribution expenses ', 47), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Administrative and other expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Administration ', 27), (' Logistics and distribution ', 24), (' Royalties ', 20), (' levies', 12), (' Occupancy ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' employee benefits expense ', 58), (' employee benefit espense ', 58), (' Depreciation expenses ', 50), (' Administrative and other expenses ', 50), (' Administrative expenses ', 48), (' Administration expenses ', 48), (' other expenses ', 47), (' Other expenses ', 47), (' Selling & distribution expenses ', 47), (' Management expenses ', 47), (' Other expenses ', 47), (' Marketing expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Lease expenses ', 43), (' Selling Expenses ', 43), (' Occupancy expenses ', 42), (' Amortisation expenses ', 40), (' property espense ', 39), ('expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' depreciation ', 24), (' Administration ', 23), (' levies', 13), (' Royalties ', 12), (' Occupancy ', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Selling & distribution expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Depreciation expenses ', 39), (' Amortisation expenses ', 39), (' Depreciation and amortisation expenses ', 38), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 37), (' Distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling Expenses ', 33), (' Management expenses ', 33), (' Marketing expenses ', 32), (' Sales and marketing ', 31), (' Occupancy expenses ', 29), (' Logistics and distribution ', 25), ('expenses ', 24), (' Administration ', 23), (' depreciation ', 16), (' Royalties ', 16), (' Occupancy ', 12), (' levies', 9)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 100, 'value': -29921885.0, 'line_item_label': ['Occupancy expenses', 'Marketing expenses', 'Administrative expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-1381012.0, -10129088.0, -18411785.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Rental expenses ', 77), (' Occupancy expenses', 56), (' Administration expenses ', 41), ('Rent ', 35), (' Occupancy ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Rental expenses ', 51), (' Administration expenses ', 48), (' Occupancy expenses', 42), ('Rent ', 20), (' Occupancy ', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 37), (' Occupancy expenses', 29), ('Rent ', 17), (' Occupancy ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': -20384616.0, 'line_item_label': ['Occupancy expenses', 'Administrative expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-1435468.0, -18949148.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Rental expenses ', 77), (' Occupancy expenses', 56), (' Administration expenses ', 41), ('Rent ', 35), (' Occupancy ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Rental expenses ', 51), (' Administration expenses ', 48), (' Occupancy expenses', 42), ('Rent ', 20), (' Occupancy ', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 37), (' Occupancy expenses', 29), ('Rent ', 17), (' Occupancy ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': -19792797.0, 'line_item_label': ['Occupancy expenses', 'Administrative expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-1381012.0, -18411785.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating', 35), ('Other revenue', 32), (' Other income', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Other income', 38), ('other operating', 28), ('Other revenue', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating', 35), ('Other revenue', 32), (' Other income', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Other income', 38), ('other operating', 28), ('Other revenue', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Interest revenue', 43), (' Net finance costs', 36), ('other income', 25), ('finance income', 24), ('Finance income and costs', 24), (' Finance income and finance costs', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('finance income', 47), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 38), (' Interest revenue', 34), (' Net finance costs', 34)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 28), ('finance income', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 9], 'score': 100, 'value': -1210418.0, 'line_item_label': ['Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': [nan, nan, '6'], 'line_item_value': [3944.0, -609153.0, -605209.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Interest revenue', 43), (' Net finance costs', 36), ('other income', 25), ('finance income', 24), ('Finance income and costs', 24), (' Finance income and finance costs', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('finance income', 47), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 38), (' Interest revenue', 34), (' Net finance costs', 34)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 28), ('finance income', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 9], 'score': 100, 'value': -2333058.0, 'line_item_label': ['Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': [nan, nan, '6'], 'line_item_value': [48.0, -1166577.0, -1166529.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' interest expense', 71), (' finance expenses ', 62), (' net finance costs ', 36), ('finance cost ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses ', 51), (' interest expense', 49), (' net finance costs ', 34), ('finance cost ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -1214362.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-609153.0, -605209.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' interest expense', 71), (' finance expenses ', 62), (' net finance costs ', 36), ('finance cost ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses ', 51), (' interest expense', 49), (' net finance costs ', 34), ('finance cost ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -2333106.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-1166577.0, -1166529.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Impairement (expenses)/reversal ', 67), (' expenses ', 63), (' finance expenses', 62), (' interest revenue ', 43), (' net finance costs ', 36), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net of tax ', 30), (' net of tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' other income and revenue ', 29), (' other opertaing income ', 26), ('finance cost ', 25), (' other income ', 25), (' Other income ', 25), (' Impairment loss ', 25), (' Profit from discontinued operation ', 25), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses', 51), (' finance income and costs ', 43), (' Impairement (expenses)/reversal ', 43), (' Finance income and costs ', 43), (' net of tax ', 42), (' net of tax ', 42), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), (' other income ', 38), (' expenses ', 38), (' other income and revenue ', 38), (' Other income ', 38), (' other opertaing income ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Profit from discontinued operation ', 30), (' other gains/losses ', 29), ('finance cost ', 27), (' Impairment loss ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' other opertaing income ', 46), (' share of profit of equity accounted investees ', 44), (' net finance costs ', 41), (' other income and revenue ', 40), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' Other income ', 37), (' other gains/losses ', 34), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), ('finance cost ', 30), (' interest revenue ', 28), (' expenses ', 24), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -1214362.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-609153.0, -605209.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Impairement (expenses)/reversal ', 67), (' expenses ', 63), (' finance expenses', 62), (' interest revenue ', 43), (' net finance costs ', 36), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net of tax ', 30), (' net of tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' other income and revenue ', 29), (' other opertaing income ', 26), ('finance cost ', 25), (' other income ', 25), (' Other income ', 25), (' Impairment loss ', 25), (' Profit from discontinued operation ', 25), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses', 51), (' finance income and costs ', 43), (' Impairement (expenses)/reversal ', 43), (' Finance income and costs ', 43), (' net of tax ', 42), (' net of tax ', 42), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), (' other income ', 38), (' expenses ', 38), (' other income and revenue ', 38), (' Other income ', 38), (' other opertaing income ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Profit from discontinued operation ', 30), (' other gains/losses ', 29), ('finance cost ', 27), (' Impairment loss ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' other opertaing income ', 46), (' share of profit of equity accounted investees ', 44), (' net finance costs ', 41), (' other income and revenue ', 40), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' Other income ', 37), (' other gains/losses ', 34), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), ('finance cost ', 30), (' interest revenue ', 28), (' expenses ', 24), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -2333106.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-1166577.0, -1166529.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' income tax expense', 62), (' tax (expense)/benefit', 52), (' income tax benefit/(expense)', 49), ('earlier year', 40), ('deferred tax', 36), ('prior year ', 35), ('current tax', 33), (' income tax benefit', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), (' income tax', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' income tax benefit/(expense)', 96), (' tax (expense)/benefit', 82), (' income tax benefit', 79), (' income tax expense', 76), ('minimum alternate tax credit entitlement', 59), (' income tax', 51), ('amount transferred to retained earnings', 42), ('deferred tax', 40), ('current tax', 38), ('provision for taxation previous year', 36), ('prior year ', 28), ('earlier year', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('provision for taxation previous year', 47), (' tax (expense)/benefit', 46), (' income tax benefit/(expense)', 45), (' income tax expense', 44), (' income tax benefit', 40), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), (' income tax', 31), ('deferred tax', 23)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 96, 'value': 192476.0, 'line_item_label': ['Income tax (expensel/benefit'], 'note_numbers': ['7'], 'line_item_value': [192476.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' income tax expense', 62), (' tax (expense)/benefit', 52), (' income tax benefit/(expense)', 49), ('earlier year', 40), ('deferred tax', 36), ('prior year ', 35), ('current tax', 33), (' income tax benefit', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), (' income tax', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' income tax benefit/(expense)', 96), (' tax (expense)/benefit', 82), (' income tax benefit', 79), (' income tax expense', 76), ('minimum alternate tax credit entitlement', 59), (' income tax', 51), ('amount transferred to retained earnings', 42), ('deferred tax', 40), ('current tax', 38), ('provision for taxation previous year', 36), ('prior year ', 28), ('earlier year', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('provision for taxation previous year', 47), (' tax (expense)/benefit', 46), (' income tax benefit/(expense)', 45), (' income tax expense', 44), (' income tax benefit', 40), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), (' income tax', 31), ('deferred tax', 23)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 96, 'value': -5563601.0, 'line_item_label': ['Income tax (expensel/benefit'], 'note_numbers': ['7'], 'line_item_value': [-5563601.0]}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:00:20+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional ', 42), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 32)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 33), ('exceptional ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional ', 42), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 32)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 33), ('exceptional ', 20)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:00:20+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:00:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:00:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:00:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:00:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:01:17+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:01:17+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:01:17+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:01:17+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:01:17+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:01:17+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:01:17+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:01:17+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:01:17+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:01:19+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:19+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:01:19+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:01:19+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:19+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:01:19+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 20558234.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 20558234.0, 0.0, 0.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 29230893.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 28301337.0, 409556.0, 520000.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 78927392.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [55677648.0, 20558234.0, 1961402.0, 0.0, 0.0, 730108.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 98754244.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [66271138.0, 28301337.0, 2213375.0, 409556.0, 520000.0, 1038838.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 5, 6, 7, 8], 'score': [100, 80, 82, 100, 100, 80, 82, 100], 'value': [8166254.0, 785740.0, 44920374.0, 12398770.0, 6067584.0, 471416.0, 37688849.0, 11449799.0], 'label': ['Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan', 'Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5, 11, 16], 'score': [100, 100, 100, 100], 'value': [7248723.0, 0.0, 6327762.0, 0.0], 'label': ['Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers', 'Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 6, 7, 8], 'score': [90, 80, 100, 90, 80, 100], 'value': [1386692.0, 576678.0, 250005.0, 1189057.0, 772345.0, 0.0], 'label': ['Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits', 'Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 29913675.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [29913675.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 41223680.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [41223680.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:01:20+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:01:20+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 92742998.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [92742998.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 121289307.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [121289307.0]}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:01:20+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:01:20+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:01:20+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:02:10+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:02:10+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:02:10+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:02:10+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:02:10+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:02:10+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:02:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:02:10+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:02:10+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:02:12+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 20558234.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 20558234.0, 0.0, 0.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 29230893.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 28301337.0, 409556.0, 520000.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:12+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:02:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 78927392.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [55677648.0, 20558234.0, 1961402.0, 0.0, 0.0, 730108.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 98754244.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [66271138.0, 28301337.0, 2213375.0, 409556.0, 520000.0, 1038838.0]}
2023-08-11 15:02:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:12+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:12+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 5, 6, 7, 8], 'score': [100, 80, 82, 100, 100, 80, 82, 100], 'value': [8166254.0, 785740.0, 44920374.0, 12398770.0, 6067584.0, 471416.0, 37688849.0, 11449799.0], 'label': ['Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan', 'Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5, 11, 16], 'score': [100, 100, 100, 100], 'value': [7248723.0, 0.0, 6327762.0, 0.0], 'label': ['Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers', 'Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 6, 7, 8], 'score': [90, 80, 100, 90, 80, 100], 'value': [1386692.0, 576678.0, 250005.0, 1189057.0, 772345.0, 0.0], 'label': ['Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits', 'Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 29913675.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [29913675.0]}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 41223680.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [41223680.0]}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:02:13+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:02:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 92742998.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [92742998.0]}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 121289307.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [121289307.0]}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:02:13+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:02:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:02:13+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:07:30+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:07:30+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:07:30+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:07:30+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:07:30+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:07:30+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:07:30+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:07:30+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:07:30+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:07:32+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:32+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:07:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:07:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:32+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:07:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 20558234.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 20558234.0, 0.0, 0.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 29230893.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 28301337.0, 409556.0, 520000.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 78927392.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [55677648.0, 20558234.0, 1961402.0, 0.0, 0.0, 730108.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 98754244.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [66271138.0, 28301337.0, 2213375.0, 409556.0, 520000.0, 1038838.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 5, 6, 7, 8], 'score': [100, 80, 82, 100, 100, 80, 82, 100], 'value': [8166254.0, 785740.0, 44920374.0, 12398770.0, 6067584.0, 471416.0, 37688849.0, 11449799.0], 'label': ['Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan', 'Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5, 11, 16], 'score': [100, 100, 100, 100], 'value': [7248723.0, 0.0, 6327762.0, 0.0], 'label': ['Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers', 'Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 6, 7, 8], 'score': [90, 80, 100, 90, 80, 100], 'value': [1386692.0, 576678.0, 250005.0, 1189057.0, 772345.0, 0.0], 'label': ['Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits', 'Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 29913675.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [29913675.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 41223680.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [41223680.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 92742998.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [92742998.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 121289307.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [121289307.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Sales revenue ', 50), (' net sales ', 38), (' from trading business ', 36), ('revenue from operations ', 34), (' sale of products ', 32), (' Revenue ', 32), (' revenue from contracts with customers ', 31), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' transmission and distribution business ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' from trading business ', 39), (' net sales ', 35), (' revenue from contracts with customers ', 31), (' revenue from continuing activities', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' Sales revenue ', 27), (' Sale of coal ', 23), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' revenue from continuing activities', 35), ('revenue from operations ', 34), (' from trading business ', 34), (' sale of products ', 33), (' Sales revenue ', 33), (' net sales ', 27), (' Sale of coal ', 27), (' transmission and distribution business ', 25), (' Revenue ', 16)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 435163948.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [435163948.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Sales revenue ', 50), (' net sales ', 38), (' from trading business ', 36), ('revenue from operations ', 34), (' sale of products ', 32), (' Revenue ', 32), (' revenue from contracts with customers ', 31), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' transmission and distribution business ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' from trading business ', 39), (' net sales ', 35), (' revenue from contracts with customers ', 31), (' revenue from continuing activities', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' Sales revenue ', 27), (' Sale of coal ', 23), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' revenue from continuing activities', 35), ('revenue from operations ', 34), (' from trading business ', 34), (' sale of products ', 33), (' Sales revenue ', 33), (' net sales ', 27), (' Sale of coal ', 27), (' transmission and distribution business ', 25), (' Revenue ', 16)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 530127762.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [530127762.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('Cost of sales', 36), ('purchase of stock-in-trade', 31), (' Personnel costs', 30), (' change in inventory', 29), (' Cost of product sold', 27), (' Cost of inventory sold', 25), (' Cost of goods and services sold', 21), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('total expenses', 53), ('total expenditure', 43), ('expenditure', 39), ('expense', 38), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Cost of inventory sold', 31), (' change in inventory', 29), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' Cost of product sold', 23), (' cost of goods sold ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 39), (' change in inventory', 38), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 26), ('expense', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -408854724.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-408854724.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('Cost of sales', 36), ('purchase of stock-in-trade', 31), (' Personnel costs', 30), (' change in inventory', 29), (' Cost of product sold', 27), (' Cost of inventory sold', 25), (' Cost of goods and services sold', 21), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('total expenses', 53), ('total expenditure', 43), ('expenditure', 39), ('expense', 38), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Cost of inventory sold', 31), (' change in inventory', 29), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' Cost of product sold', 23), (' cost of goods sold ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 39), (' change in inventory', 38), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 26), ('expense', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -482165742.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-482165742.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Marketing expenses ', 100), (' Management expenses ', 72), (' Lease expenses ', 67), (' Selling Expenses ', 67), (' other expenses ', 64), (' Other expenses ', 64), (' Other expenses ', 64), (' property espense ', 64), ('expenses ', 63), (' Sales and marketing ', 57), (' Occupancy expenses ', 56), (' Selling & distribution expenses ', 47), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Administrative and other expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Administration ', 27), (' Logistics and distribution ', 24), (' Royalties ', 20), (' levies', 12), (' Occupancy ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' employee benefits expense ', 58), (' employee benefit espense ', 58), (' Depreciation expenses ', 50), (' Administrative and other expenses ', 50), (' Administrative expenses ', 48), (' Administration expenses ', 48), (' other expenses ', 47), (' Other expenses ', 47), (' Selling & distribution expenses ', 47), (' Management expenses ', 47), (' Other expenses ', 47), (' Marketing expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Lease expenses ', 43), (' Selling Expenses ', 43), (' Occupancy expenses ', 42), (' Amortisation expenses ', 40), (' property espense ', 39), ('expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' depreciation ', 24), (' Administration ', 23), (' levies', 13), (' Royalties ', 12), (' Occupancy ', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Selling & distribution expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Depreciation expenses ', 39), (' Amortisation expenses ', 39), (' Depreciation and amortisation expenses ', 38), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 37), (' Distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling Expenses ', 33), (' Management expenses ', 33), (' Marketing expenses ', 32), (' Sales and marketing ', 31), (' Occupancy expenses ', 29), (' Logistics and distribution ', 25), ('expenses ', 24), (' Administration ', 23), (' depreciation ', 16), (' Royalties ', 16), (' Occupancy ', 12), (' levies', 9)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 100, 'value': -26864228.0, 'line_item_label': ['Occupancy expenses', 'Marketing expenses', 'Administrative expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-1435468.0, -6479612.0, -18949148.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Marketing expenses ', 100), (' Management expenses ', 72), (' Lease expenses ', 67), (' Selling Expenses ', 67), (' other expenses ', 64), (' Other expenses ', 64), (' Other expenses ', 64), (' property espense ', 64), ('expenses ', 63), (' Sales and marketing ', 57), (' Occupancy expenses ', 56), (' Selling & distribution expenses ', 47), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Administrative and other expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Administration ', 27), (' Logistics and distribution ', 24), (' Royalties ', 20), (' levies', 12), (' Occupancy ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' employee benefits expense ', 58), (' employee benefit espense ', 58), (' Depreciation expenses ', 50), (' Administrative and other expenses ', 50), (' Administrative expenses ', 48), (' Administration expenses ', 48), (' other expenses ', 47), (' Other expenses ', 47), (' Selling & distribution expenses ', 47), (' Management expenses ', 47), (' Other expenses ', 47), (' Marketing expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Lease expenses ', 43), (' Selling Expenses ', 43), (' Occupancy expenses ', 42), (' Amortisation expenses ', 40), (' property espense ', 39), ('expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' depreciation ', 24), (' Administration ', 23), (' levies', 13), (' Royalties ', 12), (' Occupancy ', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Selling & distribution expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Depreciation expenses ', 39), (' Amortisation expenses ', 39), (' Depreciation and amortisation expenses ', 38), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 37), (' Distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling Expenses ', 33), (' Management expenses ', 33), (' Marketing expenses ', 32), (' Sales and marketing ', 31), (' Occupancy expenses ', 29), (' Logistics and distribution ', 25), ('expenses ', 24), (' Administration ', 23), (' depreciation ', 16), (' Royalties ', 16), (' Occupancy ', 12), (' levies', 9)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 100, 'value': -29921885.0, 'line_item_label': ['Occupancy expenses', 'Marketing expenses', 'Administrative expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-1381012.0, -10129088.0, -18411785.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Rental expenses ', 77), (' Occupancy expenses', 56), (' Administration expenses ', 41), ('Rent ', 35), (' Occupancy ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Rental expenses ', 51), (' Administration expenses ', 48), (' Occupancy expenses', 42), ('Rent ', 20), (' Occupancy ', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 37), (' Occupancy expenses', 29), ('Rent ', 17), (' Occupancy ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': -20384616.0, 'line_item_label': ['Occupancy expenses', 'Administrative expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-1435468.0, -18949148.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Rental expenses ', 77), (' Occupancy expenses', 56), (' Administration expenses ', 41), ('Rent ', 35), (' Occupancy ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Rental expenses ', 51), (' Administration expenses ', 48), (' Occupancy expenses', 42), ('Rent ', 20), (' Occupancy ', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 37), (' Occupancy expenses', 29), ('Rent ', 17), (' Occupancy ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': -19792797.0, 'line_item_label': ['Occupancy expenses', 'Administrative expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-1381012.0, -18411785.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating', 35), ('Other revenue', 32), (' Other income', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Other income', 38), ('other operating', 28), ('Other revenue', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating', 35), ('Other revenue', 32), (' Other income', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Other income', 38), ('other operating', 28), ('Other revenue', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Interest revenue', 43), (' Net finance costs', 36), ('other income', 25), ('finance income', 24), ('Finance income and costs', 24), (' Finance income and finance costs', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('finance income', 47), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 38), (' Interest revenue', 34), (' Net finance costs', 34)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 28), ('finance income', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 9], 'score': 100, 'value': -1210418.0, 'line_item_label': ['Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': [nan, nan, '6'], 'line_item_value': [3944.0, -609153.0, -605209.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Interest revenue', 43), (' Net finance costs', 36), ('other income', 25), ('finance income', 24), ('Finance income and costs', 24), (' Finance income and finance costs', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('finance income', 47), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 38), (' Interest revenue', 34), (' Net finance costs', 34)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 28), ('finance income', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 9], 'score': 100, 'value': -2333058.0, 'line_item_label': ['Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': [nan, nan, '6'], 'line_item_value': [48.0, -1166577.0, -1166529.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' interest expense', 71), (' finance expenses ', 62), (' net finance costs ', 36), ('finance cost ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses ', 51), (' interest expense', 49), (' net finance costs ', 34), ('finance cost ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -1214362.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-609153.0, -605209.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' interest expense', 71), (' finance expenses ', 62), (' net finance costs ', 36), ('finance cost ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses ', 51), (' interest expense', 49), (' net finance costs ', 34), ('finance cost ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -2333106.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-1166577.0, -1166529.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Impairement (expenses)/reversal ', 67), (' expenses ', 63), (' finance expenses', 62), (' interest revenue ', 43), (' net finance costs ', 36), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net of tax ', 30), (' net of tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' other income and revenue ', 29), (' other opertaing income ', 26), ('finance cost ', 25), (' other income ', 25), (' Other income ', 25), (' Impairment loss ', 25), (' Profit from discontinued operation ', 25), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses', 51), (' finance income and costs ', 43), (' Impairement (expenses)/reversal ', 43), (' Finance income and costs ', 43), (' net of tax ', 42), (' net of tax ', 42), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), (' other income ', 38), (' expenses ', 38), (' other income and revenue ', 38), (' Other income ', 38), (' other opertaing income ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Profit from discontinued operation ', 30), (' other gains/losses ', 29), ('finance cost ', 27), (' Impairment loss ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' other opertaing income ', 46), (' share of profit of equity accounted investees ', 44), (' net finance costs ', 41), (' other income and revenue ', 40), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' Other income ', 37), (' other gains/losses ', 34), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), ('finance cost ', 30), (' interest revenue ', 28), (' expenses ', 24), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -1214362.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-609153.0, -605209.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Impairement (expenses)/reversal ', 67), (' expenses ', 63), (' finance expenses', 62), (' interest revenue ', 43), (' net finance costs ', 36), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net of tax ', 30), (' net of tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' other income and revenue ', 29), (' other opertaing income ', 26), ('finance cost ', 25), (' other income ', 25), (' Other income ', 25), (' Impairment loss ', 25), (' Profit from discontinued operation ', 25), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses', 51), (' finance income and costs ', 43), (' Impairement (expenses)/reversal ', 43), (' Finance income and costs ', 43), (' net of tax ', 42), (' net of tax ', 42), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), (' other income ', 38), (' expenses ', 38), (' other income and revenue ', 38), (' Other income ', 38), (' other opertaing income ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Profit from discontinued operation ', 30), (' other gains/losses ', 29), ('finance cost ', 27), (' Impairment loss ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' other opertaing income ', 46), (' share of profit of equity accounted investees ', 44), (' net finance costs ', 41), (' other income and revenue ', 40), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' Other income ', 37), (' other gains/losses ', 34), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), ('finance cost ', 30), (' interest revenue ', 28), (' expenses ', 24), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -2333106.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-1166577.0, -1166529.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' income tax expense', 62), (' tax (expense)/benefit', 52), (' income tax benefit/(expense)', 49), ('earlier year', 40), ('deferred tax', 36), ('prior year ', 35), ('current tax', 33), (' income tax benefit', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), (' income tax', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' income tax benefit/(expense)', 96), (' tax (expense)/benefit', 82), (' income tax benefit', 79), (' income tax expense', 76), ('minimum alternate tax credit entitlement', 59), (' income tax', 51), ('amount transferred to retained earnings', 42), ('deferred tax', 40), ('current tax', 38), ('provision for taxation previous year', 36), ('prior year ', 28), ('earlier year', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('provision for taxation previous year', 47), (' tax (expense)/benefit', 46), (' income tax benefit/(expense)', 45), (' income tax expense', 44), (' income tax benefit', 40), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), (' income tax', 31), ('deferred tax', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 96, 'value': 192476.0, 'line_item_label': ['Income tax (expensel/benefit'], 'note_numbers': ['7'], 'line_item_value': [192476.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' income tax expense', 62), (' tax (expense)/benefit', 52), (' income tax benefit/(expense)', 49), ('earlier year', 40), ('deferred tax', 36), ('prior year ', 35), ('current tax', 33), (' income tax benefit', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), (' income tax', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' income tax benefit/(expense)', 96), (' tax (expense)/benefit', 82), (' income tax benefit', 79), (' income tax expense', 76), ('minimum alternate tax credit entitlement', 59), (' income tax', 51), ('amount transferred to retained earnings', 42), ('deferred tax', 40), ('current tax', 38), ('provision for taxation previous year', 36), ('prior year ', 28), ('earlier year', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('provision for taxation previous year', 47), (' tax (expense)/benefit', 46), (' income tax benefit/(expense)', 45), (' income tax expense', 44), (' income tax benefit', 40), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), (' income tax', 31), ('deferred tax', 23)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 96, 'value': -5563601.0, 'line_item_label': ['Income tax (expensel/benefit'], 'note_numbers': ['7'], 'line_item_value': [-5563601.0]}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:07:33+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional ', 42), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 33), ('exceptional ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional ', 42), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 32)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 33), ('exceptional ', 20)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:07:33+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:07:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:07:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:07:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:07:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:15:00+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:15:00+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:15:00+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:15:00+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:15:00+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:15:00+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:15:00+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:15:00+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:15:00+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:15:02+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:15:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:15:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:15:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:15:02+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:15:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:16:25+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:16:25+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:16:25+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:16:25+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:16:25+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:16:25+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:16:25+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:16:25+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:16:25+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:16:26+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:16:27+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:16:27+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:16:27+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:16:27+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:16:27+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-11 15:17:48+0530 - sLogger - DEBUG - process_main_pages started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-11 15:17:48+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-11 15:17:48+0530 - sLogger - ERROR - error occured: local variable 'cpl_header' referenced before assignment
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-11 15:17:48+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Current tax assets | [('current assets', 87), ('noncurrent assets', 67), ('current liabilities', 58), ('currentassets', 55), ('currentliabilities', 54), ('noncurrentassets', 50), ('noncurrentliabilities', 48), ('assets', 45), ('noncurrent liabilities', 39), ('equity and liabilities', 35), ('equity liabilities', 33), ('equityandliabilities', 29), ('equity', 26), ('equityliabilities', 24), ('liabilities', 9)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current assets | score 95
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentassets | score 84
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD current liabilities | score 59
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD currentliabilities | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent assets | score 80
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrent liabilities | score 55
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current assets | score 84
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD non current liabilities | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentassets | score 76
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD noncurrentliabilities | score 51
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity and liabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax assets | MATCH WORD equityandliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('noncurrentliabilities', 37), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('noncurrentassets', 33), ('equityandliabilities', 31), ('liabilities', 29), ('currentliabilities', 25), ('currentassets', 22), ('equity liabilities', 21), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentassets | score 28
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD currentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentassets | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrentliabilities | score 37
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equityandliabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-11 15:17:48+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-11 15:17:48+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-11 15:17:48+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-11 15:17:48+0530 - sLogger - DEBUG - set_section_details started
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash (used in)/ from operations | operating cash flow before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Borrowing costs paid | operating profit before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid on lease liabilities | adjustments for increase decrease in operating liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refund received/(paid) | operating profit before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of intangibles | changes in working capital
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from new borrowings | operating profit before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-11 15:17:48+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-11 15:17:49+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:49+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6516369.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [6516369.0]}
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:49+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('cash asset', 59), ('cash and short term deposits', 41), ('Cash and short term deposits', 41), ('bank balances other than above', 36), ('cash and cash equivalents', 32), ('cash and bank balances', 32), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 29)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits', 33), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash asset', 64), ('cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('other bank balances', 28)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13194828.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['8'], 'line_item_value': [13194828.0]}
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:49+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none cash on hand , res_fuzz_match = [('cash on hand ', 100), (' cash at bank ', 78), (' cash on hand and at bank ', 64), (' cash asset', 63), (' cash at bank and on hand ', 57), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 43), (' bank balances ', 36), (' short term deposits ', 29)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset', 30), (' short term deposits ', 19)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [1588.0, 13193240.0, 13194828.0, 1588.0, 6514781.0, 6516369.0], 'label': ['None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Cash on hand', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:49+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 82492987.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [82492987.0]}
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:49+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 111489925.0, 'line_item_label': ['Inventories'], 'note_numbers': ['10'], 'line_item_value': [111489925.0]}
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:49+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none at cost , res_fuzz_match = [(' finished goods at cost ', 67), (' stores and other consumables at cost ', 67), (' parts and accessories (at cost) ', 67), (' provision for inventory obsolescence ', 44), (' cranes - in transit ', 44), (' cranes ', 40), (' finished goods ', 33), (' work in progress ', 33), (' goods in transit ', 33), (' inventories ', 33), (' spare parts ', 33), (' stock in transit', 33), ('raw materials ', 22), (' raw materials ', 22)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none provision for obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 58), (' work in progress ', 46), (' finished goods ', 45), (' finished goods at cost ', 44), (' inventories ', 44), (' stores and other consumables at cost ', 42), (' cranes - in transit ', 38), (' parts and accessories (at cost) ', 35), (' goods in transit ', 33), (' stock in transit', 31), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' cranes ', 20)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none demonstrator units at net realisable value , res_fuzz_match = [(' inventories ', 56), (' goods in transit ', 50), (' cranes - in transit ', 46), (' stock in transit', 46), (' stores and other consumables at cost ', 41), (' provision for inventory obsolescence ', 41), ('raw materials ', 40), (' raw materials ', 40), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' parts and accessories (at cost) ', 35), (' work in progress ', 31), (' finished goods ', 29)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none stock in transit at cost , res_fuzz_match = [(' stock in transit', 100), (' goods in transit ', 75), (' cranes - in transit ', 69), (' cranes ', 60), (' stores and other consumables at cost ', 52), (' parts and accessories (at cost) ', 48), (' finished goods at cost ', 44), (' inventories ', 44), (' provision for inventory obsolescence ', 43), ('raw materials ', 40), (' raw materials ', 40), (' work in progress ', 38), (' finished goods ', 36), (' spare parts ', 30)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit', 0)]
2023-08-11 15:17:49+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': [100, 100], 'value': [42775001.0, 29565592.0], 'label': ['None Stock in transit at cost', 'None Stock in transit at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-11 15:17:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-11 15:17:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 96762611.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [92742998.0, 3491032.0, 499814.0, 28767.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' other current assets ', 83), (' other current financial assets ', 68), ('other assets ', 50), (' other financial assets ', 50), (' trade and other receivables', 41), (' prepayments ', 26)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables', 32), (' prepayments ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' other financial assets ', 65), ('other assets ', 61), (' other current assets ', 52), (' other current financial assets ', 51), (' trade and other receivables', 35), (' prepayments ', 22)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables', 43), (' prepayments ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6], 'score': 100, 'value': 121878392.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Prepayments', 'Other assets'], 'note_numbers': ['9', nan, nan, '11'], 'line_item_value': [121289307.0, 0.0, 559696.0, 29389.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' other prepayments ', 50), (' other receivables and prepayments ', 48), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepaid expenditure ', 33), (' prepayments ', 33), (' in advance ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other receivables and prepayments ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' in advance ', 50), (' charges paid in advance', 41), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other prepayments ', 42), (' prepayments ', 33), ('prepaid expense ', 31), (' prepaid expenditure ', 31), (' other receivables and prepayments ', 31), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 23), (' in advance ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 96516496.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [92742998.0, 3491032.0, 28767.0, 253699.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [('other current assets ', 83), (' financial assets ', 53), (' other assets ', 50), (' other financial assets ', 50), (' income tax receivable from related parties ', 44), (' biological assets ', 41), (' trade and other receivables', 41), (' deferred operating expenditure ', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' trade and other receivables', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' financial assets ', 32), (' biological assets ', 28)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' trade and other receivables', 32), (' deferred operating expenditure ', 28), (' income tax receivable from related parties ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets ', 80), (' biological assets ', 67), (' other financial assets ', 65), (' other assets ', 61), ('other current assets ', 52), (' trade and other receivables', 35), (' income tax receivable from related parties ', 27), (' deferred operating expenditure ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 6, 9], 'score': 80, 'value': 121398016.0, 'line_item_label': ['Trade and other receivables', 'Current tax assets', 'Other assets', 'Intangible assets'], 'note_numbers': ['9', nan, '11', '14'], 'line_item_value': [121289307.0, 0.0, 29389.0, 79320.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' current investments', 71), (' income tax receivable from related parties', 67), (' other receivables - related party', 67), (' rental bond', 64), (' amount receivable from controlling entity', 63), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' lng', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 70), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' rental bond', 55), (' other deposits receivable - related party', 54), (' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' long service leave receivable', 48), ('foreign exchange derivatives at fair value', 46), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 42), (' share of jv prepayments', 42), (' derivative contracts - fair value', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' related party disclosures', 33), (' lng', 33), (' bank guarantee', 31)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' lng', 67), (' rental bond', 64), (' current investments', 64), (' accrued rebates', 45), (' condensate', 43), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' other debtors and prepayments', 41), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' other deposits receivable - related party', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' deposits', 29), (' interest receivable', 27), (' related party disclosures', 24), (' long service leave receivable', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': [100, 100], 'value': [35876.0, 2347.0], 'label': ['Current Other receivables nan', 'Current Other receivables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [563747.0, 35876.0, 121289307.0, 1804449.0, 2347.0, 92742998.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' other', 100), (' current investments', 69), (' rental bond', 57), (' accrued interest', 48), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' related party receivable', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' interest receivable', 38), (' bank guarantee', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' long service leave receivable', 31)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [1513.0, 1513.0], 'label': ['Current Other', 'Current Other'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1513.0, 29389.0, 1513.0, 28767.0], 'label': ['', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' foreign exchange forward contracts', 67), ('other assets', 55), (' related party disclosures', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' related party receivable', 42), (' other', 40), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 33), (' electricity derivatives at fair value', 33), (' accrued interest', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' current investments', 33), (' bank guarantee', 26), (' long service leave receivable', 25), (' other debtors and prepayments', 25), (' lng', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), ('other assets', 45), (' other deposits receivable - related party', 44), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' share of jv prepayments', 42), (' other', 40), (' income tax receivable from related parties', 40), (' related party receivable', 39), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 35), (' amount receivable from controlling entity', 35), (' lng', 33), (' bank guarantee', 31), (' other debtors and prepayments', 31), ('foreign exchange derivatives at fair value', 30), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), (' electricity derivatives at fair value', 27), (' interest receivable', 27), (' rental bond', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [('other assets', 55), (' related party disclosures', 51), (' forward exchange contracts', 51), (' interest receivable', 47), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' other receivables - related party', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' other', 40), (' income tax receivable from related parties', 38), (' rental bond', 36), (' lng', 33), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other deposits receivable - related party', 46), (' foreign exchange forward contracts', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' long service leave receivable', 35), (' other debtors and prepayments', 35), (' share of jv prepayments', 33), (' lng', 33), (' interest receivable', 27), (' other', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 53), (' other receivables - related party', 48), (' income tax receivable from related parties', 47), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' condensate', 43), (' related party disclosures', 41), (' long service leave receivable', 41), (' other debtors and prepayments', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' current investments', 29), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' other deposits receivable - related party', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' accrued interest', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' amount receivable from controlling entity', 40), (' interest receivable', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' other debtors and prepayments', 40), (' long service leave receivable', 30), (' bank guarantee', 30), (' rental bond', 30), (' share of jv prepayments', 20), (' lng', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' related party disclosures', 64), (' deposits', 62), ('other assets', 45), (' electricity derivatives at fair value', 45), (' other deposits receivable - related party', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' derivative contracts - fair value', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' long service leave receivable', 27), (' other receivables - related party', 27), (' rental bond', 27), (' related party receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' share of jv prepayments', 18), (' accrued rebates', 18), (' bank guarantee', 9), (' lng', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' lng', 67), (' derivative contracts - fair value', 47), (' bank guarantee', 46), (' condensate', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 42), (' long service leave receivable', 41), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' electricity derivatives at fair value', 35), (' related party disclosures', 35), (' amount receivable from controlling entity', 35), (' related party receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' current investments', 29), (' deposits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other receivables - related party', 42), (' electricity derivatives at fair value', 41), (' other debtors and prepayments', 41), (' other', 40), (' income tax receivable from related parties', 40), (' other deposits receivable - related party', 40), (' derivative contracts - fair value', 38), ('other assets', 36), (' amount receivable from controlling entity', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' foreign exchange forward contracts', 32), (' deposits', 29), (' condensate', 29), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 50), ('other assets', 45), (' related party disclosures', 45), (' income tax receivable from related parties', 43), (' amount receivable from controlling entity', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' long service leave receivable', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 35), (' electricity derivatives at fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' forward exchange contracts', 30), (' deposits', 29), (' condensate', 29), (' rental bond', 27), (' other debtors and prepayments', 26)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' related party disclosures', 62), (' deposits', 57), (' accrued rebates', 55), (' accrued interest', 50), (' related party receivable', 44), (' current investments', 43), (' other', 40), (' bank guarantee', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' other receivables - related party', 32), (' other deposits receivable - related party', 32), (' electricity derivatives at fair value', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' other debtors and prepayments', 27), (' long service leave receivable', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' accrued rebates', 55), (' accrued interest', 50), (' bank guarantee', 46), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' long service leave receivable', 43), (' current investments', 43), (' other', 40), (' other receivables - related party', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' other deposits receivable - related party', 36), (' foreign exchange forward contracts', 36), (' other debtors and prepayments', 36), (' derivative contracts - fair value', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('foreign exchange derivatives at fair value', 32), (' amount receivable from controlling entity', 32), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' derivative contracts - fair value', 50), (' accrued rebates', 45), (' electricity derivatives at fair value', 44), (' other receivables - related party', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' foreign exchange forward contracts', 44), (' forward exchange contracts', 44), (' current investments', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' related party disclosures', 39), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' derivative contracts - fair value', 52), (' related party receivable', 50), (' income tax receivable from related parties', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' accrued rebates', 45), (' other receivables - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' other', 40), (' interest receivable', 40), (' electricity derivatives at fair value', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' long service leave receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' other debtors and prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software at cost , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software accumulated amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = software net carrying amount , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = reconciliation of carrying amount in aud , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 1 april 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation balance at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amounts at31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [128219.0, -48899.0, 79320.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0, 2328438.0, -2074739.0, 253699.0, 0.0, 2328438.0, 33305.0, -2233524.0, 128219.0, 2074739.0, 78559.0, -2104399.0, 48899.0, 253699.0, 79320.0], 'label': ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 82451057.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [136160.0, 82170817.0, 144080.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings ', 100), (' borrowings ', 57), (' shortterm borrowings ', 52), (' bank overdraft ', 48), (' cash overdraft ', 41), (' short-term debt ', 34), (' shortterm debt ', 34), ('short term debt ', 33), (' cash and cash equivalents ', 33), (' interest bearing liabilites ', 32), (' lease liabilities ', 31), ('  leases ', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 7], 'score': 100, 'value': 126919644.0, 'line_item_label': ['Lease liabilities', 'Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['13', '16', '13'], 'line_item_value': [600799.0, 111234712.0, 15084133.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount face value , res_fuzz_match = [(' secured long-term bank loans ', 45), (' cash overdraft', 43), (' not later than 1 year ', 42), (' not later than one year ', 41), ('bank borrowings ', 36), (' lease liabilities ', 36), (' bank overdraft ', 36), (' loans from related party ', 34), (' balance at the end of period ', 33), (' lease liabilities - current ', 32), (' utilised bank borrowings ', 28), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none related party loan aud 0.444% 2022 70006039 , res_fuzz_match = [(' loans from related party ', 67), (' not later than one year ', 57), (' leases ', 50), (' not later than 1 year ', 49), (' secured long-term bank loans ', 48), (' lease liabilities ', 45), (' bank overdraft ', 43), (' balance at the end of period ', 43), (' lease liabilities - current ', 42), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none unsecured bank loan aud 0.750% 2022 43733593 , res_fuzz_match = [(' secured long-term bank loans ', 62), ('bank borrowings ', 55), (' not later than one year ', 52), (' bank overdraft ', 52), (' utilised bank borrowings ', 50), (' not later than 1 year ', 47), (' loans from related party ', 38), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' balance at the end of period ', 33), (' cash overdraft', 29), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = none nan nan nan nan 113739632 , res_fuzz_match = [(' not later than one year ', 50), (' not later than 1 year ', 47), (' secured long-term bank loans ', 45), (' loans from related party ', 40), (' lease liabilities ', 36), (' lease liabilities - current ', 32), (' balance at the end of period ', 31), (' bank overdraft ', 29), ('bank borrowings ', 27), (' leases ', 25), (' utilised bank borrowings ', 22), (' cash overdraft', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = carrying amount carrying amount , res_fuzz_match = [(' secured long-term bank loans ', 46), (' loans from related party ', 43), (' cash overdraft', 43), (' not later than 1 year ', 42), (' lease liabilities - current ', 42), (' utilised bank borrowings ', 39), (' not later than one year ', 39), ('bank borrowings ', 36), (' bank overdraft ', 36), (' balance at the end of period ', 33), (' lease liabilities ', 27), (' leases ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current related party loan 20 , res_fuzz_match = [(' loans from related party ', 62), (' lease liabilities ', 55), (' secured long-term bank loans ', 54), (' not later than 1 year ', 53), (' leases ', 50), (' not later than one year ', 48), (' balance at the end of period ', 43), (' lease liabilities - current ', 37), (' bank overdraft ', 36), (' cash overdraft', 36), (' utilised bank borrowings ', 33), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current unsecured bank loan nan , res_fuzz_match = [(' secured long-term bank loans ', 67), (' not later than one year ', 57), ('bank borrowings ', 55), (' not later than 1 year ', 53), (' utilised bank borrowings ', 50), (' leases ', 50), (' bank overdraft ', 50), (' lease liabilities - current ', 37), (' lease liabilities ', 36), (' loans from related party ', 33), (' balance at the end of period ', 33), (' cash overdraft', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' secured long-term bank loans ', 53), (' leases ', 50), (' not later than one year ', 47), (' not later than 1 year ', 41), (' lease liabilities - current ', 41), (' lease liabilities ', 36), (' utilised bank borrowings ', 35), (' loans from related party ', 35), (' bank overdraft ', 30), (' balance at the end of period ', 29), (' cash overdraft', 29), ('bank borrowings ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('bank borrowings ', 0), (' utilised bank borrowings ', 0), (' leases ', 0), (' not later than 1 year ', 0), (' not later than one year ', 0), (' secured long-term bank loans ', 0), (' loans from related party ', 0), (' lease liabilities - current ', 0), (' lease liabilities ', 0), (' bank overdraft ', 0), (' balance at the end of period ', 0), (' cash overdraft', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('trade payable', 30), ('other trade payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' trade and other payables ', 100), (' trade payables ', 75), (' trade payables - other parties ', 67), (' other trade payables ', 67), (' Related party payables ', 61), ('  accounts payable - trade ', 60), ('trade creditors ', 57), (' trade payables - related parties', 54), (' amounts payable to controlling entity ', 46), (' payables to related parties ', 44)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' trade payables ', 58), ('  accounts payable - trade ', 51), (' trade and other payables ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 44), (' Related party payables ', 44), ('trade creditors ', 43), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' trade payables - related parties', 38)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' payables to related parties ', 67), (' trade payables - related parties', 67), (' Related party payables ', 63), (' trade payables - other parties ', 54), ('trade creditors ', 50), (' other trade payables ', 50), (' amounts payable to controlling entity ', 46), (' trade and other payables ', 45), ('  accounts payable - trade ', 45), (' trade payables ', 42)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('trade creditors ', 79), (' other trade payables ', 56), (' trade payables ', 50), (' trade payables - other parties ', 46), (' trade and other payables ', 45), (' trade payables - related parties', 42), ('  accounts payable - trade ', 40), (' amounts payable to controlling entity ', 39), (' payables to related parties ', 39), (' Related party payables ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('  accounts payable - trade ', 53), (' trade and other payables ', 47), (' amounts payable to controlling entity ', 47), (' trade payables ', 42), (' Related party payables ', 41), (' trade payables - related parties', 41), ('trade creditors ', 36), (' trade payables - other parties ', 35), (' other trade payables ', 35), (' payables to related parties ', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [8166254.0, 6067584.0], 'label': ['Current Trade and other payables nan', 'Current Trade and other payables nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 55677648.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [55677648.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 66271138.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [66271138.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [(' interest accrued', 64), ('accrued expenses ', 58)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 20558234.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 20558234.0, 0.0, 0.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' income tax payable ', 33), (' tax ', 33), (' provision', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 8], 'score': 100, 'value': 29230893.0, 'line_item_label': ['Liabilities', 'Provisions', 'Current tax liabilities', 'Provisions'], 'note_numbers': [nan, '17', nan, '17'], 'line_item_value': [0.0, 28301337.0, 409556.0, 520000.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35), (' provision for income tax ', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' tax receivable/payable', 41), ('income tax (refundable)/payable ', 37), (' provision for income tax ', 36)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 39), (' provision for income tax ', 36), (' tax receivable/payable', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [('income tax (refundable)/payable ', 43), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 36)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' tax receivable/payable', 47), (' provision for income tax ', 45), ('income tax (refundable)/payable ', 39)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provision for income tax ', 56), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 78927392.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [55677648.0, 20558234.0, 1961402.0, 0.0, 0.0, 730108.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 5, 6, 8, 9], 'score': 100, 'value': 98754244.0, 'line_item_label': ['Trade and other payables', 'Provisions', 'Employee benefits', 'Current tax liabilities', 'Provisions', 'Employee benefits'], 'note_numbers': ['15', '17', '18', nan, '17', '18'], 'line_item_value': [66271138.0, 28301337.0, 2213375.0, 409556.0, 520000.0, 1038838.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current trade and other payables nan , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' rebates', 60), (' current - liability for annual and long service leave', 56), (' share of joint venture payables', 56), (' other related parties', 53), (' gst payable and accruals', 50), (' restructuring', 50), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' contract liabilites - current', 40), (' gst liabilities', 40), (' make good provisions', 38), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current contract liabilities nan , res_fuzz_match = [(' gst liabilities', 80), (' contract liabilites - current', 77), (' derivative contracts - at fair value', 64), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' restructuring', 60), (' other', 60), (' forward exchange contracts', 54), (' ultimate parent entity', 53), (' secured long-term bank loans', 50), (' gst payables', 50), (' warranty', 50), (' share of joint venture payables', 48), (' arising from service contracts', 48), (' total current employee benefits', 48), (' other related parties', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst payable and accruals', 42), (' loan payable to relayed party under tax funding agreement', 41), ('other creditors and accruals', 39), (' provision for associate funding', 36), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' employee benefits - current', 30), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due to related party 20 , res_fuzz_match = [(' other related parties', 82), (' loans from related party', 71), (' rebates', 60), (' other creditors', 50), (' other creditors', 50), (' current - liability for annual and long service leave', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' share of joint venture payables', 48), (' total current employee benefits', 48), (' employee benefits - payroll', 47), (' derivative contracts - at fair value', 46), (' secured long-term bank loans', 46), (' forward exchange contracts', 46), (' contract liabilites - current', 44), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' provisions - current', 43), ('other creditors and accruals', 42), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 39), (' gst payable and accruals', 36), (' provision for associate funding', 36), (' abandonment and decommissioning costs', 35), (' gst', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other creditors and accruals nan , res_fuzz_match = [('other creditors and accruals', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' other related parties', 65), (' rebates', 60), (' gst payable and accruals', 59), (' current - liability for annual and long service leave', 53), (' derivative contracts - at fair value', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' secured long-term bank loans', 46), (' loans from related party', 43), (' provisions - current', 43), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' employee benefits - current', 39), (' make good provisions', 38), (' total current employee benefits', 38), (' abandonment and decommissioning costs', 37), (' gst', 33), (' gst liabilities', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 5, 6, 7, 8], 'score': [100, 80, 82, 100, 100, 80, 82, 100], 'value': [8166254.0, 785740.0, 44920374.0, 12398770.0, 6067584.0, 471416.0, 37688849.0, 11449799.0], 'label': ['Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan', 'Current Trade and other payables nan', 'Current Contract liabilities nan', 'Current Amounts due to related party 20', 'Current Other creditors and accruals nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current warranty nan nan , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' ultimate parent entity', 47), (' loan payable to relayed party under tax funding agreement', 46), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 43), (' total current employee benefits', 43), (' contract liabilites - current', 42), (' gst payable and accruals', 41), (' gst payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' arising from service contracts', 33), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' employee benefits - payroll', 27), (' abandonment and decommissioning costs', 25), (' make good provisions', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current dealers nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 68), (' rebates', 60), (' secured long-term bank loans', 59), (' total current employee benefits', 59), (' loan payable to relayed party under tax funding agreement', 50), (' warranty', 50), ('other creditors and accruals', 47), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' other', 40), (' derivative contracts - at fair value', 36), (' loans from related party', 35), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' contract liabilites - current', 32), (' employee benefits - payroll', 32), (' arising from service contracts', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan nan , res_fuzz_match = [(' current - liability for annual and long service leave', 67), (' rebates', 60), (' secured long-term bank loans', 52), (' total current employee benefits', 52), (' warranty', 50), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' gst payable and accruals', 43), (' provisions - current', 43), (' share of joint venture payables', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' loans from related party', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current make good nan nan , res_fuzz_match = [(' make good provisions', 62), (' current - liability for annual and long service leave', 52), (' secured long-term bank loans', 48), (' forward exchange contracts', 42), ('other creditors and accruals', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' share of joint venture payables', 33), (' arising from service contracts', 33), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' provision for associate funding', 32), (' gst payables', 30), (' gst liabilities', 30), (' other related parties', 29), (' provisions - current', 29), (' employee benefits - payroll', 27), (' restructuring', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current total nan nan , res_fuzz_match = [(' secured long-term bank loans', 52), (' current - liability for annual and long service leave', 52), ('other creditors and accruals', 48), (' derivative contracts - at fair value', 43), (' loan payable to relayed party under tax funding agreement', 43), (' forward exchange contracts', 43), (' gst payables', 40), (' rebates', 40), (' other', 40), (' loans from related party', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' warranty', 38), (' total current employee benefits', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' other related parties', 35), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' abandonment and decommissioning costs', 33), (' provision for associate funding', 33), (' gst', 33), (' gst liabilities', 30), (' restructuring', 30), (' provisions - current', 29), (' arising from service contracts', 29), (' employee benefits - payroll', 24), (' make good provisions', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: inaud warranty dealers , res_fuzz_match = [(' warranty', 100), (' rebates', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 50), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' contract liabilites - current', 44), (' loans from related party', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' total current employee benefits', 39), (' secured long-term bank loans', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 1 april 2021 6327762 14230472 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' loans from related party', 52), (' gst payable and accruals', 51), (' provision for associate funding', 49), (' other related parties', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' total current employee benefits', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' warranty', 38), (' contract liabilites - current', 37), (' share of joint venture payables', 37), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions made during the year 4176555 47386577 , res_fuzz_match = [(' other', 60), (' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 55), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' total current employee benefits', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: provisions used during the year (1,170,637) nan , res_fuzz_match = [(' other', 60), (' provision for associate funding', 59), (' provisions - current', 57), (' make good provisions', 56), (' secured long-term bank loans', 50), (' warranty', 50), (' arising from service contracts', 48), (' other related parties', 47), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' employee benefits - payroll', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' total current employee benefits', 38), (' gst payable and accruals', 36), (' contract liabilites - current', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' gst liabilities', 30), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: payments (2,084,957) (40,564,435) , res_fuzz_match = [(' provisions - current', 71), (' make good provisions', 56), (' gst payables', 50), (' employee benefits - current', 48), (' other related parties', 47), (' employee benefits - payroll', 45), (' share of joint venture payables', 44), (' total current employee benefits', 44), (' ultimate parent entity', 42), (' provision for associate funding', 41), (' rebates', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 39), (' arising from service contracts', 39), (' loans from related party', 38), (' warranty', 38), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' abandonment and decommissioning costs', 36), (' other creditors', 36), ('other creditors and accruals', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' gst', 33), (' derivative contracts - at fair value', 31), (' gst liabilities', 30), (' forward exchange contracts', 30), (' restructuring', 30), (' gst payable and accruals', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = movement in provisions: balance at 31 march 2022 7248723 21052614 , res_fuzz_match = [(' provisions - current', 57), (' make good provisions', 56), (' provision for associate funding', 49), (' loans from related party', 48), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 45), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 39), (' derivative contracts - at fair value', 38), (' warranty', 38), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' share of joint venture payables', 36), (' arising from service contracts', 36), (' other creditors', 36), (' total current employee benefits', 36), (' contract liabilites - current', 33), (' gst', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' restructuring', 30), (' forward exchange contracts', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5, 11, 16], 'score': [100, 100, 100, 100], 'value': [7248723.0, 0.0, 6327762.0, 0.0], 'label': ['Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers', 'Current Warranty nan nan', 'Movement in provisions: InAUD Warranty Dealers'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current liability for annual leave , res_fuzz_match = [(' current - liability for annual and long service leave', 90), (' gst liabilities', 80), (' warranty', 62), (' rebates', 60), (' contract liabilites - current', 52), (' gst payable and accruals', 50), (' gst payables', 50), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' total current employee benefits', 45), (' loans from related party', 43), (' provisions - current', 43), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' other related parties', 41), (' provision for associate funding', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' other', 40), (' other creditors', 36), (' other creditors', 36), (' arising from service contracts', 36), (' other creditors', 36), (' gst', 33), (' forward exchange contracts', 33), (' employee benefits - payroll', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' restructuring', 30), (' make good provisions', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current liability for long service leave , res_fuzz_match = [(' gst liabilities', 80), (' current - liability for annual and long service leave', 69), (' gst', 67), (' warranty', 62), (' arising from service contracts', 60), (' rebates', 60), (' contract liabilites - current', 52), (' gst payables', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' total current employee benefits', 48), (' make good provisions', 44), (' provisions - current', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' loan payable to relayed party under tax funding agreement', 34), (' restructuring', 30)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other employee benefits , res_fuzz_match = [(' other', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' total current employee benefits', 79), (' rebates', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' secured long-term bank loans', 46), (' share of joint venture payables', 44), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), ('other creditors and accruals', 38), (' loan payable to relayed party under tax funding agreement', 38), (' make good provisions', 38), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' loans from related party', 33), (' gst', 33), (' forward exchange contracts', 33), (' arising from service contracts', 32), (' gst liabilities', 30), (' derivative contracts - at fair value', 29), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current liability for long service leave , res_fuzz_match = [(' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' gst', 67), (' arising from service contracts', 60), (' contract liabilites - current', 52), (' loans from related party', 48), (' secured long-term bank loans', 46), (' make good provisions', 44), (' loan payable to relayed party under tax funding agreement', 43), (' other related parties', 41), (' provision for associate funding', 41), (' total current employee benefits', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' gst payable and accruals', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 6, 7, 8], 'score': [90, 80, 100, 90, 80, 100], 'value': [1386692.0, 576678.0, 250005.0, 1189057.0, 772345.0, 0.0], 'label': ['Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits', 'Current Liability for annual leave', 'Current Liability for long service leave', 'Current Other employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings ', 44), (' lease liabilities ', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits ', 33), ('other long term liabilities ', 32), (' provision for associate funding ', 32), (' deferred revenue', 29), (' other non-current liabilities ', 28), (' trade and other payables ', 26), (' other financial liabilities ', 21), (' financial liabilities ', 17), (' provisions ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 29913675.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [29913675.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 41223680.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [41223680.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 92742998.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [92742998.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = current tax assets , res_fuzz_match = [(' unbilled ', 40), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade and other receivables', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' trade receivables ', 35), ('account receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 121289307.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['9'], 'line_item_value': [121289307.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current amounts due from related party 20 , res_fuzz_match = [(' receivables from related parties ', 78), (' related party receivables ', 61), (' trade debtors ', 50), (' other debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 48), (' trade debtors from contracts with customers', 46), ('trade receivables ', 42), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36), ('charges paid in advance ', 35)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current other receivables nan , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 58), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 41), (' allowance for expected credit loss ', 38), (' trade debtors from contracts with customers', 38), (' trade debtors ', 33), (' provision for impairment losses ', 33)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' trade debtors ', 42), (' share of joint venture receivables ', 41), (' net trade debtors ', 41), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' other debtors ', 33), (' provision for impairment losses ', 29), ('trade receivables ', 25)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Sales revenue ', 50), (' net sales ', 38), (' from trading business ', 36), ('revenue from operations ', 34), (' sale of products ', 32), (' Revenue ', 32), (' revenue from contracts with customers ', 31), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' transmission and distribution business ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' from trading business ', 39), (' net sales ', 35), (' revenue from contracts with customers ', 31), (' revenue from continuing activities', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' Sales revenue ', 27), (' Sale of coal ', 23), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' revenue from continuing activities', 35), ('revenue from operations ', 34), (' from trading business ', 34), (' sale of products ', 33), (' Sales revenue ', 33), (' net sales ', 27), (' Sale of coal ', 27), (' transmission and distribution business ', 25), (' Revenue ', 16)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 435163948.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [435163948.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Sales revenue ', 50), (' net sales ', 38), (' from trading business ', 36), ('revenue from operations ', 34), (' sale of products ', 32), (' Revenue ', 32), (' revenue from contracts with customers ', 31), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' transmission and distribution business ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' from trading business ', 39), (' net sales ', 35), (' revenue from contracts with customers ', 31), (' revenue from continuing activities', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' Sales revenue ', 27), (' Sale of coal ', 23), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' revenue from continuing activities', 35), ('revenue from operations ', 34), (' from trading business ', 34), (' sale of products ', 33), (' Sales revenue ', 33), (' net sales ', 27), (' Sale of coal ', 27), (' transmission and distribution business ', 25), (' Revenue ', 16)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 530127762.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [530127762.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:50+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('Cost of sales', 36), ('purchase of stock-in-trade', 31), (' Personnel costs', 30), (' change in inventory', 29), (' Cost of product sold', 27), (' Cost of inventory sold', 25), (' Cost of goods and services sold', 21), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('total expenses', 53), ('total expenditure', 43), ('expenditure', 39), ('expense', 38), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Cost of inventory sold', 31), (' change in inventory', 29), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' Cost of product sold', 23), (' cost of goods sold ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 39), (' change in inventory', 38), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 26), ('expense', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -408854724.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-408854724.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('total expenses', 64), ('expense', 63), ('expenditure', 52), ('total expenditure', 48), ('cost of sales', 36), ('Cost of sales', 36), ('purchase of stock-in-trade', 31), (' Personnel costs', 30), (' change in inventory', 29), (' Cost of product sold', 27), (' Cost of inventory sold', 25), (' Cost of goods and services sold', 21), (' cost of coal sold', 15), (' cost of goods sold ', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('total expenses', 53), ('total expenditure', 43), ('expenditure', 39), ('expense', 38), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Cost of inventory sold', 31), (' change in inventory', 29), (' cost of coal sold', 25), ('cost of sales', 23), ('Cost of sales', 23), (' Cost of product sold', 23), (' cost of goods sold ', 20)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 39), (' change in inventory', 38), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 26), ('expense', 24)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -482165742.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-482165742.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:50+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Marketing expenses ', 100), (' Management expenses ', 72), (' Lease expenses ', 67), (' Selling Expenses ', 67), (' other expenses ', 64), (' Other expenses ', 64), (' Other expenses ', 64), (' property espense ', 64), ('expenses ', 63), (' Sales and marketing ', 57), (' Occupancy expenses ', 56), (' Selling & distribution expenses ', 47), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Administrative and other expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Administration ', 27), (' Logistics and distribution ', 24), (' Royalties ', 20), (' levies', 12), (' Occupancy ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' employee benefits expense ', 58), (' employee benefit espense ', 58), (' Depreciation expenses ', 50), (' Administrative and other expenses ', 50), (' Administrative expenses ', 48), (' Administration expenses ', 48), (' other expenses ', 47), (' Other expenses ', 47), (' Selling & distribution expenses ', 47), (' Management expenses ', 47), (' Other expenses ', 47), (' Marketing expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Lease expenses ', 43), (' Selling Expenses ', 43), (' Occupancy expenses ', 42), (' Amortisation expenses ', 40), (' property espense ', 39), ('expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' depreciation ', 24), (' Administration ', 23), (' levies', 13), (' Royalties ', 12), (' Occupancy ', 6)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Selling & distribution expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Depreciation expenses ', 39), (' Amortisation expenses ', 39), (' Depreciation and amortisation expenses ', 38), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 37), (' Distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling Expenses ', 33), (' Management expenses ', 33), (' Marketing expenses ', 32), (' Sales and marketing ', 31), (' Occupancy expenses ', 29), (' Logistics and distribution ', 25), ('expenses ', 24), (' Administration ', 23), (' depreciation ', 16), (' Royalties ', 16), (' Occupancy ', 12), (' levies', 9)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 100, 'value': -26864228.0, 'line_item_label': ['Occupancy expenses', 'Marketing expenses', 'Administrative expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-1435468.0, -6479612.0, -18949148.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:50+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Marketing expenses ', 100), (' Management expenses ', 72), (' Lease expenses ', 67), (' Selling Expenses ', 67), (' other expenses ', 64), (' Other expenses ', 64), (' Other expenses ', 64), (' property espense ', 64), ('expenses ', 63), (' Sales and marketing ', 57), (' Occupancy expenses ', 56), (' Selling & distribution expenses ', 47), (' Depreciation expenses ', 44), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' Distribution expenses ', 41), (' Administrative expenses ', 41), (' Administrative and other expenses ', 41), (' Administration expenses ', 41), (' depreciation ', 40), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' employee benefit espense ', 29), (' Administration ', 27), (' Logistics and distribution ', 24), (' Royalties ', 20), (' levies', 12), (' Occupancy ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' employee benefits expense ', 58), (' employee benefit espense ', 58), (' Depreciation expenses ', 50), (' Administrative and other expenses ', 50), (' Administrative expenses ', 48), (' Administration expenses ', 48), (' other expenses ', 47), (' Other expenses ', 47), (' Selling & distribution expenses ', 47), (' Management expenses ', 47), (' Other expenses ', 47), (' Marketing expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Lease expenses ', 43), (' Selling Expenses ', 43), (' Occupancy expenses ', 42), (' Amortisation expenses ', 40), (' property espense ', 39), ('expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' depreciation ', 24), (' Administration ', 23), (' levies', 13), (' Royalties ', 12), (' Occupancy ', 6)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Administrative and other expenses ', 52), (' Selling & distribution expenses ', 41), (' other expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Depreciation expenses ', 39), (' Amortisation expenses ', 39), (' Depreciation and amortisation expenses ', 38), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 37), (' Distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling Expenses ', 33), (' Management expenses ', 33), (' Marketing expenses ', 32), (' Sales and marketing ', 31), (' Occupancy expenses ', 29), (' Logistics and distribution ', 25), ('expenses ', 24), (' Administration ', 23), (' depreciation ', 16), (' Royalties ', 16), (' Occupancy ', 12), (' levies', 9)]
2023-08-11 15:17:50+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5], 'score': 100, 'value': -29921885.0, 'line_item_label': ['Occupancy expenses', 'Marketing expenses', 'Administrative expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-1381012.0, -10129088.0, -18411785.0]}
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:50+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-11 15:17:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:50+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-11 15:17:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Rental expenses ', 77), (' Occupancy expenses', 56), (' Administration expenses ', 41), ('Rent ', 35), (' Occupancy ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Rental expenses ', 51), (' Administration expenses ', 48), (' Occupancy expenses', 42), ('Rent ', 20), (' Occupancy ', 6)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 37), (' Occupancy expenses', 29), ('Rent ', 17), (' Occupancy ', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': -20384616.0, 'line_item_label': ['Occupancy expenses', 'Administrative expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-1435468.0, -18949148.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Rental expenses ', 77), (' Occupancy expenses', 56), (' Administration expenses ', 41), ('Rent ', 35), (' Occupancy ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Rental expenses ', 51), (' Administration expenses ', 48), (' Occupancy expenses', 42), ('Rent ', 20), (' Occupancy ', 6)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Rental expenses ', 39), (' Administration expenses ', 37), (' Occupancy expenses', 29), ('Rent ', 17), (' Occupancy ', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': -19792797.0, 'line_item_label': ['Occupancy expenses', 'Administrative expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-1381012.0, -18411785.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:51+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating', 35), ('Other revenue', 32), (' Other income', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Other income', 38), ('other operating', 28), ('Other revenue', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 29)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('other operating', 35), ('Other revenue', 32), (' Other income', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Other income', 38), ('other operating', 28), ('Other revenue', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 29)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Interest revenue', 43), (' Net finance costs', 36), ('other income', 25), ('finance income', 24), ('Finance income and costs', 24), (' Finance income and finance costs', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('finance income', 47), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 38), (' Interest revenue', 34), (' Net finance costs', 34)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 28), ('finance income', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 9], 'score': 100, 'value': -1210418.0, 'line_item_label': ['Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': [nan, nan, '6'], 'line_item_value': [3944.0, -609153.0, -605209.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Interest revenue', 43), (' Net finance costs', 36), ('other income', 25), ('finance income', 24), ('Finance income and costs', 24), (' Finance income and finance costs', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('finance income', 47), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 38), (' Interest revenue', 34), (' Net finance costs', 34)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 28), ('finance income', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 9], 'score': 100, 'value': -2333058.0, 'line_item_label': ['Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': [nan, nan, '6'], 'line_item_value': [48.0, -1166577.0, -1166529.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:51+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' interest expense', 71), (' finance expenses ', 62), (' net finance costs ', 36), ('finance cost ', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses ', 51), (' interest expense', 49), (' net finance costs ', 34), ('finance cost ', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -1214362.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-609153.0, -605209.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' interest expense', 71), (' finance expenses ', 62), (' net finance costs ', 36), ('finance cost ', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses ', 51), (' interest expense', 49), (' net finance costs ', 34), ('finance cost ', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -2333106.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-1166577.0, -1166529.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:51+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Impairement (expenses)/reversal ', 67), (' expenses ', 63), (' finance expenses', 62), (' interest revenue ', 43), (' net finance costs ', 36), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net of tax ', 30), (' net of tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' other income and revenue ', 29), (' other opertaing income ', 26), ('finance cost ', 25), (' other income ', 25), (' Other income ', 25), (' Impairment loss ', 25), (' Profit from discontinued operation ', 25), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses', 51), (' finance income and costs ', 43), (' Impairement (expenses)/reversal ', 43), (' Finance income and costs ', 43), (' net of tax ', 42), (' net of tax ', 42), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), (' other income ', 38), (' expenses ', 38), (' other income and revenue ', 38), (' Other income ', 38), (' other opertaing income ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Profit from discontinued operation ', 30), (' other gains/losses ', 29), ('finance cost ', 27), (' Impairment loss ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' other opertaing income ', 46), (' share of profit of equity accounted investees ', 44), (' net finance costs ', 41), (' other income and revenue ', 40), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' Other income ', 37), (' other gains/losses ', 34), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), ('finance cost ', 30), (' interest revenue ', 28), (' expenses ', 24), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -1214362.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-609153.0, -605209.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' Impairement (expenses)/reversal ', 67), (' expenses ', 63), (' finance expenses', 62), (' interest revenue ', 43), (' net finance costs ', 36), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net of tax ', 30), (' net of tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' other income and revenue ', 29), (' other opertaing income ', 26), ('finance cost ', 25), (' other income ', 25), (' Other income ', 25), (' Impairment loss ', 25), (' Profit from discontinued operation ', 25), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' finance expenses', 51), (' finance income and costs ', 43), (' Impairement (expenses)/reversal ', 43), (' Finance income and costs ', 43), (' net of tax ', 42), (' net of tax ', 42), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), (' other income ', 38), (' expenses ', 38), (' other income and revenue ', 38), (' Other income ', 38), (' other opertaing income ', 36), (' net finance costs ', 34), (' interest revenue ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Profit from discontinued operation ', 30), (' other gains/losses ', 29), ('finance cost ', 27), (' Impairment loss ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' other opertaing income ', 46), (' share of profit of equity accounted investees ', 44), (' net finance costs ', 41), (' other income and revenue ', 40), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' Other income ', 37), (' other gains/losses ', 34), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), ('finance cost ', 30), (' interest revenue ', 28), (' expenses ', 24), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -2333106.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '6'], 'line_item_value': [-1166577.0, -1166529.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:51+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' income tax expense', 62), (' tax (expense)/benefit', 52), (' income tax benefit/(expense)', 49), ('earlier year', 40), ('deferred tax', 36), ('prior year ', 35), ('current tax', 33), (' income tax benefit', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), (' income tax', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' income tax benefit/(expense)', 96), (' tax (expense)/benefit', 82), (' income tax benefit', 79), (' income tax expense', 76), ('minimum alternate tax credit entitlement', 59), (' income tax', 51), ('amount transferred to retained earnings', 42), ('deferred tax', 40), ('current tax', 38), ('provision for taxation previous year', 36), ('prior year ', 28), ('earlier year', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('provision for taxation previous year', 47), (' tax (expense)/benefit', 46), (' income tax benefit/(expense)', 45), (' income tax expense', 44), (' income tax benefit', 40), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), (' income tax', 31), ('deferred tax', 23)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 96, 'value': 192476.0, 'line_item_label': ['Income tax (expensel/benefit'], 'note_numbers': ['7'], 'line_item_value': [192476.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [(' income tax expense', 62), (' tax (expense)/benefit', 52), (' income tax benefit/(expense)', 49), ('earlier year', 40), ('deferred tax', 36), ('prior year ', 35), ('current tax', 33), (' income tax benefit', 33), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), (' income tax', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' income tax benefit/(expense)', 96), (' tax (expense)/benefit', 82), (' income tax benefit', 79), (' income tax expense', 76), ('minimum alternate tax credit entitlement', 59), (' income tax', 51), ('amount transferred to retained earnings', 42), ('deferred tax', 40), ('current tax', 38), ('provision for taxation previous year', 36), ('prior year ', 28), ('earlier year', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('provision for taxation previous year', 47), (' tax (expense)/benefit', 46), (' income tax benefit/(expense)', 45), (' income tax expense', 44), (' income tax benefit', 40), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), (' income tax', 31), ('deferred tax', 23)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 96, 'value': -5563601.0, 'line_item_label': ['Income tax (expensel/benefit'], 'note_numbers': ['7'], 'line_item_value': [-5563601.0]}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:DataBucketingUtils.py,  function: get_notes_tables_from_meta_dict_and_standardized_notes_dict
2023-08-11 15:17:51+0530 - sLogger - ERROR - error occured: 'NoneType' object is not iterable
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('share of', 44), ('share in', 44)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional ', 42), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 32)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 33), ('exceptional ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('exceptional ', 42), (' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 32)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 33), ('exceptional ', 20)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-11 15:17:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-11 15:17:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-11 15:17:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-11 15:17:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = marketing expenses , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = income tax (expensel/benefit , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/lexpense) for the year , res_fuzz_match = [('NULL', 13)]
2023-08-11 15:17:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
