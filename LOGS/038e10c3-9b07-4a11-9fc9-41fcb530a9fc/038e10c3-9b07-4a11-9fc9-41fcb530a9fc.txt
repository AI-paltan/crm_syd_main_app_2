2023-06-26 10:43:58+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-06-26 10:43:58+0530 - sLogger - DEBUG - {'fileid': '038e10c3-9b07-4a11-9fc9-41fcb530a9fc', 'filename': 'Canon Australia Pty. Ltd. and its controlled entities-Annual Report-31122022- Signed Full Set.pdf', 'filepath': '/home/jayesh/mgs_ai/crm_syd_1/CRM_SYD_main_app_2/classification/../FILE_DB/FILES/Canon Australia Pty. Ltd. and its controlled entities-Annual Report-31122022- Signed Full Set.pdf', 'status': 'Processing'}
2023-06-26 10:43:58+0530 - sLogger - DEBUG - save file completed
2023-06-26 10:43:58+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-06-26 10:43:58+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-06-26 10:43:58+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-06-26 10:43:58+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-06-26 10:43:58+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-06-26 10:43:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:43:58+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:00+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:00+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:02+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:02+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:10+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:10+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:14+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:14+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:19+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:19+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:24+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:24+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:28+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:28+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:31+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:31+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:35+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:35+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:43+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:43+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:51+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:51+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:44:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:44:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:44:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:44:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:44:59+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:44:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:44:59+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:45:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:45:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:45:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:45:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:45:09+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:45:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:45:09+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:45:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:45:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:45:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:45:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:45:17+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:45:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:45:17+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:45:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:45:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:45:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:45:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:45:26+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:45:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:45:26+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:45:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:45:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:45:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:45:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:45:35+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:45:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:45:35+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:45:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:45:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:45:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:45:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:45:44+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:45:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:45:44+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:45:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:45:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:45:52+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:45:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:45:53+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:02+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:02+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:06+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:06+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:11+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:11+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:15+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:15+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:19+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:19+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:22+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:22+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:27+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:27+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:32+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:32+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:36+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:36+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:40+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:40+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:47+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:47+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:51+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:51+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:46:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:46:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:46:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:46:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:46:56+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:46:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:46:56+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:00+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:00+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:05+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:05+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:10+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:10+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:16+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:16+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:20+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:20+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:20+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:20+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:22+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:22+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:25+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:25+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:34+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:34+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:44+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-06-26 10:47:44+0530 - sLogger - DEBUG - filetype: pdf
2023-06-26 10:47:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-06-26 10:47:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-06-26 10:47:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-06-26 10:47:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-06-26 10:47:47+0530 - sLogger - DEBUG - function: predict completed.
2023-06-26 10:47:47+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-06-26 10:47:47+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6, 12, 26, 27, 35], 'predicted_cpl_pages': [5, 7], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5, 7], 'filtered_ccf_pages': [8], 'month': 'december', 'status': 'Page Classification Completed'}
2023-06-26 10:47:47+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-06-26 10:47:47+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-06-26 10:47:47+0530 - sLogger - DEBUG - process file completed
2023-06-26 10:47:47+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-06-26 10:54:07+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-06-26 10:54:07+0530 - sLogger - DEBUG - TE process file started
2023-06-26 10:59:08+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-06-26 10:59:08+0530 - sLogger - DEBUG - TE process file started
2023-06-26 11:07:22+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-06-26 11:07:22+0530 - sLogger - DEBUG - TE process file started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-06-26 11:17:02+0530 - sLogger - DEBUG - process_main_pages started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: get_data_chunk_span_with_notes
2023-06-26 11:17:02+0530 - sLogger - ERROR - error occured: zero-size array to reduction operation maximum which has no identity
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: ideal_format_processing
2023-06-26 11:17:02+0530 - sLogger - ERROR - error occured: list index out of range
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-06-26 11:17:02+0530 - sLogger - ERROR - error occured: local variable 'standard_df' referenced before assignment
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - start_refactoring completed
2023-06-26 11:17:02+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-06-26 11:17:02+0530 - sLogger - DEBUG - set_section_details started
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 31
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity liabilities', 23), ('equity and liabilities', 20), ('liabilities', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 31
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 47), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('current liabilities', 17), ('liabilities', 7), ('noncurrent liabilities', 6)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 29
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 33
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 46
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('current liabilities', 28), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14), ('noncurrent liabilities', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 35
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Contract assets | [('current assets', 67), ('noncurrent assets', 67), ('assets', 53), ('noncurrent liabilities', 36), ('equity liabilities', 30), ('current liabilities', 29), ('equity and liabilities', 26), ('equity', 20), ('liabilities', 10)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD current assets | score 69
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD current liabilities | score 41
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD noncurrent assets | score 69
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD noncurrent liabilities | score 43
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD non current assets | score 67
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD non current liabilities | score 42
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD equity and liabilities | score 27
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract assets | MATCH WORD equity | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Inventories | [('noncurrent assets', 36), ('current liabilities', 35), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity', 27), ('equity and liabilities', 23), ('equity liabilities', 18), ('noncurrent liabilities', 17)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 32
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Other | [('current assets', 22), ('noncurrent assets', 22), ('noncurrent liabilities', 21), ('assets', 20), ('equity', 18), ('current liabilities', 11), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current assets | score 18
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent assets | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current assets | score 25
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity and liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity | score 18
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 55), ('assets', 42), ('noncurrent liabilities', 36), ('equity liabilities', 31), ('equity and liabilities', 28), ('equity', 24), ('liabilities', 8)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 29
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity', 21), ('equity and liabilities', 20), ('equity liabilities', 15), ('liabilities', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 31
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('current liabilities', 28), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14), ('noncurrent liabilities', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 35
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 49), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('equity liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 13), ('noncurrent liabilities', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 24
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 33
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Rightofuse assets | [('noncurrent assets', 57), ('assets', 50), ('current assets', 50), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('equity and liabilities', 19), ('equity liabilities', 14), ('liabilities', 10)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 22
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 25
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 26
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Intangibles | [('liabilities', 33), ('equity', 33), ('equity liabilities', 32), ('current liabilities', 30), ('noncurrent liabilities', 30), ('current assets', 21), ('noncurrent assets', 21), ('assets', 18), ('equity and liabilities', 17)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD current assets | score 32
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD current liabilities | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrent assets | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD noncurrent liabilities | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD non current assets | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD non current liabilities | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equity and liabilities | score 42
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Intangibles | MATCH WORD equity | score 22
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 29
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Other | [('current assets', 22), ('noncurrent assets', 22), ('noncurrent liabilities', 21), ('assets', 20), ('equity', 18), ('current liabilities', 11), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current assets | score 18
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent assets | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD noncurrent liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current assets | score 25
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD non current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity and liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Other | MATCH WORD equity | score 18
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 27
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity liabilities', 33), ('current liabilities', 32), ('equity and liabilities', 29), ('equity', 24), ('liabilities', 12), ('noncurrent liabilities', 8)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 22
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 16
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 29
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 29
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 11)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 64
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 56
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 54
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current assets', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('noncurrent assets', 23), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Contract liabilities | [('current liabilities', 69), ('liabilities', 57), ('equity liabilities', 57), ('equity and liabilities', 56), ('noncurrent liabilities', 41), ('current assets', 21), ('noncurrent assets', 21), ('assets', 20), ('equity', 19)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD current assets | score 35
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD current liabilities | score 77
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD noncurrent assets | score 38
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD noncurrent liabilities | score 76
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD non current assets | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD non current liabilities | score 74
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD equity and liabilities | score 67
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Contract liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 26
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 24
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 23
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Derivative financial instruments  forward contracts | [('current assets', 30), ('noncurrent assets', 26), ('equity and liabilities', 21), ('equity liabilities', 19), ('current liabilities', 18), ('assets', 17), ('noncurrent liabilities', 15), ('liabilities', 13), ('equity', 13)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD current assets | score 43
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD noncurrent assets | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD noncurrent liabilities | score 32
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD non current assets | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD non current liabilities | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD equity and liabilities | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Derivative financial instruments  forward contracts | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Income tax | [('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('noncurrent assets', 18), ('assets', 14), ('current assets', 9), ('equity and liabilities', 8)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current assets | score 33
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current liabilities | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent assets | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent liabilities | score 38
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current assets | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current liabilities | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity and liabilities | score 27
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity | score 32
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Employee benefits | [('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('equity', 29), ('equity and liabilities', 25), ('assets', 20), ('noncurrent liabilities', 14), ('liabilities', 10)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 25
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 22
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 26
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 36
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 22
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 52
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 57
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('assets', 11), ('equity', 10)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 70
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 65
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:02+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current assets', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('noncurrent assets', 23), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 37
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 39
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 28
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 34
2023-06-26 11:17:02+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 26
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 24
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 23
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('assets', 19), ('current assets', 14), ('noncurrent assets', 14)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 39
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 34
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 33
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Employee benefits | [('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('equity', 29), ('equity and liabilities', 25), ('assets', 20), ('noncurrent liabilities', 14), ('liabilities', 10)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 28
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 34
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 25
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 22
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 26
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 36
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 22
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('equity liabilities', 36), ('current liabilities', 35), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 60
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 33
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 32
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current liabilities', 30), ('current assets', 21), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 31
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 31
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('current assets', 35), ('noncurrent assets', 35), ('current liabilities', 33), ('equity and liabilities', 30), ('equity liabilities', 26), ('liabilities', 25), ('noncurrent liabilities', 25)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 29
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 34
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 26
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 25
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 27
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 28
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 32
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Retained profits | [('liabilities', 32), ('equity', 32), ('current liabilities', 30), ('noncurrent liabilities', 30), ('current assets', 23), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity and liabilities', 20)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current assets | score 40
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current liabilities | score 40
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent assets | score 36
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent liabilities | score 37
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current assets | score 35
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current liabilities | score 36
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity and liabilities | score 25
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity | score 30
2023-06-26 11:17:03+0530 - sLogger - DEBUG - Total equity | [('equity', 67), ('equity liabilities', 64), ('equity and liabilities', 55), ('current liabilities', 31), ('assets', 12), ('liabilities', 11), ('current assets', 8), ('noncurrent assets', 8), ('noncurrent liabilities', 8)]
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 15
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 21
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 32
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-06-26 11:17:03+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-06-26 11:17:03+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-06-26 11:17:03+0530 - sLogger - DEBUG - set_section_details started
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers (inclusive of GST) | adjustments for increase decrease in operating liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees (inclusive of GST) | changes in operating assets and liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | adiustments for movements in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest and other finance costs paid | operating profit before changes in assets and liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes (paid)refunded | changes in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for purchase of subsidiary, net of cash acquired | adjustments for increase decrease in operating liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | changes in operating assets and liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for intangibles | operating profit before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for security deposits | adiustments for movements in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of property, plant and equipment | adiustments for movements in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of intangibles | adiustments for movements in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from release of security deposits | adiustments for movements in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | operating cash flow before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of borrowings | operating profit before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of principal portion of lease liabilities | operating profit before changes in assets and liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | movements in working capital
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in financing activities | operating cash flow before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net decrease/increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | operating cash flow before working capital changes
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effects of exchange rate changes on cash and cash equivalents | changes in operating assets and liabilities
2023-06-26 11:17:03+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-06-26 11:17:07+0530 - sLogger - ERROR - error occured: 'year'
2023-06-26 11:17:07+0530 - sLogger - DEBUG - process_main_pages completed
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 25), ('cash and cash equivalents', 24), (' cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and short term deposits', 54), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), (' cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and short term deposits', 33), ('cash and bank balances', 24)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 26), ('bank balances other than above', 24), ('cash and bank balances', 24), ('cash and short term deposits', 24), ('bank balances other than cash and cash equivalents', 21)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other bank balances', 45), ('bank balances other than above', 31), ('bank balances other than cash and cash equivalents', 20), ('cash and short term deposits', 19), ('cash and cash equivalents', 15), (' cash and cash equivalents', 15), ('cash and bank balances', 8)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 119092.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [119092.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 25), ('cash and cash equivalents', 24), (' cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and short term deposits', 54), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), (' cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and short term deposits', 33), ('cash and bank balances', 24)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 26), ('bank balances other than above', 24), ('cash and bank balances', 24), ('cash and short term deposits', 24), ('bank balances other than cash and cash equivalents', 21)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other bank balances', 45), ('bank balances other than above', 31), ('bank balances other than cash and cash equivalents', 20), ('cash and short term deposits', 19), ('cash and cash equivalents', 15), (' cash and cash equivalents', 15), ('cash and bank balances', 8)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 76310.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [76310.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = cash on hand cash at bank , res_fuzz_match = [('cash on hand', 100), (' cash at bank', 100), (' cash on hand and at bank', 83), (' cash and cash equivalents', 74), (' cash at bank and on hand', 67), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 47), (' short term deposits', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 43), (' cash and cash equivalents', 38), ('cash on hand', 33), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = cash on hand short-term deposits , res_fuzz_match = [('cash on hand', 100), (' short term deposits', 97), (' cash at bank', 78), (' cash and cash equivalents', 57), (' cash at bank and on hand', 56), (' cash on hand and at bank', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 43), (' cash and cash equivalents', 38), ('cash on hand', 33), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = cash on hand nan , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 92), (' cash at bank', 78), (' cash and cash equivalents', 77), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 69), (' cash at bank and on hand', 62), (' short term deposits', 31)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 43), (' cash and cash equivalents', 38), ('cash on hand', 33), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = cash on hand cash at bank , res_fuzz_match = [('cash on hand', 100), (' cash at bank', 100), (' cash on hand and at bank', 83), (' cash and cash equivalents', 74), (' cash at bank and on hand', 67), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 47), (' short term deposits', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 43), (' cash and cash equivalents', 38), ('cash on hand', 33), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = cash on hand short-term deposits , res_fuzz_match = [('cash on hand', 100), (' short term deposits', 97), (' cash at bank', 78), (' cash and cash equivalents', 57), (' cash at bank and on hand', 56), (' cash on hand and at bank', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 43), (' cash and cash equivalents', 38), ('cash on hand', 33), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = cash on hand nan , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 92), (' cash at bank', 78), (' cash and cash equivalents', 77), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 69), (' cash at bank and on hand', 62), (' short term deposits', 31)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' short term deposits', 43), (' cash and cash equivalents', 38), ('cash on hand', 33), (' cash at bank', 25), (' cash at bank and on hand', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 25), (' cash on hand and at bank', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [18283.0, 58026.0, 76310.0, 43482.0, 75609.0, 119092.0], 'label': ['Cash on hand Cash at bank', 'Cash on hand Short-term deposits', 'Cash on hand nan', 'Cash on hand Cash at bank', 'Cash on hand Short-term deposits', 'Cash on hand nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:07+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('inventories', 33)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('inventories', 50)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 67918.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [67918.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('inventories', 33)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('inventories', 50)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 105830.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [105830.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none 112774 , res_fuzz_match = [(' stores and other consumables at cost', 50), (' work in progress', 50), (' provision for inventory obsolescence', 50), (' inventories', 50), (' cranes', 50), (' cranes - in transit', 50), ('raw materials', 25), (' finished goods', 25), (' finished goods at cost', 25), (' raw materials', 25), (' finished goods', 25), (' goods in transit', 25), (' spare parts', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = $'000 $'000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none (6,944) , res_fuzz_match = [(' stores and other consumables at cost', 50), (' work in progress', 50), (' provision for inventory obsolescence', 50), (' inventories', 50), (' cranes', 50), (' cranes - in transit', 50), ('raw materials', 25), (' finished goods', 25), (' finished goods at cost', 25), (' raw materials', 25), (' finished goods', 25), (' goods in transit', 25), (' spare parts', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = $'000 $'000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none 105830 , res_fuzz_match = [(' stores and other consumables at cost', 50), (' work in progress', 50), (' provision for inventory obsolescence', 50), (' inventories', 50), (' cranes', 50), (' cranes - in transit', 50), ('raw materials', 25), (' finished goods', 25), (' finished goods at cost', 25), (' raw materials', 25), (' finished goods', 25), (' goods in transit', 25), (' spare parts', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = $'000 $'000 , res_fuzz_match = [('raw materials', 0), (' finished goods', 0), (' finished goods at cost', 0), (' stores and other consumables at cost', 0), (' raw materials', 0), (' work in progress', 0), (' finished goods', 0), (' goods in transit', 0), (' provision for inventory obsolescence', 0), (' inventories', 0), (' cranes', 0), (' cranes - in transit', 0), (' spare parts', 0)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:07+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25), ('prepayments', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33), ('prepayments', 21)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59), ('prepayments', 20)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22), ('prepayments', 13)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25), ('prepayments', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33), ('prepayments', 21)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59), ('prepayments', 20)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22), ('prepayments', 13)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:07+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' deferred operating expenditure', 15), (' trade and other receivables', 15), (' income tax receivable from related parties', 11)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' deferred operating expenditure', 29), (' income tax receivable from related parties', 17)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 42), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), (' other financial assets', 30), ('other current assets', 25), ('other assets', 25), (' other current assets', 25), (' deferred operating expenditure', 19)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets', 42), (' income tax receivable from related parties', 40), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' deferred operating expenditure', 37), (' financial assets', 23), (' biological assets', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), (' financial assets', 67), ('other current assets', 61), (' other current assets', 61), (' other financial assets', 61), (' biological assets', 54), (' trade and other receivables', 28), (' income tax receivable from related parties', 21), (' deferred operating expenditure', 17)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' biological assets', 29), (' other financial assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24), (' deferred operating expenditure', 20)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 37), (' deferred operating expenditure', 15), (' biological assets', 12), (' financial assets', 11), (' income tax receivable from related parties', 5)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 186308.0, 'line_item_label': ['Current assets', 'Trade and other receivables'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 186308.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' deferred operating expenditure', 15), (' trade and other receivables', 15), (' income tax receivable from related parties', 11)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' deferred operating expenditure', 29), (' income tax receivable from related parties', 17)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 42), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), (' other financial assets', 30), ('other current assets', 25), ('other assets', 25), (' other current assets', 25), (' deferred operating expenditure', 19)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets', 42), (' income tax receivable from related parties', 40), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' deferred operating expenditure', 37), (' financial assets', 23), (' biological assets', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), (' financial assets', 67), ('other current assets', 61), (' other current assets', 61), (' other financial assets', 61), (' biological assets', 54), (' trade and other receivables', 28), (' income tax receivable from related parties', 21), (' deferred operating expenditure', 17)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' biological assets', 29), (' other financial assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24), (' deferred operating expenditure', 20)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 37), (' deferred operating expenditure', 15), (' biological assets', 12), (' financial assets', 11), (' income tax receivable from related parties', 5)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 263120.0, 'line_item_label': ['Current assets', 'Trade and other receivables'], 'note_numbers': [nan, '10'], 'line_item_value': [0.0, 263120.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: within one year , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' other receivables - related party', 54), (' long service leave receivable', 52), (' income tax receivable from related parties', 50), (' related party receivable', 50), (' share of jv prepayments', 50), (' other deposits receivable - related party', 47), (' amount receivable from controlling entity', 46), (' accrued rebates', 45), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' lng', 33), (' foreign exchange forward contracts', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: one to five years , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other receivables - related party', 57), (' deposits', 57), (' condensate', 57), (' income tax receivable from related parties', 52), (' long service leave receivable', 52), (' related party receivable', 50), (' share of jv prepayments', 50), (' derivative contracts - fair value', 48), (' other deposits receivable - related party', 47), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' current investments', 43), (' forward exchange contracts', 42), (' bank guarantee', 38), (' accrued interest', 36), (' foreign exchange forward contracts', 35), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: more than five years , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other receivables - related party', 58), (' deposits', 57), (' condensate', 57), (' income tax receivable from related parties', 55), ('foreign exchange derivatives at fair value', 52), (' long service leave receivable', 52), (' other deposits receivable - related party', 52), (' related party receivable', 50), (' current investments', 50), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' foreign exchange forward contracts', 43), (' electricity derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' amount receivable from controlling entity', 39), (' bank guarantee', 38), (' accrued interest', 36), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: total commitment , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' amount receivable from controlling entity', 55), (' long service leave receivable', 52), (' other receivables - related party', 50), (' related party receivable', 50), (' share of jv prepayments', 50), (' other deposits receivable - related party', 47), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' foreign exchange forward contracts', 35), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: less: future finance charges , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' long service leave receivable', 52), (' other receivables - related party', 50), (' related party receivable', 50), (' income tax receivable from related parties', 49), (' other deposits receivable - related party', 47), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' related party disclosures', 43), (' amount receivable from controlling entity', 43), (' bank guarantee', 43), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' derivative contracts - fair value', 38), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' foreign exchange forward contracts', 36), (' lng', 33)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: net commitment recognised as assets , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' other receivables - related party', 54), (' long service leave receivable', 52), (' related party receivable', 50), (' share of jv prepayments', 50), (' income tax receivable from related parties', 48), (' amount receivable from controlling entity', 48), (' other deposits receivable - related party', 47), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' derivative contracts - fair value', 42), (' forward exchange contracts', 42), ('foreign exchange derivatives at fair value', 39), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' foreign exchange forward contracts', 34), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = representing: lease receivable - current , res_fuzz_match = [('current', 100), (' interest receivable', 67), (' current investments', 67), (' related party receivable', 61), (' other deposits receivable - related party', 58), (' other receivables - related party', 57), (' income tax receivable from related parties', 54), (' rental bond', 53), (' related party disclosures', 52), (' long service leave receivable', 52), (' amount receivable from controlling entity', 50), (' share of jv prepayments', 50), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 41), (' bank guarantee', 40), (' derivative contracts - fair value', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' foreign exchange forward contracts', 35), (' lng', 33), (' other', 29), ('foreign exchange derivatives at fair value', 27), (' other debtors and prepayments', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = representing: finance lease receivable - non-current (note 13) , res_fuzz_match = [(' other', 75), ('current', 71), (' interest receivable', 67), (' long service leave receivable', 57), (' income tax receivable from related parties', 51), (' related party receivable', 50), (' share of jv prepayments', 50), (' other receivables - related party', 46), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' derivative contracts - fair value', 44), (' other deposits receivable - related party', 44), ('other assets', 43), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 38), (' lng', 33), (' forward exchange contracts', 33), (' related party disclosures', 29), (' other debtors and prepayments', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = representing: nan , res_fuzz_match = [(' share of jv prepayments', 53), (' other debtors and prepayments', 53), (' electricity derivatives at fair value', 50), (' accrued interest', 50), (' interest receivable', 50), ('current', 43), (' deposits', 43), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' forward exchange contracts', 40), (' long service leave receivable', 38), (' lng', 33), (' condensate', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' amount receivable from controlling entity', 30), (' bank guarantee', 30), (' foreign exchange forward contracts', 30), ('other assets', 24)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: within one year , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' other receivables - related party', 54), (' long service leave receivable', 52), (' income tax receivable from related parties', 50), (' related party receivable', 50), (' share of jv prepayments', 50), (' other deposits receivable - related party', 47), (' amount receivable from controlling entity', 46), (' accrued rebates', 45), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' lng', 33), (' foreign exchange forward contracts', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: one to five years , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other receivables - related party', 57), (' deposits', 57), (' condensate', 57), (' income tax receivable from related parties', 52), (' long service leave receivable', 52), (' related party receivable', 50), (' share of jv prepayments', 50), (' derivative contracts - fair value', 48), (' other deposits receivable - related party', 47), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' current investments', 43), (' forward exchange contracts', 42), (' bank guarantee', 38), (' accrued interest', 36), (' foreign exchange forward contracts', 35), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: more than five years , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' other receivables - related party', 58), (' deposits', 57), (' condensate', 57), (' income tax receivable from related parties', 55), ('foreign exchange derivatives at fair value', 52), (' long service leave receivable', 52), (' other deposits receivable - related party', 52), (' related party receivable', 50), (' current investments', 50), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' foreign exchange forward contracts', 43), (' electricity derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' amount receivable from controlling entity', 39), (' bank guarantee', 38), (' accrued interest', 36), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: total commitment , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' amount receivable from controlling entity', 55), (' long service leave receivable', 52), (' other receivables - related party', 50), (' related party receivable', 50), (' share of jv prepayments', 50), (' other deposits receivable - related party', 47), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' foreign exchange forward contracts', 35), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: less: future finance charges , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' long service leave receivable', 52), (' other receivables - related party', 50), (' related party receivable', 50), (' income tax receivable from related parties', 49), (' other deposits receivable - related party', 47), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' related party disclosures', 43), (' amount receivable from controlling entity', 43), (' bank guarantee', 43), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' derivative contracts - fair value', 38), ('foreign exchange derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' foreign exchange forward contracts', 36), (' lng', 33)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: net commitment recognised as assets , res_fuzz_match = [(' other', 80), (' interest receivable', 67), ('other assets', 64), (' other debtors and prepayments', 61), (' deposits', 57), (' condensate', 57), (' other receivables - related party', 54), (' long service leave receivable', 52), (' related party receivable', 50), (' share of jv prepayments', 50), (' income tax receivable from related parties', 48), (' amount receivable from controlling entity', 48), (' other deposits receivable - related party', 47), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' derivative contracts - fair value', 42), (' forward exchange contracts', 42), ('foreign exchange derivatives at fair value', 39), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' foreign exchange forward contracts', 34), (' lng', 33), ('current', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = representing: lease receivable - current , res_fuzz_match = [('current', 100), (' interest receivable', 67), (' current investments', 67), (' related party receivable', 61), (' other deposits receivable - related party', 58), (' other receivables - related party', 57), (' income tax receivable from related parties', 54), (' rental bond', 53), (' related party disclosures', 52), (' long service leave receivable', 52), (' amount receivable from controlling entity', 50), (' share of jv prepayments', 50), ('other assets', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 41), (' bank guarantee', 40), (' derivative contracts - fair value', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' foreign exchange forward contracts', 35), (' lng', 33), (' other', 29), ('foreign exchange derivatives at fair value', 27), (' other debtors and prepayments', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = representing: finance lease receivable - non-current (note 13) , res_fuzz_match = [(' other', 75), ('current', 71), (' interest receivable', 67), (' long service leave receivable', 57), (' income tax receivable from related parties', 51), (' related party receivable', 50), (' share of jv prepayments', 50), (' other receivables - related party', 46), (' amount receivable from controlling entity', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' derivative contracts - fair value', 44), (' other deposits receivable - related party', 44), ('other assets', 43), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 38), (' lng', 33), (' forward exchange contracts', 33), (' related party disclosures', 29), (' other debtors and prepayments', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = representing: nan , res_fuzz_match = [(' share of jv prepayments', 53), (' other debtors and prepayments', 53), (' electricity derivatives at fair value', 50), (' accrued interest', 50), (' interest receivable', 50), ('current', 43), (' deposits', 43), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' accrued rebates', 40), (' forward exchange contracts', 40), (' long service leave receivable', 38), (' lng', 33), (' condensate', 33), ('foreign exchange derivatives at fair value', 30), (' derivative contracts - fair value', 30), (' amount receivable from controlling entity', 30), (' bank guarantee', 30), (' foreign exchange forward contracts', 30), ('other assets', 24)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15], 'score': [80, 80, 80, 80, 80, 80, 100, 80, 80, 80, 80, 80, 80, 100], 'value': [100117.0, 143549.0, 799.0, 244465.0, -48360.0, 196105.0, 86029.0, 108325.0, 144322.0, 827.0, 253474.0, -48261.0, 205213.0, 91600.0], 'label': ['Committed at the reporting date and recognised as assets, receivable: Within one year', 'Committed at the reporting date and recognised as assets, receivable: One to five years', 'Committed at the reporting date and recognised as assets, receivable: More than five years', 'Committed at the reporting date and recognised as assets, receivable: Total commitment', 'Committed at the reporting date and recognised as assets, receivable: Less: Future finance charges', 'Committed at the reporting date and recognised as assets, receivable: Net commitment recognised as assets', 'Representing: Lease receivable - current', 'Committed at the reporting date and recognised as assets, receivable: Within one year', 'Committed at the reporting date and recognised as assets, receivable: One to five years', 'Committed at the reporting date and recognised as assets, receivable: More than five years', 'Committed at the reporting date and recognised as assets, receivable: Total commitment', 'Committed at the reporting date and recognised as assets, receivable: Less: Future finance charges', 'Committed at the reporting date and recognised as assets, receivable: Net commitment recognised as assets', 'Representing: Lease receivable - current'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none trade receivables , res_fuzz_match = [(' income tax receivable from related parties', 71), (' interest receivable', 67), (' other deposits receivable - related party', 65), (' long service leave receivable', 59), (' other receivables - related party', 59), (' related party receivable', 59), (' amount receivable from controlling entity', 53), (' forward exchange contracts', 50), (' foreign exchange forward contracts', 48), ('foreign exchange derivatives at fair value', 47), (' electricity derivatives at fair value', 47), (' derivative contracts - fair value', 47), (' condensate', 43), (' other', 40), (' current investments', 40), (' bank guarantee', 38), (' accrued rebates', 38), ('other assets', 36), (' share of jv prepayments', 35), (' other debtors and prepayments', 35), (' accrued interest', 33), (' lng', 33), ('current', 29), (' deposits', 29), (' rental bond', 24), (' related party disclosures', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' rental bond', 48), (' current investments', 46), ('foreign exchange derivatives at fair value', 45), (' related party disclosures', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' forward exchange contracts', 43), (' other', 40), (' other debtors and prepayments', 39), (' foreign exchange forward contracts', 38), ('other assets', 36), (' accrued interest', 36), (' interest receivable', 36), (' accrued rebates', 36), (' other receivables - related party', 35), (' other deposits receivable - related party', 34), (' share of jv prepayments', 33), (' lng', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' income tax receivable from related parties', 29), (' derivative contracts - fair value', 29), (' related party receivable', 29), (' amount receivable from controlling entity', 26)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' condensate', 57), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' foreign exchange forward contracts', 50), (' other debtors and prepayments', 50), (' other', 40), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' interest receivable', 38), (' rental bond', 38), (' related party receivable', 38), (' share of jv prepayments', 38), (' current investments', 38), (' forward exchange contracts', 38), (' lng', 33), ('current', 29), (' accrued interest', 27), (' accrued rebates', 27), (' bank guarantee', 25), (' related party disclosures', 15), (' deposits', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none lease receivables , res_fuzz_match = [(' interest receivable', 76), (' income tax receivable from related parties', 69), (' long service leave receivable', 69), (' other receivables - related party', 56), (' other deposits receivable - related party', 56), (' related party receivable', 56), ('other assets', 55), (' amount receivable from controlling entity', 50), (' electricity derivatives at fair value', 44), (' condensate', 43), (' other', 40), (' share of jv prepayments', 40), (' accrued rebates', 40), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' forward exchange contracts', 37), (' accrued interest', 35), (' bank guarantee', 35), (' current investments', 35), (' lng', 33), (' foreign exchange forward contracts', 33), (' other debtors and prepayments', 32), ('current', 29), (' deposits', 29), (' rental bond', 24), (' related party disclosures', 19)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' rental bond', 48), (' current investments', 46), ('foreign exchange derivatives at fair value', 45), (' related party disclosures', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' forward exchange contracts', 43), (' other', 40), (' other debtors and prepayments', 39), (' foreign exchange forward contracts', 38), ('other assets', 36), (' accrued interest', 36), (' interest receivable', 36), (' accrued rebates', 36), (' other receivables - related party', 35), (' other deposits receivable - related party', 34), (' share of jv prepayments', 33), (' lng', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' income tax receivable from related parties', 29), (' derivative contracts - fair value', 29), (' related party receivable', 29), (' amount receivable from controlling entity', 26)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' condensate', 57), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' foreign exchange forward contracts', 50), (' other debtors and prepayments', 50), (' other', 40), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' interest receivable', 38), (' rental bond', 38), (' related party receivable', 38), (' share of jv prepayments', 38), (' current investments', 38), (' forward exchange contracts', 38), (' lng', 33), ('current', 29), (' accrued interest', 27), (' accrued rebates', 27), (' bank guarantee', 25), (' related party disclosures', 15), (' deposits', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none receivable from related party , res_fuzz_match = [(' income tax receivable from related parties', 86), (' other receivables - related party', 79), (' other deposits receivable - related party', 78), (' related party receivable', 76), (' related party disclosures', 69), (' amount receivable from controlling entity', 64), (' other', 60), (' interest receivable', 60), (' accrued rebates', 55), (' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' bank guarantee', 45), ('current', 43), ('foreign exchange derivatives at fair value', 43), (' long service leave receivable', 43), (' condensate', 43), (' current investments', 37), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' lng', 33), (' deposits', 31), (' forward exchange contracts', 30), (' foreign exchange forward contracts', 28), (' other debtors and prepayments', 26), (' share of jv prepayments', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 74), (' other receivables - related party', 71), (' income tax receivable from related parties', 65), ('other assets', 64), (' related party receivable', 59), (' long service leave receivable', 53), (' other deposits receivable - related party', 53), (' amount receivable from controlling entity', 53), ('current', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' forward exchange contracts', 43), ('foreign exchange derivatives at fair value', 41), (' other debtors and prepayments', 41), (' foreign exchange forward contracts', 40), (' accrued interest', 36), (' accrued rebates', 36), (' electricity derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' share of jv prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' rental bond', 24), (' related party disclosures', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none loans receivable (note 32) , res_fuzz_match = [(' other', 75), (' income tax receivable from related parties', 62), (' interest receivable', 60), (' long service leave receivable', 57), (' other deposits receivable - related party', 57), (' related party receivable', 56), (' other receivables - related party', 52), (' amount receivable from controlling entity', 52), (' bank guarantee', 46), ('current', 43), ('other assets', 43), ('foreign exchange derivatives at fair value', 43), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 38), (' forward exchange contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' foreign exchange forward contracts', 34), (' derivative contracts - fair value', 33), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 19)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' condensate', 57), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' foreign exchange forward contracts', 50), (' other debtors and prepayments', 50), (' other', 40), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' interest receivable', 38), (' rental bond', 38), (' related party receivable', 38), (' share of jv prepayments', 38), (' current investments', 38), (' forward exchange contracts', 38), (' lng', 33), ('current', 29), (' accrued interest', 27), (' accrued rebates', 27), (' bank guarantee', 25), (' related party disclosures', 15), (' deposits', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none trade receivables , res_fuzz_match = [(' income tax receivable from related parties', 71), (' interest receivable', 67), (' other deposits receivable - related party', 65), (' long service leave receivable', 59), (' other receivables - related party', 59), (' related party receivable', 59), (' amount receivable from controlling entity', 53), (' forward exchange contracts', 50), (' foreign exchange forward contracts', 48), ('foreign exchange derivatives at fair value', 47), (' electricity derivatives at fair value', 47), (' derivative contracts - fair value', 47), (' condensate', 43), (' other', 40), (' current investments', 40), (' bank guarantee', 38), (' accrued rebates', 38), ('other assets', 36), (' share of jv prepayments', 35), (' other debtors and prepayments', 35), (' accrued interest', 33), (' lng', 33), ('current', 29), (' deposits', 29), (' rental bond', 24), (' related party disclosures', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' rental bond', 48), (' current investments', 46), ('foreign exchange derivatives at fair value', 45), (' related party disclosures', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' forward exchange contracts', 43), (' other', 40), (' other debtors and prepayments', 39), (' foreign exchange forward contracts', 38), ('other assets', 36), (' accrued interest', 36), (' interest receivable', 36), (' accrued rebates', 36), (' other receivables - related party', 35), (' other deposits receivable - related party', 34), (' share of jv prepayments', 33), (' lng', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' income tax receivable from related parties', 29), (' derivative contracts - fair value', 29), (' related party receivable', 29), (' amount receivable from controlling entity', 26)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' condensate', 57), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' foreign exchange forward contracts', 50), (' other debtors and prepayments', 50), (' other', 40), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' interest receivable', 38), (' rental bond', 38), (' related party receivable', 38), (' share of jv prepayments', 38), (' current investments', 38), (' forward exchange contracts', 38), (' lng', 33), ('current', 29), (' accrued interest', 27), (' accrued rebates', 27), (' bank guarantee', 25), (' related party disclosures', 15), (' deposits', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none lease receivables , res_fuzz_match = [(' interest receivable', 76), (' income tax receivable from related parties', 69), (' long service leave receivable', 69), (' other receivables - related party', 56), (' other deposits receivable - related party', 56), (' related party receivable', 56), ('other assets', 55), (' amount receivable from controlling entity', 50), (' electricity derivatives at fair value', 44), (' condensate', 43), (' other', 40), (' share of jv prepayments', 40), (' accrued rebates', 40), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' forward exchange contracts', 37), (' accrued interest', 35), (' bank guarantee', 35), (' current investments', 35), (' lng', 33), (' foreign exchange forward contracts', 33), (' other debtors and prepayments', 32), ('current', 29), (' deposits', 29), (' rental bond', 24), (' related party disclosures', 19)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), (' rental bond', 48), (' current investments', 46), ('foreign exchange derivatives at fair value', 45), (' related party disclosures', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' forward exchange contracts', 43), (' other', 40), (' other debtors and prepayments', 39), (' foreign exchange forward contracts', 38), ('other assets', 36), (' accrued interest', 36), (' interest receivable', 36), (' accrued rebates', 36), (' other receivables - related party', 35), (' other deposits receivable - related party', 34), (' share of jv prepayments', 33), (' lng', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' income tax receivable from related parties', 29), (' derivative contracts - fair value', 29), (' related party receivable', 29), (' amount receivable from controlling entity', 26)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' condensate', 57), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' foreign exchange forward contracts', 50), (' other debtors and prepayments', 50), (' other', 40), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' interest receivable', 38), (' rental bond', 38), (' related party receivable', 38), (' share of jv prepayments', 38), (' current investments', 38), (' forward exchange contracts', 38), (' lng', 33), ('current', 29), (' accrued interest', 27), (' accrued rebates', 27), (' bank guarantee', 25), (' related party disclosures', 15), (' deposits', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none receivable from related party , res_fuzz_match = [(' income tax receivable from related parties', 86), (' other receivables - related party', 79), (' other deposits receivable - related party', 78), (' related party receivable', 76), (' related party disclosures', 69), (' amount receivable from controlling entity', 64), (' other', 60), (' interest receivable', 60), (' accrued rebates', 55), (' electricity derivatives at fair value', 50), (' derivative contracts - fair value', 50), (' bank guarantee', 45), ('current', 43), ('foreign exchange derivatives at fair value', 43), (' long service leave receivable', 43), (' condensate', 43), (' current investments', 37), ('other assets', 36), (' accrued interest', 36), (' rental bond', 36), (' lng', 33), (' deposits', 31), (' forward exchange contracts', 30), (' foreign exchange forward contracts', 28), (' other debtors and prepayments', 26), (' share of jv prepayments', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 74), (' other receivables - related party', 71), (' income tax receivable from related parties', 65), ('other assets', 64), (' related party receivable', 59), (' long service leave receivable', 53), (' other deposits receivable - related party', 53), (' amount receivable from controlling entity', 53), ('current', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' forward exchange contracts', 43), ('foreign exchange derivatives at fair value', 41), (' other debtors and prepayments', 41), (' foreign exchange forward contracts', 40), (' accrued interest', 36), (' accrued rebates', 36), (' electricity derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' share of jv prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' rental bond', 24), (' related party disclosures', 18)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none loans receivable (note 32) , res_fuzz_match = [(' other', 75), (' income tax receivable from related parties', 62), (' interest receivable', 60), (' long service leave receivable', 57), (' other deposits receivable - related party', 57), (' related party receivable', 56), (' other receivables - related party', 52), (' amount receivable from controlling entity', 52), (' bank guarantee', 46), ('current', 43), ('other assets', 43), ('foreign exchange derivatives at fair value', 43), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 38), (' forward exchange contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' foreign exchange forward contracts', 34), (' derivative contracts - fair value', 33), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 19)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' condensate', 57), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' foreign exchange forward contracts', 50), (' other debtors and prepayments', 50), (' other', 40), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' amount receivable from controlling entity', 38), (' interest receivable', 38), (' rental bond', 38), (' related party receivable', 38), (' share of jv prepayments', 38), (' current investments', 38), (' forward exchange contracts', 38), (' lng', 33), ('current', 29), (' accrued interest', 27), (' accrued rebates', 27), (' bank guarantee', 25), (' related party disclosures', 15), (' deposits', 15)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amount receivable from controlling entity', 62), (' condensate', 57), (' rental bond', 50), (' related party disclosures', 43), ('foreign exchange derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' long service leave receivable', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' other debtors and prepayments', 38), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' current investments', 31), ('current', 29), ('other assets', 25), (' electricity derivatives at fair value', 25), (' accrued interest', 25), (' income tax receivable from related parties', 25), (' other receivables - related party', 25), (' other deposits receivable - related party', 25), (' deposits', 25), (' other', 20), (' bank guarantee', 12), (' share of jv prepayments', 12), (' accrued rebates', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 16, 17], 'score': [86, 100, 86, 100], 'value': [1329.0, 2422.0, 360.0, 3132.0], 'label': ['None Receivable from related party', 'None Other receivables', 'None Receivable from related party', 'None Other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none 109942 , res_fuzz_match = [(' condensate', 75), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' accrued interest', 50), (' other', 50), (' income tax receivable from related parties', 50), (' derivative contracts - fair value', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' interest receivable', 50), (' bank guarantee', 50), (' rental bond', 50), (' current investments', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), ('current', 33), (' lng', 33), (' electricity derivatives at fair value', 25), (' related party disclosures', 25), (' deposits', 25), (' related party receivable', 25), (' share of jv prepayments', 25), (' accrued rebates', 25), (' other debtors and prepayments', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none (2,584) , res_fuzz_match = [(' condensate', 75), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' accrued interest', 50), (' other', 50), (' income tax receivable from related parties', 50), (' derivative contracts - fair value', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' interest receivable', 50), (' bank guarantee', 50), (' rental bond', 50), (' current investments', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), ('current', 33), (' lng', 33), (' electricity derivatives at fair value', 25), (' related party disclosures', 25), (' deposits', 25), (' related party receivable', 25), (' share of jv prepayments', 25), (' accrued rebates', 25), (' other debtors and prepayments', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none 107358 , res_fuzz_match = [(' condensate', 75), ('other assets', 50), ('foreign exchange derivatives at fair value', 50), (' accrued interest', 50), (' other', 50), (' income tax receivable from related parties', 50), (' derivative contracts - fair value', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' other deposits receivable - related party', 50), (' amount receivable from controlling entity', 50), (' interest receivable', 50), (' bank guarantee', 50), (' rental bond', 50), (' current investments', 50), (' foreign exchange forward contracts', 50), (' forward exchange contracts', 50), ('current', 33), (' lng', 33), (' electricity derivatives at fair value', 25), (' related party disclosures', 25), (' deposits', 25), (' related party receivable', 25), (' share of jv prepayments', 25), (' accrued rebates', 25), (' other debtors and prepayments', 25)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:07+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('current assets', 67)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('current assets', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('current assets', 67)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('current assets', 22)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:07+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:07+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-06-26 11:17:07+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 27543.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [27543.0]}
2023-06-26 11:17:07+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:07+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 28)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 27)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 14)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 40)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 28)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 27)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:07+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 7, 10, 15, 18, 21, 24], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-20615.0, -2616.0, -33685.0, -12685.0, -18902.0, 0.0, -31727.0, -13642.0], 'label': ['None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('cost', 100), ('gross', 80), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('cost', 100), ('gross', 80), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40), ('net value', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 6, 9, 12, 14, 17, 20, 23, 26], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [33573.0, 3687.0, 39604.0, 17069.0, 3211.0, 32454.0, 0.0, 39131.0, 19696.0, 631.0], 'label': ['None Leasehold improvements - at cost', 'None Motor vehicles at cost', 'None Office equipment - at cost', 'None Rental assets - at cost', 'None Construction in progress - at cost', 'None Leasehold improvements - at cost', 'None Motor vehicles at cost', 'None Office equipment - at cost', 'None Rental assets - at cost', 'None Construction in progress - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('depreciatio', 35)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('accumulated depreciation', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('depreciatio', 35)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('depreciatio', 35)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('depreciatio', 35)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('depreciatio', 35)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('depreciatio', 35)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25), ('net value', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25), ('net value', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('cost', 33), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25), ('net value', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25), ('net value', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25), ('net value', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('cost', 25), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40), ('net value', 38)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25), ('net value', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [32, 33, 34, 35, 36, 37, 38, 39], 'score': [80, 80, 80, 80, 80, 80, 80, 80], 'value': [631.0, 2560.0, 0.0, 0.0, 20.0, 0.0, 0.0, 3211.0], 'label': ["Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 27543.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [27543.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('capital work in progress', 32), ('work in progress', 31), ('tangible', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('capital work-in-progress', 40), ('capital workinprogress', 40), ('capital work in progress', 40), ('right of use', 40), ('right to use', 40), ('work in progress', 40), ('righttouse', 25), ('rightofuse', 22), ('tangible', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 34198.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['15'], 'line_item_value': [34198.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('capital work in progress', 32), ('work in progress', 31), ('tangible', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('capital work-in-progress', 40), ('capital workinprogress', 40), ('capital work in progress', 40), ('right of use', 40), ('right to use', 40), ('work in progress', 40), ('righttouse', 25), ('rightofuse', 22), ('tangible', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 52057.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['15'], 'line_item_value': [52057.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('tangible assets', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('tangible assets', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 20), ('goodwill', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 20), ('goodwill', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible under development', 38), ('intangible', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('intangible under development', 40), ('intangible assets under development', 40), ('intangible', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 95613.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['16'], 'line_item_value': [95613.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible under development', 38), ('intangible', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('intangible under development', 40), ('intangible assets under development', 40), ('intangible', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 92689.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['16'], 'line_item_value': [92689.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('donations', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('donations', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), (' investment in associate', 40), ('investment', 36), (' investment in joint venture', 33), ('derivative financial instruments', 31)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 34), (' investment in associate', 31), (' investment in joint venture', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), (' investment in joint venture', 39), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33), ('derivative financial instruments', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), (' investments accounted for using the equity method', 40), ('joint ventures and associates', 37), ('investment', 36), ('derivative financial instruments', 27), (' investment in joint venture', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('derivative financial instruments', 67), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investment in associate', 50), (' investments accounted for using the equity method', 50)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 27), (' investment in joint venture', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [(' investments accounted for using the equity method', 60), ('joint ventures and associates', 40), ('derivative financial instruments', 40), (' investment in joint venture', 40), ('investment', 29), (' investment in associate', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), (' investment in associate', 40), ('investment', 36), (' investment in joint venture', 33), ('derivative financial instruments', 31)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 34), (' investment in associate', 31), (' investment in joint venture', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), (' investment in joint venture', 39), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33), ('derivative financial instruments', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), (' investments accounted for using the equity method', 40), ('joint ventures and associates', 37), ('investment', 36), ('derivative financial instruments', 27), (' investment in joint venture', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('derivative financial instruments', 67), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investment in associate', 50), (' investments accounted for using the equity method', 50)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 27), (' investment in joint venture', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [(' investments accounted for using the equity method', 60), ('joint ventures and associates', 40), ('derivative financial instruments', 40), (' investment in joint venture', 40), ('investment', 29), (' investment in associate', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('deferred charges', 38), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1850.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['17'], 'line_item_value': [1850.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('deferred charges', 38), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1918.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['17'], 'line_item_value': [1918.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: allowance for expected credit losses , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: inventories , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: employee benefits , res_fuzz_match = [('deferred tax assets', 30), (' deferred tax balances', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: accrued expenses , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: foreign currency , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 26)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: other , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: lease liabilities , res_fuzz_match = [(' deferred tax balances', 37), ('deferred tax assets', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax assets offset against deferred tax liabilities , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 75)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax asset , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = movements: opening balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = movements: credited to profit or loss (note 8) , res_fuzz_match = [('deferred tax assets', 34), (' deferred tax balances', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = movements: closing balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: allowance for expected credit losses , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: inventories , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: employee benefits , res_fuzz_match = [('deferred tax assets', 30), (' deferred tax balances', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: accrued expenses , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: foreign currency , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 26)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: other , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: lease liabilities , res_fuzz_match = [(' deferred tax balances', 37), ('deferred tax assets', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax assets offset against deferred tax liabilities , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 75)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = amounts recognised in profit or loss: deferred tax asset , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = movements: opening balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = movements: credited to profit or loss (note 8) , res_fuzz_match = [('deferred tax assets', 34), (' deferred tax balances', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = movements: closing balance , res_fuzz_match = [(' deferred tax balances', 56), ('deferred tax assets', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' deferred tax balances', 22), ('deferred tax assets', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 8, 19, 20], 'score': [100, 100, 100, 100], 'value': [-34029.0, 1918.0, -31779.0, 1850.0], 'label': ['Amounts recognised in profit or loss: Deferred tax assets offset against deferred tax liabilities', 'Amounts recognised in profit or loss: Deferred tax asset', 'Amounts recognised in profit or loss: Deferred tax assets offset against deferred tax liabilities', 'Amounts recognised in profit or loss: Deferred tax asset'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 30), (' loan receivables', 25), (' leases', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), ('other assets', 42), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' exploration and evaluation expenditure', 37), ('non-current', 28), (' leased assets', 25), (' financial assets', 23), (' leases', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40), (' other assets', 40), (' exploration and evaluation expenditure', 39), (' loan receivables', 34), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 29), (' financial assets', 27), ('non-current', 19), (' leases', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' leases', 21), ('non-current', 18), (' exploration and evaluation expenditure', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets', 42), ('non-current', 31), (' loan receivables', 24), (' leases', 20), (' other non-current assets', 16), (' other non-current assets', 16), ('other assets', 12), (' exploration and evaluation expenditure', 12), (' other assets', 12), (' leased assets', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 33), (' loan receivables', 23), (' leases', 21), ('non-current', 9)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), (' other assets', 62), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 33), (' loan receivables', 25), (' leases', 22), (' leased assets', 13), (' exploration and evaluation expenditure', 12), (' financial assets', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), ('other assets', 67), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 30), (' loan receivables', 25), (' leases', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), ('other assets', 42), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' exploration and evaluation expenditure', 37), ('non-current', 28), (' leased assets', 25), (' financial assets', 23), (' leases', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40), (' other assets', 40), (' exploration and evaluation expenditure', 39), (' loan receivables', 34), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 29), (' financial assets', 27), ('non-current', 19), (' leases', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), ('other assets', 54), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' leases', 21), ('non-current', 18), (' exploration and evaluation expenditure', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [(' financial assets', 42), ('non-current', 31), (' loan receivables', 24), (' leases', 20), (' other non-current assets', 16), (' other non-current assets', 16), ('other assets', 12), (' exploration and evaluation expenditure', 12), (' other assets', 12), (' leased assets', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), ('other assets', 62), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 33), (' loan receivables', 23), (' leases', 21), ('non-current', 9)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), (' other assets', 62), (' other non-current assets', 42), (' other non-current assets', 42), ('non-current', 33), (' loan receivables', 25), (' leases', 22), (' leased assets', 13), (' exploration and evaluation expenditure', 12), (' financial assets', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('non-current assets total', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('non-current assets total', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20), (' bank overdraft', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' bank overdraft', 44), (' loans and borrowings', 38), ('lease liabilities', 30), ('shortterm borrowings', 21), (' leases', 15), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), (' bank overdraft', 28), (' loans and borrowings', 27), (' leases', 21), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), (' bank overdraft', 8), ('shortterm borrowings', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [(' bank overdraft', 29), ('short term debt', 25), ('short-term debt', 25), ('shortterm debt', 25), ('shortterm borrowings', 25), (' loans and borrowings', 21), ('borrowings', 13), (' leases', 13), ('lease liabilities', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), (' leases', 15), ('borrowings', 13), ('lease liabilities', 10), ('short-term debt', 9), ('shortterm debt', 9), (' bank overdraft', 9), (' loans and borrowings', 8)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), (' leases', 21), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 12196.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [12196.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), (' leases', 40), (' loans and borrowings', 29), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), (' bank overdraft', 10), ('shortterm borrowings', 9)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20), (' bank overdraft', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' bank overdraft', 44), (' loans and borrowings', 38), ('lease liabilities', 30), ('shortterm borrowings', 21), (' leases', 15), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), (' bank overdraft', 28), (' loans and borrowings', 27), (' leases', 21), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), (' bank overdraft', 8), ('shortterm borrowings', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [(' bank overdraft', 29), ('short term debt', 25), ('short-term debt', 25), ('shortterm debt', 25), ('shortterm borrowings', 25), (' loans and borrowings', 21), ('borrowings', 13), (' leases', 13), ('lease liabilities', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), (' leases', 15), ('borrowings', 13), ('lease liabilities', 10), ('short-term debt', 9), ('shortterm debt', 9), (' bank overdraft', 9), (' loans and borrowings', 8)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), (' leases', 21), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 13803.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [13803.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none lease liability , res_fuzz_match = [(' leases', 100), (' lease liabilities', 100), (' lease liabilities - current', 69), (' not later than 1 year', 44), (' balance at the end of period', 38), (' secured long-term bank loans', 32), (' loans from related party', 32), (' utilised – bank borrowings', 31), ('current', 14), ('bank borrowings', 14), (' current', 14), (' bank overdraft', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), ('current', 43), (' current', 43), (' loans from related party', 43), (' utilised – bank borrowings', 40), (' balance at the end of period', 39), (' bank overdraft', 37), ('bank borrowings', 36), (' secured long-term bank loans', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' lease liabilities - current', 47), ('current', 43), (' not later than 1 year', 43), (' current', 43), (' loans from related party', 43), (' balance at the end of period', 41), (' utilised – bank borrowings', 40), (' bank overdraft', 37), ('bank borrowings', 36), (' secured long-term bank loans', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [(' leases', 100), (' not later than 1 year', 63), (' lease liabilities', 55), (' lease liabilities - current', 47), (' loans from related party', 46), (' bank overdraft', 44), ('current', 43), (' current', 43), (' utilised – bank borrowings', 40), (' balance at the end of period', 40), (' secured long-term bank loans', 38), ('bank borrowings', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: nan , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' lease liabilities - current', 47), ('current', 43), (' current', 43), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 40), (' balance at the end of period', 38), ('bank borrowings', 29), (' loans from related party', 29), (' not later than 1 year', 26), (' bank overdraft', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none lease liability , res_fuzz_match = [(' leases', 100), (' lease liabilities', 100), (' lease liabilities - current', 69), (' not later than 1 year', 44), (' balance at the end of period', 38), (' secured long-term bank loans', 32), (' loans from related party', 32), (' utilised – bank borrowings', 31), ('current', 14), ('bank borrowings', 14), (' current', 14), (' bank overdraft', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' not later than 1 year', 53), (' lease liabilities - current', 47), ('current', 43), (' current', 43), (' loans from related party', 43), (' utilised – bank borrowings', 40), (' balance at the end of period', 39), (' bank overdraft', 37), ('bank borrowings', 36), (' secured long-term bank loans', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' lease liabilities - current', 47), ('current', 43), (' not later than 1 year', 43), (' current', 43), (' loans from related party', 43), (' balance at the end of period', 41), (' utilised – bank borrowings', 40), (' bank overdraft', 37), ('bank borrowings', 36), (' secured long-term bank loans', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [(' leases', 100), (' not later than 1 year', 63), (' lease liabilities', 55), (' lease liabilities - current', 47), (' loans from related party', 46), (' bank overdraft', 44), ('current', 43), (' current', 43), (' utilised – bank borrowings', 40), (' balance at the end of period', 40), (' secured long-term bank loans', 38), ('bank borrowings', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: nan , res_fuzz_match = [(' leases', 100), (' lease liabilities', 55), (' lease liabilities - current', 47), ('current', 43), (' current', 43), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 40), (' balance at the end of period', 38), ('bank borrowings', 29), (' loans from related party', 29), (' not later than 1 year', 26), (' bank overdraft', 24)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' secured long-term bank loans', 38), (' loans from related party', 38), (' lease liabilities - current', 38), (' lease liabilities', 38), (' balance at the end of period', 36), ('current', 29), ('bank borrowings', 29), (' leases', 29), (' current', 29), (' utilised – bank borrowings', 25), (' not later than 1 year', 25), (' bank overdraft', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [39474.0, 13803.0, 19850.0, 19624.0, 53277.0, 24944.0, 12147.0, 23015.0, 1929.0, 37091.0], 'label': ['None Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: More than five years', 'Future lease payments are due as follows: nan', 'None Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: More than five years', 'Future lease payments are due as follows: nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('other financial liabilities', 36), ('current maturities of long-term debt', 26), ('current maturities of longterm debt', 26), ('current maturities', 19), ('other current liabilities', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other financial liabilities', 21), ('other current liabilities', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('other financial liabilities', 36), ('current maturities of long-term debt', 26), ('current maturities of longterm debt', 26), ('current maturities', 19), ('other current liabilities', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other financial liabilities', 21), ('other current liabilities', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('note payable(debt)', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('note payable(debt)', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('trade and other payables', 21), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('trade and other payables', 28), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade and other payables', 22), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('outstanding dues of creditors other than', 30), ('accounts payable', 25), ('other trade payables', 20), ('trade and other payables', 19), ('trade payable', 19), ('micro enterprises and small enterprises', 18), ('outstanding dues of micro enterprises and small enterprises', 18), ('total outstanding due of other creditors other than micro and small', 18), ('other than micro and small enterprises', 18), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 11), ('small enterprises', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 29), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('other than micro and small enterprises', 22), ('micro enterprises', 17), ('outstanding dues of micro enterprises and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 10), ('micro enterprises and small enterprises', 5)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade and other payables', 22), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10), ('total outstanding due of other creditors other than micro and small', 9), ('other trade payables', 8), ('trade and other payables', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 79504.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [79504.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('trade and other payables', 21), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('trade and other payables', 28), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade and other payables', 22), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('outstanding dues of creditors other than', 30), ('accounts payable', 25), ('other trade payables', 20), ('trade and other payables', 19), ('trade payable', 19), ('micro enterprises and small enterprises', 18), ('outstanding dues of micro enterprises and small enterprises', 18), ('total outstanding due of other creditors other than micro and small', 18), ('other than micro and small enterprises', 18), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 11), ('small enterprises', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 29), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('other than micro and small enterprises', 22), ('micro enterprises', 17), ('outstanding dues of micro enterprises and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 10), ('micro enterprises and small enterprises', 5)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade and other payables', 22), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10), ('total outstanding due of other creditors other than micro and small', 9), ('other trade payables', 8), ('trade and other payables', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 100, 'value': 164686.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [164686.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none trade payables , res_fuzz_match = [(' trade payables', 100), (' trade payables', 100), (' other trade payables', 82), (' trade payables - related parties', 71), (' trade payables - other parties', 71), (' trade and other payables', 65), (' related party payables', 59), (' amounts payable to controlling entity', 53), ('trade creditors', 46), ('current', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none payables to related party , res_fuzz_match = [(' trade payables - related parties', 87), (' related party payables', 76), (' trade payables - other parties', 71), (' trade payables', 67), (' trade payables', 67), (' amounts payable to controlling entity', 57), (' other trade payables', 50), ('current', 43), ('trade creditors', 36), (' trade and other payables', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables and accruals , res_fuzz_match = [(' trade payables', 75), (' trade payables', 75), (' other trade payables', 67), (' trade and other payables', 64), (' trade payables - related parties', 51), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' related party payables', 44), ('trade creditors', 40), ('current', 31)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none bas payable , res_fuzz_match = [(' trade payables', 73), (' trade payables', 73), (' trade and other payables', 64), (' related party payables', 64), (' trade payables - related parties', 57), (' trade payables - other parties', 57), (' amounts payable to controlling entity', 57), (' other trade payables', 57), ('current', 14), ('trade creditors', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' trade and other payables', 50), (' related party payables', 38), (' trade payables', 38), (' trade payables - related parties', 38), (' trade payables - other parties', 38), (' trade payables', 38), (' amounts payable to controlling entity', 38), (' other trade payables', 38), ('current', 29), ('trade creditors', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none trade payables , res_fuzz_match = [(' trade payables', 100), (' trade payables', 100), (' other trade payables', 82), (' trade payables - related parties', 71), (' trade payables - other parties', 71), (' trade and other payables', 65), (' related party payables', 59), (' amounts payable to controlling entity', 53), ('trade creditors', 46), ('current', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none payables to related party , res_fuzz_match = [(' trade payables - related parties', 87), (' related party payables', 76), (' trade payables - other parties', 71), (' trade payables', 67), (' trade payables', 67), (' amounts payable to controlling entity', 57), (' other trade payables', 50), ('current', 43), ('trade creditors', 36), (' trade and other payables', 36)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables and accruals , res_fuzz_match = [(' trade payables', 75), (' trade payables', 75), (' other trade payables', 67), (' trade and other payables', 64), (' trade payables - related parties', 51), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' related party payables', 44), ('trade creditors', 40), ('current', 31)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none bas payable , res_fuzz_match = [(' trade payables', 73), (' trade payables', 73), (' trade and other payables', 64), (' related party payables', 64), (' trade payables - related parties', 57), (' trade payables - other parties', 57), (' amounts payable to controlling entity', 57), (' other trade payables', 57), ('current', 14), ('trade creditors', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' trade and other payables', 50), (' related party payables', 38), (' trade payables', 38), (' trade payables - related parties', 38), (' trade payables - other parties', 38), (' trade payables', 38), (' amounts payable to controlling entity', 38), (' other trade payables', 38), ('current', 29), ('trade creditors', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 5, 6], 'score': [100, 87, 100, 87], 'value': [11624.0, 91986.0, 7526.0, 17137.0], 'label': ['None Trade payables', 'None Payables to related party', 'None Trade payables', 'None Payables to related party'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables , res_fuzz_match = [(' trade and other payables', 88), (' trade payables', 78), (' trade payables', 78), (' other trade payables', 65), (' related party payables', 59), (' trade payables - other parties', 55), (' amounts payable to controlling entity', 53), (' trade payables - related parties', 47), ('trade creditors', 21), ('current', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables , res_fuzz_match = [(' trade and other payables', 88), (' trade payables', 78), (' trade payables', 78), (' other trade payables', 65), (' related party payables', 59), (' trade payables - other parties', 55), (' amounts payable to controlling entity', 53), (' trade payables - related parties', 47), ('trade creditors', 21), ('current', 14)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' amounts payable to controlling entity', 62), ('current', 29), ('trade creditors', 25), (' trade and other payables', 14), (' trade payables', 14), (' trade payables', 14), (' other trade payables', 14), (' trade payables - related parties', 13), (' trade payables - other parties', 13), (' related party payables', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [88, 88], 'value': [1035.0, 2218.0], 'label': ['None Other payables', 'None Other payables'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35), ('trade and other payables', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44), ('trade and other payables', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('other current financial liabilities', 43), ('other financial liabilities', 36), ('trade and other payables', 19), ('other current liabilities', 16), ('other liabilities', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('trade and other payables', 32), ('other current liabilities', 21), ('other financial liabilities', 21), ('other liabilities', 19), ('other current financial liabilities', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('trade and other payables', 22), ('other liabilities', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8), ('trade and other payables', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 19], 'score': 100, 'value': 79504.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 79504.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35), ('trade and other payables', 21)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 28)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44), ('trade and other payables', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('other current financial liabilities', 43), ('other financial liabilities', 36), ('trade and other payables', 19), ('other current liabilities', 16), ('other liabilities', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('trade and other payables', 32), ('other current liabilities', 21), ('other financial liabilities', 21), ('other liabilities', 19), ('other current financial liabilities', 16)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('trade and other payables', 22), ('other liabilities', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8), ('trade and other payables', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 19], 'score': 100, 'value': 164686.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 164686.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none trade payables , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none payables to related party , res_fuzz_match = [('interest accrued', 44), ('accrued expenses', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables and accruals , res_fuzz_match = [('accrued expenses', 53), ('interest accrued', 50)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none bas payable , res_fuzz_match = [('accrued expenses', 30), ('interest accrued', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none trade payables , res_fuzz_match = [('interest accrued', 36), ('accrued expenses', 27)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none payables to related party , res_fuzz_match = [('interest accrued', 44), ('accrued expenses', 25)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables and accruals , res_fuzz_match = [('accrued expenses', 53), ('interest accrued', 50)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none bas payable , res_fuzz_match = [('accrued expenses', 30), ('interest accrued', 29)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accrued expenses', 33), ('interest accrued', 17)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 55), ('tax', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 65), ('current tax liabilities', 41)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current tax liabilities', 69), ('tax', 67), (' income tax payable', 55)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('current tax liabilities', 39), ('tax', 33), (' income tax payable', 31)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50), (' income tax payable', 21), ('current tax liabilities', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 23], 'score': 100, 'value': 12015.0, 'line_item_label': ['Liabilities', 'Income tax'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 12015.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities', 100), (' income tax payable', 55), ('tax', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 65), ('current tax liabilities', 41)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current tax liabilities', 69), ('tax', 67), (' income tax payable', 55)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('current tax liabilities', 39), ('tax', 33), (' income tax payable', 31)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50), (' income tax payable', 21), ('current tax liabilities', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [17, 23], 'score': 100, 'value': 5454.0, 'line_item_label': ['Liabilities', 'Income tax'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 5454.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:08+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:08+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-06-26 11:17:08+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' other financial liabilities', 47), (' foreign exchange contract liability', 44), (' customer deposits', 36), (' employee benefits', 34), (' deferred revenue', 31), (' trade and other payables', 28), ('provisions', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' other financial liabilities', 38), (' deferred revenue', 35), ('other current liabilities', 33), (' financial liabilities', 33), (' other current liabilities', 33), (' customer deposits', 22), (' foreign exchange contract liability', 19), ('provisions', 14), (' employee benefits', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [(' financial liabilities', 69), (' foreign exchange contract liability', 65), ('other current liabilities', 57), (' other current liabilities', 57), (' other financial liabilities', 57), (' customer deposits', 28), (' employee benefits', 27), (' trade and other payables', 22), ('provisions', 19), (' deferred revenue', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 38), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [(' foreign exchange contract liability', 50), (' other financial liabilities', 36), (' financial liabilities', 33), (' deferred revenue', 30), (' customer deposits', 29), (' trade and other payables', 19), ('provisions', 17), ('other current liabilities', 16), (' other current liabilities', 16), (' employee benefits', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [(' customer deposits', 43), (' trade and other payables', 32), (' financial liabilities', 26), (' foreign exchange contract liability', 25), ('other current liabilities', 21), (' other current liabilities', 21), (' other financial liabilities', 21), (' employee benefits', 17), ('provisions', 13), (' deferred revenue', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' other financial liabilities', 34), (' deferred revenue', 30), (' financial liabilities', 28), (' foreign exchange contract liability', 26), (' trade and other payables', 22), (' customer deposits', 21), ('provisions', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' deferred revenue', 22), ('other current liabilities', 15), (' other current liabilities', 15), (' foreign exchange contract liability', 11), (' financial liabilities', 10), (' employee benefits', 10), (' customer deposits', 10), (' other financial liabilities', 8), (' trade and other payables', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 19, 24, 25], 'score': 100, 'value': 101550.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', nan, '20'], 'line_item_value': [0.0, 79504.0, 20630.0, 1416.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' other financial liabilities', 47), (' foreign exchange contract liability', 44), (' customer deposits', 36), (' employee benefits', 34), (' deferred revenue', 31), (' trade and other payables', 28), ('provisions', 20)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' other financial liabilities', 38), (' deferred revenue', 35), ('other current liabilities', 33), (' financial liabilities', 33), (' other current liabilities', 33), (' customer deposits', 22), (' foreign exchange contract liability', 19), ('provisions', 14), (' employee benefits', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [(' financial liabilities', 69), (' foreign exchange contract liability', 65), ('other current liabilities', 57), (' other current liabilities', 57), (' other financial liabilities', 57), (' customer deposits', 28), (' employee benefits', 27), (' trade and other payables', 22), ('provisions', 19), (' deferred revenue', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 38), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [(' foreign exchange contract liability', 50), (' other financial liabilities', 36), (' financial liabilities', 33), (' deferred revenue', 30), (' customer deposits', 29), (' trade and other payables', 19), ('provisions', 17), ('other current liabilities', 16), (' other current liabilities', 16), (' employee benefits', 11)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [(' customer deposits', 43), (' trade and other payables', 32), (' financial liabilities', 26), (' foreign exchange contract liability', 25), ('other current liabilities', 21), (' other current liabilities', 21), (' other financial liabilities', 21), (' employee benefits', 17), ('provisions', 13), (' deferred revenue', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' other financial liabilities', 34), (' deferred revenue', 30), (' financial liabilities', 28), (' foreign exchange contract liability', 26), (' trade and other payables', 22), (' customer deposits', 21), ('provisions', 19)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' deferred revenue', 22), ('other current liabilities', 15), (' other current liabilities', 15), (' foreign exchange contract liability', 11), (' financial liabilities', 10), (' employee benefits', 10), (' customer deposits', 10), (' other financial liabilities', 8), (' trade and other payables', 7)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 19, 24, 25], 'score': 100, 'value': 187661.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', nan, '20'], 'line_item_value': [0.0, 164686.0, 21560.0, 1415.0]}
2023-06-26 11:17:08+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:08+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none trade payables , res_fuzz_match = [(' gst payables', 70), (' share of joint venture payables', 65), (' derivative contracts - at fair value', 53), (' contract liabilites - current', 53), (' employee benefits - payroll', 53), (' loan payable to relayed party under tax funding agreement', 47), (' gst payable and accruals', 47), (' forward exchange contracts', 43), (' gst liabilities', 42), (' secured long-term bank loans', 41), (' loans from related party', 41), (' abandonment and decommissioning costs', 41), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other related parties', 36), (' gst', 33), (' make good provisions', 31), (' current - liability for annual and long service leave', 30), (' restructuring', 30), ('current', 29), (' other creditors', 29), (' other creditors', 29), (' employee benefits - current', 29), (' other creditors', 29), (' total current employee benefits', 28), (' warranty', 25), (' ultimate parent entity', 24), (' provision for associate funding', 21), (' provisions - current', 10)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none payables to related party , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 83), (' rebates', 80), (' loans from related party', 76), (' other related parties', 71), (' gst payables', 70), (' warranty', 62), (' gst payable and accruals', 59), (' ultimate parent entity', 57), (' restructuring', 50), (' share of joint venture payables', 47), (' employee benefits - payroll', 45), ('current', 43), (' employee benefits - current', 40), (' contract liabilites - current', 40), (' other', 40), ('other creditors and accruals', 39), (' current - liability for annual and long service leave', 39), (' make good provisions', 39), (' other creditors', 36), (' other creditors', 36), (' provisions - current', 36), (' other creditors', 36), (' derivative contracts - at fair value', 34), (' gst', 33), (' gst liabilities', 32), (' secured long-term bank loans', 29), (' forward exchange contracts', 29), (' abandonment and decommissioning costs', 26), (' arising from service contracts', 26), (' total current employee benefits', 24), (' provision for associate funding', 22)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none other payables and accruals , res_fuzz_match = [(' other', 100), (' gst payable and accruals', 86), ('other creditors and accruals', 72), (' gst payables', 70), (' share of joint venture payables', 52), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), (' current - liability for annual and long service leave', 45), (' abandonment and decommissioning costs', 44), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' secured long-term bank loans', 40), (' gst liabilities', 40), (' rebates', 40), (' derivative contracts - at fair value', 39), (' warranty', 38), (' employee benefits - current', 36), (' loans from related party', 33), (' gst', 33), (' ultimate parent entity', 32), (' arising from service contracts', 32), (' make good provisions', 32), ('current', 31), (' forward exchange contracts', 29), (' contract liabilites - current', 28), (' restructuring', 22), (' provisions - current', 21), (' total current employee benefits', 15)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none bas payable , res_fuzz_match = [(' gst payables', 70), (' rebates', 60), (' loan payable to relayed party under tax funding agreement', 57), (' share of joint venture payables', 57), (' other related parties', 50), (' secured long-term bank loans', 50), (' gst payable and accruals', 50), (' employee benefits - payroll', 50), (' loans from related party', 43), (' contract liabilites - current', 43), ('other creditors and accruals', 42), (' gst liabilities', 42), (' other', 40), (' derivative contracts - at fair value', 38), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' total current employee benefits', 36), (' forward exchange contracts', 32), (' abandonment and decommissioning costs', 29), (' make good provisions', 29), (' arising from service contracts', 27), (' warranty', 25), (' other creditors', 22), (' other creditors', 22), (' other creditors', 22), (' ultimate parent entity', 21), ('current', 14), (' provision for associate funding', 12), (' provisions - current', 10), (' restructuring', 10), (' gst', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' abandonment and decommissioning costs', 75), ('other creditors and accruals', 50), (' secured long-term bank loans', 50), (' employee benefits - current', 50), (' employee benefits - payroll', 50), (' total current employee benefits', 50), (' rebates', 40), (' other', 40), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), ('current', 29), (' warranty', 29), (' ultimate parent entity', 25), (' gst payables', 25), (' make good provisions', 25), (' gst liabilities', 25), (' provisions - current', 20), (' provision for associate funding', 20), (' restructuring', 12), (' gst', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:08+0530 - sLogger - DEBUG - txt_rows = none trade payables , res_fuzz_match = [(' gst payables', 70), (' share of joint venture payables', 65), (' derivative contracts - at fair value', 53), (' contract liabilites - current', 53), (' employee benefits - payroll', 53), (' loan payable to relayed party under tax funding agreement', 47), (' gst payable and accruals', 47), (' forward exchange contracts', 43), (' gst liabilities', 42), (' secured long-term bank loans', 41), (' loans from related party', 41), (' abandonment and decommissioning costs', 41), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other related parties', 36), (' gst', 33), (' make good provisions', 31), (' current - liability for annual and long service leave', 30), (' restructuring', 30), ('current', 29), (' other creditors', 29), (' other creditors', 29), (' employee benefits - current', 29), (' other creditors', 29), (' total current employee benefits', 28), (' warranty', 25), (' ultimate parent entity', 24), (' provision for associate funding', 21), (' provisions - current', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none payables to related party , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 83), (' rebates', 80), (' loans from related party', 76), (' other related parties', 71), (' gst payables', 70), (' warranty', 62), (' gst payable and accruals', 59), (' ultimate parent entity', 57), (' restructuring', 50), (' share of joint venture payables', 47), (' employee benefits - payroll', 45), ('current', 43), (' employee benefits - current', 40), (' contract liabilites - current', 40), (' other', 40), ('other creditors and accruals', 39), (' current - liability for annual and long service leave', 39), (' make good provisions', 39), (' other creditors', 36), (' other creditors', 36), (' provisions - current', 36), (' other creditors', 36), (' derivative contracts - at fair value', 34), (' gst', 33), (' gst liabilities', 32), (' secured long-term bank loans', 29), (' forward exchange contracts', 29), (' abandonment and decommissioning costs', 26), (' arising from service contracts', 26), (' total current employee benefits', 24), (' provision for associate funding', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other payables and accruals , res_fuzz_match = [(' other', 100), (' gst payable and accruals', 86), ('other creditors and accruals', 72), (' gst payables', 70), (' share of joint venture payables', 52), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), (' current - liability for annual and long service leave', 45), (' abandonment and decommissioning costs', 44), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' employee benefits - payroll', 41), (' provision for associate funding', 41), (' secured long-term bank loans', 40), (' gst liabilities', 40), (' rebates', 40), (' derivative contracts - at fair value', 39), (' warranty', 38), (' employee benefits - current', 36), (' loans from related party', 33), (' gst', 33), (' ultimate parent entity', 32), (' arising from service contracts', 32), (' make good provisions', 32), ('current', 31), (' forward exchange contracts', 29), (' contract liabilites - current', 28), (' restructuring', 22), (' provisions - current', 21), (' total current employee benefits', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none bas payable , res_fuzz_match = [(' gst payables', 70), (' rebates', 60), (' loan payable to relayed party under tax funding agreement', 57), (' share of joint venture payables', 57), (' other related parties', 50), (' secured long-term bank loans', 50), (' gst payable and accruals', 50), (' employee benefits - payroll', 50), (' loans from related party', 43), (' contract liabilites - current', 43), ('other creditors and accruals', 42), (' gst liabilities', 42), (' other', 40), (' derivative contracts - at fair value', 38), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' total current employee benefits', 36), (' forward exchange contracts', 32), (' abandonment and decommissioning costs', 29), (' make good provisions', 29), (' arising from service contracts', 27), (' warranty', 25), (' other creditors', 22), (' other creditors', 22), (' other creditors', 22), (' ultimate parent entity', 21), ('current', 14), (' provision for associate funding', 12), (' provisions - current', 10), (' restructuring', 10), (' gst', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' abandonment and decommissioning costs', 75), ('other creditors and accruals', 50), (' secured long-term bank loans', 50), (' employee benefits - current', 50), (' employee benefits - payroll', 50), (' total current employee benefits', 50), (' rebates', 40), (' other', 40), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), ('current', 29), (' warranty', 29), (' ultimate parent entity', 25), (' gst payables', 25), (' make good provisions', 25), (' gst liabilities', 25), (' provisions - current', 20), (' provision for associate funding', 20), (' restructuring', 12), (' gst', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 6, 7], 'score': [83, 100, 83, 100], 'value': [91986.0, 57125.0, 17137.0, 50564.0], 'label': ['None Payables to related party', 'None Other payables and accruals', 'None Payables to related party', 'None Other payables and accruals'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 65), (' other related parties', 55), (' employee benefits - payroll', 52), (' loan payable to relayed party under tax funding agreement', 47), (' secured long-term bank loans', 47), (' gst payable and accruals', 47), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' current - liability for annual and long service leave', 44), (' forward exchange contracts', 43), (' gst liabilities', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' loans from related party', 41), (' arising from service contracts', 40), (' rebates', 40), (' contract liabilites - current', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' employee benefits - current', 29), (' abandonment and decommissioning costs', 29), (' warranty', 29), (' total current employee benefits', 28), (' ultimate parent entity', 24), ('current', 14), (' restructuring', 11), (' provisions - current', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 65), (' other related parties', 55), (' employee benefits - payroll', 52), (' loan payable to relayed party under tax funding agreement', 47), (' secured long-term bank loans', 47), (' gst payable and accruals', 47), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' current - liability for annual and long service leave', 44), (' forward exchange contracts', 43), (' gst liabilities', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' loans from related party', 41), (' arising from service contracts', 40), (' rebates', 40), (' contract liabilites - current', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' employee benefits - current', 29), (' abandonment and decommissioning costs', 29), (' warranty', 29), (' total current employee benefits', 28), (' ultimate parent entity', 24), ('current', 14), (' restructuring', 11), (' provisions - current', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [1035.0, 2218.0], 'label': ['None Other payables', 'None Other payables'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none warranties , res_fuzz_match = [(' warranty', 100), (' rebates', 60), ('current', 57), (' employee benefits - current', 54), (' other related parties', 52), (' loans from related party', 52), (' provisions - current', 48), (' arising from service contracts', 48), (' forward exchange contracts', 48), (' ultimate parent entity', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' secured long-term bank loans', 46), (' contract liabilites - current', 46), (' abandonment and decommissioning costs', 46), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' other creditors', 38), (' employee benefits - payroll', 38), (' other creditors', 38), (' gst', 33), (' make good provisions', 32), (' total current employee benefits', 32), (' gst payable and accruals', 31), (' current - liability for annual and long service leave', 31), (' share of joint venture payables', 31), (' gst liabilities', 29), (' restructuring', 27), (' gst payables', 14), (' provision for associate funding', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': [100], 'value': [1415.0], 'label': ['None Warranties'], 'year': [], 'colname_found': ['rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease make good , res_fuzz_match = [(' make good provisions', 72), (' current - liability for annual and long service leave', 42), (' other related parties', 41), (' rebates', 40), (' other', 40), (' provision for associate funding', 36), (' gst', 33), (' secured long-term bank loans', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' gst liabilities', 30), (' other creditors', 29), (' other creditors', 29), (' provisions - current', 29), (' other creditors', 29), (' loans from related party', 27), (' forward exchange contracts', 27), (' loan payable to relayed party under tax funding agreement', 26), (' employee benefits - current', 26), (' employee benefits - payroll', 26), (' warranty', 25), (' derivative contracts - at fair value', 22), (' arising from service contracts', 22), (' total current employee benefits', 22), ('other creditors and accruals', 21), (' gst payable and accruals', 21), (' share of joint venture payables', 21), (' restructuring', 20), (' ultimate parent entity', 18), ('current', 14), (' gst payables', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none warranties , res_fuzz_match = [(' warranty', 100), (' rebates', 60), ('current', 57), (' employee benefits - current', 54), (' other related parties', 52), (' loans from related party', 52), (' provisions - current', 48), (' arising from service contracts', 48), (' forward exchange contracts', 48), (' ultimate parent entity', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' secured long-term bank loans', 46), (' contract liabilites - current', 46), (' abandonment and decommissioning costs', 46), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' other creditors', 38), (' employee benefits - payroll', 38), (' other creditors', 38), (' gst', 33), (' make good provisions', 32), (' total current employee benefits', 32), (' gst payable and accruals', 31), (' current - liability for annual and long service leave', 31), (' share of joint venture payables', 31), (' gst liabilities', 29), (' restructuring', 27), (' gst payables', 14), (' provision for associate funding', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none income tax , res_fuzz_match = [(' abandonment and decommissioning costs', 50), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 40), (' other', 40), (' total current employee benefits', 38), (' other related parties', 36), (' derivative contracts - at fair value', 36), (' employee benefits - current', 36), (' contract liabilites - current', 36), ('other creditors and accruals', 33), (' gst payable and accruals', 33), (' gst', 33), (' provisions - current', 30), ('current', 29), (' ultimate parent entity', 29), (' current - liability for annual and long service leave', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 29), (' gst payables', 27), (' gst liabilities', 27), (' rebates', 20), (' restructuring', 20), (' warranty', 18), (' other creditors', 15), (' other creditors', 15), (' other creditors', 15), (' provision for associate funding', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' abandonment and decommissioning costs', 75), ('other creditors and accruals', 50), (' secured long-term bank loans', 50), (' employee benefits - current', 50), (' employee benefits - payroll', 50), (' total current employee benefits', 50), (' rebates', 40), (' other', 40), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), ('current', 29), (' warranty', 29), (' ultimate parent entity', 25), (' gst payables', 25), (' make good provisions', 25), (' gst liabilities', 25), (' provisions - current', 20), (' provision for associate funding', 20), (' restructuring', 12), (' gst', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease make good , res_fuzz_match = [(' make good provisions', 72), (' current - liability for annual and long service leave', 42), (' other related parties', 41), (' rebates', 40), (' other', 40), (' provision for associate funding', 36), (' gst', 33), (' secured long-term bank loans', 32), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 32), (' gst liabilities', 30), (' other creditors', 29), (' other creditors', 29), (' provisions - current', 29), (' other creditors', 29), (' loans from related party', 27), (' forward exchange contracts', 27), (' loan payable to relayed party under tax funding agreement', 26), (' employee benefits - current', 26), (' employee benefits - payroll', 26), (' warranty', 25), (' derivative contracts - at fair value', 22), (' arising from service contracts', 22), (' total current employee benefits', 22), ('other creditors and accruals', 21), (' gst payable and accruals', 21), (' share of joint venture payables', 21), (' restructuring', 20), (' ultimate parent entity', 18), ('current', 14), (' gst payables', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none warranties , res_fuzz_match = [(' warranty', 100), (' rebates', 60), ('current', 57), (' employee benefits - current', 54), (' other related parties', 52), (' loans from related party', 52), (' provisions - current', 48), (' arising from service contracts', 48), (' forward exchange contracts', 48), (' ultimate parent entity', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' secured long-term bank loans', 46), (' contract liabilites - current', 46), (' abandonment and decommissioning costs', 46), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' other creditors', 38), (' employee benefits - payroll', 38), (' other creditors', 38), (' gst', 33), (' make good provisions', 32), (' total current employee benefits', 32), (' gst payable and accruals', 31), (' current - liability for annual and long service leave', 31), (' share of joint venture payables', 31), (' gst liabilities', 29), (' restructuring', 27), (' gst payables', 14), (' provision for associate funding', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none income tax , res_fuzz_match = [(' abandonment and decommissioning costs', 50), (' loan payable to relayed party under tax funding agreement', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' share of joint venture payables', 43), (' forward exchange contracts', 40), (' other', 40), (' total current employee benefits', 38), (' other related parties', 36), (' derivative contracts - at fair value', 36), (' employee benefits - current', 36), (' contract liabilites - current', 36), ('other creditors and accruals', 33), (' gst payable and accruals', 33), (' gst', 33), (' provisions - current', 30), ('current', 29), (' ultimate parent entity', 29), (' current - liability for annual and long service leave', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' make good provisions', 29), (' gst payables', 27), (' gst liabilities', 27), (' rebates', 20), (' restructuring', 20), (' warranty', 18), (' other creditors', 15), (' other creditors', 15), (' other creditors', 15), (' provision for associate funding', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' abandonment and decommissioning costs', 75), ('other creditors and accruals', 50), (' secured long-term bank loans', 50), (' employee benefits - current', 50), (' employee benefits - payroll', 50), (' total current employee benefits', 50), (' rebates', 40), (' other', 40), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), ('current', 29), (' warranty', 29), (' ultimate parent entity', 25), (' gst payables', 25), (' make good provisions', 25), (' gst liabilities', 25), (' provisions - current', 20), (' provision for associate funding', 20), (' restructuring', 12), (' gst', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' abandonment and decommissioning costs', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' gst liabilities', 38), (' forward exchange contracts', 38), (' gst', 33), ('current', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' employee benefits - current', 27), (' provisions - current', 27), (' total current employee benefits', 27), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' share of joint venture payables', 25), (' other creditors', 25), (' warranty', 25), (' other', 20), (' restructuring', 17), (' gst payables', 14), (' other related parties', 13), (' rebates', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': [100, 100], 'value': [449.0, 253.0], 'label': ['None Warranties', 'None Warranties'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('current liabilities', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments - forward contracts , res_fuzz_match = [('current liabilities', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 35), (' borrowings', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), (' lease liabilities', 48), (' lease liability', 48), ('interest bearing loans and borrowings', 45), (' borrowings', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 29), (' borrowings', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 40), (' lease liabilities', 36), (' lease liability', 36), (' loans and borrowings', 30), (' borrowings', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 40), (' loans and borrowings', 40), (' borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 24944.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['22'], 'line_item_value': [24944.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 35), (' borrowings', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), (' lease liabilities', 48), (' lease liability', 48), ('interest bearing loans and borrowings', 45), (' borrowings', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [(' lease liabilities', 73), (' lease liability', 73), ('interest bearing loans and borrowings', 44), (' loans and borrowings', 29), (' borrowings', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 40), (' lease liabilities', 36), (' lease liability', 36), (' loans and borrowings', 30), (' borrowings', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 40), (' loans and borrowings', 40), (' borrowings', 33), (' lease liabilities', 17), (' lease liability', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 39474.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['22'], 'line_item_value': [39474.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease liability , res_fuzz_match = [('leases', 100), (' lease liabilities', 100), (' lease liability', 100), (' lease liabilities - non-current', 69), (' non current', 45), (' bank loan', 44), ('not later than 5 years', 44), (' secured finance debt', 32), ('later than 1 year', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [('leases', 100), (' lease liabilities', 55), (' lease liability', 55), ('later than 1 year', 53), ('not later than 5 years', 53), (' non current', 45), (' lease liabilities - non-current', 42), (' secured finance debt', 35), (' bank loan', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [('leases', 100), (' lease liabilities', 55), (' lease liability', 55), ('later than 1 year', 47), ('not later than 5 years', 43), (' lease liabilities - non-current', 42), (' secured finance debt', 36), (' non current', 36), (' bank loan', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [('leases', 100), ('later than 1 year', 67), ('not later than 5 years', 63), (' lease liabilities', 55), (' lease liability', 55), (' lease liabilities - non-current', 42), (' non current', 36), (' bank loan', 33), (' secured finance debt', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: nan , res_fuzz_match = [('leases', 100), (' lease liabilities', 55), (' lease liability', 55), (' secured finance debt', 42), (' lease liabilities - non-current', 42), (' non current', 36), (' bank loan', 33), ('later than 1 year', 33), ('not later than 5 years', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease liability , res_fuzz_match = [('leases', 100), (' lease liabilities', 100), (' lease liability', 100), (' lease liabilities - non-current', 69), (' non current', 45), (' bank loan', 44), ('not later than 5 years', 44), (' secured finance debt', 32), ('later than 1 year', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [('leases', 100), (' lease liabilities', 55), (' lease liability', 55), ('later than 1 year', 53), ('not later than 5 years', 53), (' non current', 45), (' lease liabilities - non-current', 42), (' secured finance debt', 35), (' bank loan', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [('leases', 100), (' lease liabilities', 55), (' lease liability', 55), ('later than 1 year', 47), ('not later than 5 years', 43), (' lease liabilities - non-current', 42), (' secured finance debt', 36), (' non current', 36), (' bank loan', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [('leases', 100), ('later than 1 year', 67), ('not later than 5 years', 63), (' lease liabilities', 55), (' lease liability', 55), (' lease liabilities - non-current', 42), (' non current', 36), (' bank loan', 33), (' secured finance debt', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: nan , res_fuzz_match = [('leases', 100), (' lease liabilities', 55), (' lease liability', 55), (' secured finance debt', 42), (' lease liabilities - non-current', 42), (' non current', 36), (' bank loan', 33), ('later than 1 year', 33), ('not later than 5 years', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' lease liabilities', 38), (' lease liability', 38), (' bank loan', 36), ('leases', 29), (' lease liabilities - non-current', 27), (' secured finance debt', 25), (' non current', 25), ('not later than 5 years', 25), ('later than 1 year', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [39474.0, 13803.0, 19850.0, 19624.0, 53277.0, 24944.0, 12147.0, 23015.0, 1929.0, 37091.0], 'label': ['None Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: More than five years', 'Future lease payments are due as follows: nan', 'None Lease liability', 'Future lease payments are due as follows: Within one year', 'Future lease payments are due as follows: One to five years', 'Future lease payments are due as follows: More than five years', 'Future lease payments are due as follows: nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 39), ('(bond)', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 21)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 26), ('(bond)', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 39), ('(bond)', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 21)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 26), ('(bond)', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48), ('interest bearing loans and borrowings', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 39), ('lease liabilities', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59), ('interest bearing loans and borrowings', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('lease liabilities', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('lease liabilities', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30), ('interest bearing loans and borrowings', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 24944.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['22'], 'line_item_value': [24944.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48), ('interest bearing loans and borrowings', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 39), ('lease liabilities', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59), ('interest bearing loans and borrowings', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('lease liabilities', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('lease liabilities', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30), ('interest bearing loans and borrowings', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 39474.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['22'], 'line_item_value': [39474.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 48), ('interest bearing loans and borrowings', 45)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 73), ('interest bearing loans and borrowings', 44)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 40), ('lease liabilities', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 40), ('lease liabilities', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 24944.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['22'], 'line_item_value': [24944.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 48), ('interest bearing loans and borrowings', 45)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 73), ('interest bearing loans and borrowings', 44)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 40), ('lease liabilities', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 40), ('lease liabilities', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': 39474.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['22'], 'line_item_value': [39474.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease liability , res_fuzz_match = [('deferred tax liabilities', 69), ('total deferred tax (assets) / liabilities', 62)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [('deferred tax liabilities', 38), ('total deferred tax (assets) / liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [('deferred tax liabilities', 38), ('total deferred tax (assets) / liabilities', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [('deferred tax liabilities', 44), ('total deferred tax (assets) / liabilities', 39)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: nan , res_fuzz_match = [('deferred tax liabilities', 38), ('total deferred tax (assets) / liabilities', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease liability , res_fuzz_match = [('deferred tax liabilities', 69), ('total deferred tax (assets) / liabilities', 62)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: within one year , res_fuzz_match = [('deferred tax liabilities', 38), ('total deferred tax (assets) / liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: one to five years , res_fuzz_match = [('deferred tax liabilities', 38), ('total deferred tax (assets) / liabilities', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: more than five years , res_fuzz_match = [('deferred tax liabilities', 44), ('total deferred tax (assets) / liabilities', 39)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = future lease payments are due as follows: nan , res_fuzz_match = [('deferred tax liabilities', 38), ('total deferred tax (assets) / liabilities', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('common stock', 23), ('contributed equity', 20), ('equity share capital', 19), (' issued capital', 17), ('share capital', 16), (' share capital', 16), ('perpetual equity instrument', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('share capital', 30), (' share capital', 30), ('perpetual equity instrument', 21), ('contributed equity', 21), ('equity share capital', 20), (' issued capital', 19), ('common stock', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' issued capital', 29), ('share capital', 27), (' share capital', 27), ('contributed equity', 22), ('equity share capital', 21), ('perpetual equity instrument', 17), ('common stock', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('share capital', 30), (' share capital', 30), ('equity share capital', 24), (' issued capital', 23), ('perpetual equity instrument', 20), ('common stock', 14), ('contributed equity', 6)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('contributed equity', 32), ('share capital', 31), (' share capital', 31), ('equity share capital', 30), ('perpetual equity instrument', 30), (' issued capital', 24), ('common stock', 7)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' issued capital', 38), ('share capital', 35), (' share capital', 35), ('equity share capital', 25), ('common stock', 22), ('contributed equity', 18), ('perpetual equity instrument', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('share capital', 40), (' share capital', 40), ('equity share capital', 37), ('contributed equity', 32), (' issued capital', 32), ('perpetual equity instrument', 29), ('common stock', 19)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('common stock', 23), ('contributed equity', 20), ('equity share capital', 19), (' issued capital', 17), ('share capital', 16), (' share capital', 16), ('perpetual equity instrument', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('share capital', 30), (' share capital', 30), ('perpetual equity instrument', 21), ('contributed equity', 21), ('equity share capital', 20), (' issued capital', 19), ('common stock', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' issued capital', 29), ('share capital', 27), (' share capital', 27), ('contributed equity', 22), ('equity share capital', 21), ('perpetual equity instrument', 17), ('common stock', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('share capital', 30), (' share capital', 30), ('equity share capital', 24), (' issued capital', 23), ('perpetual equity instrument', 20), ('common stock', 14), ('contributed equity', 6)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('contributed equity', 32), ('share capital', 31), (' share capital', 31), ('equity share capital', 30), ('perpetual equity instrument', 30), (' issued capital', 24), ('common stock', 7)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' issued capital', 38), ('share capital', 35), (' share capital', 35), ('equity share capital', 25), ('common stock', 22), ('contributed equity', 18), ('perpetual equity instrument', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('share capital', 40), (' share capital', 40), ('equity share capital', 37), ('contributed equity', 32), (' issued capital', 32), ('perpetual equity instrument', 29), ('common stock', 19)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('share capital', 24), ('equity share capital', 17), ('common stock', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('share capital', 24), ('equity share capital', 17), ('common stock', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('retained earnings', 67), ('other equity', 24), ('reserves surplus', 15), (' accumulated losses', 8)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('retained earnings', 67), ('other equity', 24), ('reserves surplus', 15), (' accumulated losses', 8)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves', 'reserves']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other reserves', 'reserves'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('reserves', 17), ('other reserves', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27), ('reserves', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves', 100), ('other reserves', 67)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40), ('reserves', 21)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [38], 'score': 100, 'value': -6189.0, 'line_item_label': ['Reserves'], 'note_numbers': ['26'], 'line_item_value': [-6189.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['other reserves', 'reserves'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('reserves', 17), ('other reserves', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27), ('reserves', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves', 100), ('other reserves', 67)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40), ('reserves', 21)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [38], 'score': 100, 'value': -6817.0, 'line_item_label': ['Reserves'], 'note_numbers': ['26'], 'line_item_value': [-6817.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 27543.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [27543.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('cost', 100), ('gross', 80)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('cost', 100), ('gross', 80)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('cost', 75), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 6, 9, 12, 14, 17, 20, 23, 26], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [33573.0, 3687.0, 39604.0, 17069.0, 3211.0, 32454.0, 0.0, 39131.0, 19696.0, 631.0], 'label': ['None Leasehold improvements - at cost', 'None Motor vehicles at cost', 'None Office equipment - at cost', 'None Rental assets - at cost', 'None Construction in progress - at cost', 'None Leasehold improvements - at cost', 'None Motor vehicles at cost', 'None Office equipment - at cost', 'None Rental assets - at cost', 'None Construction in progress - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 35), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 40), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none leasehold improvements - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none motor vehicles at cost , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 35), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none office equipment - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none rental assets - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 36)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none construction in progress - at cost , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 40), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [('net value', 57), ('depreciatio', 20), ('accumulated depreciation', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 29), ('net value', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 7, 10, 15, 18, 21, 24], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-20615.0, -2616.0, -33685.0, -12685.0, -18902.0, 0.0, -31727.0, -13642.0], 'label': ['None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation', 'None Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('cost', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('cost', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 33), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('cost', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('cost', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('cost', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80), ('cost', 75)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('cost', 57), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('gross', 40), ('cost', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [32, 33, 34, 35, 36, 37, 38, 39], 'score': [80, 80, 80, 80, 80, 80, 80, 80], 'value': [631.0, 2560.0, 0.0, 0.0, 20.0, 0.0, 0.0, 3211.0], 'label': ["Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('net value', 36), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('net value', 38), ('depreciatio', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42), ('net value', 38), ('accumulated depreciation', 28)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('net value', 36), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('net value', 38), ('depreciatio', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net value', 40), ('accumulated depreciation', 35), ('depreciatio', 24)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('net value', 36), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('net value', 38), ('depreciatio', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('net value', 29), ('depreciatio', 24), ('accumulated depreciation', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('net value', 36), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('net value', 38), ('depreciatio', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('net value', 36), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('net value', 38), ('depreciatio', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 36), ('depreciatio', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 2021 balance at 1 january 2022 , res_fuzz_match = [('net value', 62), ('accumulated depreciation', 36), ('depreciatio', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 21), ('depreciatio', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business combinations (note 34) , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 30), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business disposals , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business foreign exchange differences , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business write off of assets , res_fuzz_match = [('net value', 36), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 60), ('net value', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = additions through business 2022 balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 42), ('net value', 38), ('depreciatio', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 50), ('accumulated depreciation', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('trade and other receivables', 48), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('account receivables', 43), ('trade and other receivables', 43), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 22), ('unbilled', 20), ('billed', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('trade and other receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('trade and other receivables', 100), ('government subsidies receivable', 60), ('account receivables', 40), ('trade receivables', 40), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 194891.0, 'line_item_label': ['Trade and other receivables', 'Other'], 'note_numbers': ['10', '12'], 'line_item_value': [186308.0, 8583.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('trade and other receivables', 48), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('account receivables', 43), ('trade and other receivables', 43), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 22), ('unbilled', 20), ('billed', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('trade and other receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('trade and other receivables', 100), ('government subsidies receivable', 60), ('account receivables', 40), ('trade receivables', 40), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 6], 'score': 100, 'value': 272052.0, 'line_item_label': ['Trade and other receivables', 'Other'], 'note_numbers': ['10', '12'], 'line_item_value': [263120.0, 8932.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: within one year , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' share of joint venture receivables', 48), (' net trade debtors', 31), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: one to five years , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' share of joint venture receivables', 48), (' net trade debtors', 44), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: more than five years , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' net trade debtors', 50), (' share of joint venture receivables', 48), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: total commitment , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' net trade debtors', 50), (' share of joint venture receivables', 48), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: less: future finance charges , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' share of joint venture receivables', 48), (' net trade debtors', 44), ('current', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: net commitment recognised as assets , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' net trade debtors', 50), (' share of joint venture receivables', 48), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = representing: lease receivable - current , res_fuzz_match = [('current', 100), ('trade receivables', 67), (' related party receivables', 61), (' share of joint venture receivables', 44), (' net trade debtors', 22), (' other debtors', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = representing: finance lease receivable - non-current (note 13) , res_fuzz_match = [('current', 71), ('trade receivables', 67), (' share of joint venture receivables', 56), (' related party receivables', 50), (' other debtors', 40), (' net trade debtors', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = representing: nan , res_fuzz_match = [('current', 43), (' related party receivables', 40), (' share of joint venture receivables', 40), ('trade receivables', 38), (' other debtors', 33), (' net trade debtors', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: within one year , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' share of joint venture receivables', 48), (' net trade debtors', 31), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: one to five years , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' share of joint venture receivables', 48), (' net trade debtors', 44), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: more than five years , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' net trade debtors', 50), (' share of joint venture receivables', 48), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: total commitment , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' net trade debtors', 50), (' share of joint venture receivables', 48), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: less: future finance charges , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' share of joint venture receivables', 48), (' net trade debtors', 44), ('current', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = committed at the reporting date and recognised as assets, receivable: net commitment recognised as assets , res_fuzz_match = [('trade receivables', 67), (' other debtors', 58), (' related party receivables', 50), (' net trade debtors', 50), (' share of joint venture receivables', 48), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = representing: lease receivable - current , res_fuzz_match = [('current', 100), ('trade receivables', 67), (' related party receivables', 61), (' share of joint venture receivables', 44), (' net trade debtors', 22), (' other debtors', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = representing: finance lease receivable - non-current (note 13) , res_fuzz_match = [('current', 71), ('trade receivables', 67), (' share of joint venture receivables', 56), (' related party receivables', 50), (' other debtors', 40), (' net trade debtors', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = representing: nan , res_fuzz_match = [('current', 43), (' related party receivables', 40), (' share of joint venture receivables', 40), ('trade receivables', 38), (' other debtors', 33), (' net trade debtors', 30)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 15], 'score': [100, 100], 'value': [86029.0, 91600.0], 'label': ['Representing: Lease receivable - current', 'Representing: Lease receivable - current'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none trade receivables , res_fuzz_match = [('trade receivables', 100), (' share of joint venture receivables', 65), (' net trade debtors', 65), (' related party receivables', 59), (' other debtors', 50), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), ('trade receivables', 42), (' other debtors', 42), (' net trade debtors', 39), (' related party receivables', 29), (' share of joint venture receivables', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease receivables , res_fuzz_match = [('trade receivables', 70), (' related party receivables', 56), (' share of joint venture receivables', 56), (' net trade debtors', 40), (' other debtors', 33), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), ('trade receivables', 42), (' other debtors', 42), (' net trade debtors', 39), (' related party receivables', 29), (' share of joint venture receivables', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none receivable from related party , res_fuzz_match = [(' related party receivables', 76), ('trade receivables', 67), (' net trade debtors', 50), ('current', 43), (' other debtors', 33), (' share of joint venture receivables', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [('trade receivables', 78), (' share of joint venture receivables', 65), (' related party receivables', 59), (' other debtors', 58), (' net trade debtors', 45), ('current', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none loans receivable (note 32) , res_fuzz_match = [('trade receivables', 67), (' related party receivables', 56), (' share of joint venture receivables', 52), ('current', 43), (' other debtors', 40), (' net trade debtors', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none trade receivables , res_fuzz_match = [('trade receivables', 100), (' share of joint venture receivables', 65), (' net trade debtors', 65), (' related party receivables', 59), (' other debtors', 50), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), ('trade receivables', 42), (' other debtors', 42), (' net trade debtors', 39), (' related party receivables', 29), (' share of joint venture receivables', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none lease receivables , res_fuzz_match = [('trade receivables', 70), (' related party receivables', 56), (' share of joint venture receivables', 56), (' net trade debtors', 40), (' other debtors', 33), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none less: allowance for expected credit losses , res_fuzz_match = [('current', 57), ('trade receivables', 42), (' other debtors', 42), (' net trade debtors', 39), (' related party receivables', 29), (' share of joint venture receivables', 26)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none receivable from related party , res_fuzz_match = [(' related party receivables', 76), ('trade receivables', 67), (' net trade debtors', 50), ('current', 43), (' other debtors', 33), (' share of joint venture receivables', 32)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [('trade receivables', 78), (' share of joint venture receivables', 65), (' related party receivables', 59), (' other debtors', 58), (' net trade debtors', 45), ('current', 43)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none loans receivable (note 32) , res_fuzz_match = [('trade receivables', 67), (' related party receivables', 56), (' share of joint venture receivables', 52), ('current', 43), (' other debtors', 40), (' net trade debtors', 38)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 10], 'score': [100, 100], 'value': [118961.0, 97921.0], 'label': ['None Trade receivables', 'None Trade receivables'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 109942 , res_fuzz_match = [(' other debtors', 50), (' net trade debtors', 50), ('current', 33), ('trade receivables', 25), (' related party receivables', 25), (' share of joint venture receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none (2,584) , res_fuzz_match = [(' other debtors', 50), (' net trade debtors', 50), ('current', 33), ('trade receivables', 25), (' related party receivables', 25), (' share of joint venture receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none 107358 , res_fuzz_match = [(' other debtors', 50), (' net trade debtors', 50), ('current', 33), ('trade receivables', 25), (' related party receivables', 25), (' share of joint venture receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('trade receivables', 0), (' related party receivables', 0), (' other debtors', 0), (' share of joint venture receivables', 0), (' net trade debtors', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' net trade debtors', 45), ('trade receivables', 36), (' related party receivables', 36), (' other debtors', 36), (' share of joint venture receivables', 36), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none security deposits , res_fuzz_match = [('current', 57), (' other debtors', 50), (' net trade debtors', 50), (' share of joint venture receivables', 40), ('trade receivables', 36), (' related party receivables', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other deposits , res_fuzz_match = [(' other debtors', 75), (' net trade debtors', 50), (' share of joint venture receivables', 44), ('trade receivables', 42), ('current', 29), (' related party receivables', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other current assets , res_fuzz_match = [('current', 100), (' other debtors', 58), (' share of joint venture receivables', 44), (' related party receivables', 43), ('trade receivables', 35), (' net trade debtors', 31)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' net trade debtors', 45), ('trade receivables', 36), (' related party receivables', 36), (' other debtors', 36), (' share of joint venture receivables', 36), ('current', 29)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none security deposits , res_fuzz_match = [('current', 57), (' other debtors', 50), (' net trade debtors', 50), (' share of joint venture receivables', 40), ('trade receivables', 36), (' related party receivables', 35)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other deposits , res_fuzz_match = [(' other debtors', 75), (' net trade debtors', 50), (' share of joint venture receivables', 44), ('trade receivables', 42), ('current', 29), (' related party receivables', 22)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none other current assets , res_fuzz_match = [('current', 100), (' other debtors', 58), (' share of joint venture receivables', 44), (' related party receivables', 43), ('trade receivables', 35), (' net trade debtors', 31)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = none nan , res_fuzz_match = [(' net trade debtors', 50), (' related party receivables', 38), (' other debtors', 38), (' share of joint venture receivables', 38), ('current', 29), ('trade receivables', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('trade receivables', 33), (' related party receivables', 33), (' share of joint venture receivables', 33), ('current', 29), (' other debtors', 25), (' net trade debtors', 18)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 8], 'score': [100, 100], 'value': [1097.0, 2231.0], 'label': ['None Other current assets', 'None Other current assets'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-06-26 11:17:09+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-06-26 11:17:09+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('sale of products', 22), ('net sales', 14), (' Sale of coal', 13), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('revenue from operations', 70), (' Sales revenue', 69), ('sale of products', 55), ('revenue from contracts with customers', 45), ('Revenue from contract with customers', 45), ('from trading business', 44), (' Revenue', 44), ('net sales', 41), (' Sale of coal', 40), ('transmission and distribution business', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('revenue from operations', 68), (' Sales revenue', 50), ('revenue from contracts with customers', 46), ('Revenue from contract with customers', 46), ('from trading business', 40), (' Revenue', 39), ('sale of products', 38), ('net sales', 30), (' Sale of coal', 24), ('transmission and distribution business', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('from trading business', 44), ('revenue from operations', 38), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 36), (' Sale of coal', 33), (' Sales revenue', 31), ('net sales', 28), ('transmission and distribution business', 16), (' Revenue', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal', 78), ('net sales', 71), ('sale of products', 67), (' Sales revenue', 50), ('from trading business', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22), (' Revenue', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), (' Sale of coal', 19), (' Sales revenue', 17), ('transmission and distribution business', 15), (' Revenue', 11), ('net sales', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('net sales', 21), ('transmission and distribution business', 21), (' Revenue', 12), ('sale of products', 9), (' Sales revenue', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('revenue from operations', 32), (' Sales revenue', 28), ('net sales', 20), (' Revenue', 20), (' Sale of coal', 19), ('sale of products', 18), ('transmission and distribution business', 15), ('from trading business', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue', 50), (' Sales revenue', 47), ('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('Revenue from contract with customers', 16), (' Sale of coal', 13), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), (' Sales revenue', 37), ('sale of products', 36), (' Revenue', 36), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('net sales', 25), ('from trading business', 19), (' Sale of coal', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('transmission and distribution business', 38), (' Sales revenue', 34), ('from trading business', 31), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('net sales', 25), ('sale of products', 22), ('revenue from operations', 20), (' Revenue', 20), (' Sale of coal', 6)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue', 44), (' Sales revenue', 35), ('sale of products', 25), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('Revenue from contract with customers', 14), ('transmission and distribution business', 10), (' Sale of coal', 10), ('from trading business', 7)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 41), (' Sales revenue', 37), (' Revenue', 36), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('from trading business', 26), ('net sales', 25), (' Sale of coal', 24), ('sale of products', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('revenue from operations', 48), ('sale of products', 32), (' Revenue', 32), ('from trading business', 29), (' Sales revenue', 25), ('revenue from contracts with customers', 22), ('Revenue from contract with customers', 22), ('net sales', 19), (' Sale of coal', 18), ('transmission and distribution business', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), (' Revenue', 33), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('from trading business', 22), ('net sales', 20), (' Sale of coal', 19), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), (' Sale of coal', 30), ('revenue from contracts with customers', 23), ('Revenue from contract with customers', 23), (' Sales revenue', 18), ('revenue from operations', 15), (' Revenue', 12), ('transmission and distribution business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 36), ('transmission and distribution business', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('sale of products', 29), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26), (' Revenue', 23), ('net sales', 22), (' Sale of coal', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), (' Sales revenue', 37), ('sale of products', 29), ('transmission and distribution business', 27), (' Revenue', 27), ('net sales', 25), (' Sale of coal', 24), ('revenue from contracts with customers', 21), ('Revenue from contract with customers', 21), ('revenue from operations', 19)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('revenue from operations', 31), ('transmission and distribution business', 29), ('from trading business', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), ('sale of products', 19), (' Sales revenue', 19), ('net sales', 17), (' Sale of coal', 14), (' Revenue', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 36), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26), ('from trading business', 20), ('net sales', 19), (' Sale of coal', 19), ('sale of products', 18), (' Sales revenue', 18), ('revenue from operations', 16), (' Revenue', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), (' Sales revenue', 37), ('revenue from operations', 33), ('from trading business', 33), (' Sale of coal', 28), ('sale of products', 26), (' Revenue', 24), ('transmission and distribution business', 22), ('net sales', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), ('revenue from operations', 22), ('net sales', 21), (' Sale of coal', 21), ('from trading business', 19), (' Revenue', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('from trading business', 26), (' Sales revenue', 24), ('revenue from contracts with customers', 23), ('Revenue from contract with customers', 23), ('net sales', 21), (' Sale of coal', 21), ('sale of products', 20), ('revenue from operations', 15), ('transmission and distribution business', 15), (' Revenue', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('transmission and distribution business', 31), ('sale of products', 25), ('revenue from operations', 23), (' Sales revenue', 22), ('from trading business', 20), ('net sales', 19), (' Sale of coal', 19), (' Revenue', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('from trading business', 41), (' Sales revenue', 40), ('transmission and distribution business', 35), ('net sales', 31), (' Sale of coal', 30), ('sale of products', 28), (' Revenue', 27), ('revenue from operations', 25), ('revenue from contracts with customers', 25), ('Revenue from contract with customers', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('revenue from operations', 32), ('from trading business', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 28), ('sale of products', 27), ('transmission and distribution business', 27), ('net sales', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('from trading business', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), ('transmission and distribution business', 27), ('revenue from operations', 26), ('sale of products', 25), (' Sales revenue', 23), ('net sales', 21), (' Sale of coal', 17), (' Revenue', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), ('from trading business', 22), ('net sales', 21), (' Sale of coal', 21), ('sale of products', 20), (' Sales revenue', 20), ('revenue from operations', 18), (' Revenue', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Revenue'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('sale of products', 22), ('net sales', 14), (' Sale of coal', 13), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('revenue from operations', 70), (' Sales revenue', 69), ('sale of products', 55), ('revenue from contracts with customers', 45), ('Revenue from contract with customers', 45), ('from trading business', 44), (' Revenue', 44), ('net sales', 41), (' Sale of coal', 40), ('transmission and distribution business', 20)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('revenue from operations', 68), (' Sales revenue', 50), ('revenue from contracts with customers', 46), ('Revenue from contract with customers', 46), ('from trading business', 40), (' Revenue', 39), ('sale of products', 38), ('net sales', 30), (' Sale of coal', 24), ('transmission and distribution business', 23)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('from trading business', 44), ('revenue from operations', 38), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 36), (' Sale of coal', 33), (' Sales revenue', 31), ('net sales', 28), ('transmission and distribution business', 16), (' Revenue', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal', 78), ('net sales', 71), ('sale of products', 67), (' Sales revenue', 50), ('from trading business', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22), (' Revenue', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), (' Sale of coal', 19), (' Sales revenue', 17), ('transmission and distribution business', 15), (' Revenue', 11), ('net sales', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 33), ('Revenue from contract with customers', 33), ('net sales', 21), ('transmission and distribution business', 21), (' Revenue', 12), ('sale of products', 9), (' Sales revenue', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('revenue from operations', 32), (' Sales revenue', 28), ('net sales', 20), (' Revenue', 20), (' Sale of coal', 19), ('sale of products', 18), ('transmission and distribution business', 15), ('from trading business', 9)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue', 50), (' Sales revenue', 47), ('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('Revenue from contract with customers', 16), (' Sale of coal', 13), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), (' Sales revenue', 37), ('sale of products', 36), (' Revenue', 36), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('net sales', 25), ('from trading business', 19), (' Sale of coal', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('transmission and distribution business', 38), (' Sales revenue', 34), ('from trading business', 31), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('net sales', 25), ('sale of products', 22), ('revenue from operations', 20), (' Revenue', 20), (' Sale of coal', 6)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue', 44), (' Sales revenue', 35), ('sale of products', 25), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('Revenue from contract with customers', 14), ('transmission and distribution business', 10), (' Sale of coal', 10), ('from trading business', 7)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 41), (' Sales revenue', 37), (' Revenue', 36), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), ('from trading business', 26), ('net sales', 25), (' Sale of coal', 24), ('sale of products', 14)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('revenue from operations', 48), ('sale of products', 32), (' Revenue', 32), ('from trading business', 29), (' Sales revenue', 25), ('revenue from contracts with customers', 22), ('Revenue from contract with customers', 22), ('net sales', 19), (' Sale of coal', 18), ('transmission and distribution business', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), (' Revenue', 33), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('from trading business', 22), ('net sales', 20), (' Sale of coal', 19), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), (' Sale of coal', 30), ('revenue from contracts with customers', 23), ('Revenue from contract with customers', 23), (' Sales revenue', 18), ('revenue from operations', 15), (' Revenue', 12), ('transmission and distribution business', 10)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 36), ('transmission and distribution business', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('sale of products', 29), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26), (' Revenue', 23), ('net sales', 22), (' Sale of coal', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), (' Sales revenue', 37), ('sale of products', 29), ('transmission and distribution business', 27), (' Revenue', 27), ('net sales', 25), (' Sale of coal', 24), ('revenue from contracts with customers', 21), ('Revenue from contract with customers', 21), ('revenue from operations', 19)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('revenue from operations', 31), ('transmission and distribution business', 29), ('from trading business', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), ('sale of products', 19), (' Sales revenue', 19), ('net sales', 17), (' Sale of coal', 14), (' Revenue', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 36), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26), ('from trading business', 20), ('net sales', 19), (' Sale of coal', 19), ('sale of products', 18), (' Sales revenue', 18), ('revenue from operations', 16), (' Revenue', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), (' Sales revenue', 37), ('revenue from operations', 33), ('from trading business', 33), (' Sale of coal', 28), ('sale of products', 26), (' Revenue', 24), ('transmission and distribution business', 22), ('net sales', 11)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), ('revenue from operations', 22), ('net sales', 21), (' Sale of coal', 21), ('from trading business', 19), (' Revenue', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('from trading business', 26), (' Sales revenue', 24), ('revenue from contracts with customers', 23), ('Revenue from contract with customers', 23), ('net sales', 21), (' Sale of coal', 21), ('sale of products', 20), ('revenue from operations', 15), ('transmission and distribution business', 15), (' Revenue', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('transmission and distribution business', 31), ('sale of products', 25), ('revenue from operations', 23), (' Sales revenue', 22), ('from trading business', 20), ('net sales', 19), (' Sale of coal', 19), (' Revenue', 16)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('from trading business', 41), (' Sales revenue', 40), ('transmission and distribution business', 35), ('net sales', 31), (' Sale of coal', 30), ('sale of products', 28), (' Revenue', 27), ('revenue from operations', 25), ('revenue from contracts with customers', 25), ('Revenue from contract with customers', 25)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('revenue from operations', 32), ('from trading business', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 28), ('sale of products', 27), ('transmission and distribution business', 27), ('net sales', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('from trading business', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), ('transmission and distribution business', 27), ('revenue from operations', 26), ('sale of products', 25), (' Sales revenue', 23), ('net sales', 21), (' Sale of coal', 17), (' Revenue', 12)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), ('from trading business', 22), ('net sales', 21), (' Sale of coal', 21), ('sale of products', 20), (' Sales revenue', 20), ('revenue from operations', 18), (' Revenue', 13)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Revenue'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:09+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-06-26 11:17:09+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:09+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:09+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('cost of sales', 13), ('Cost of sales', 13), ('purchase of stock-in-trade', 8), (' Cost of goods and services sold', 6), (' cost of coal sold', 0)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Cost of goods and services sold', 52), ('cost of sales', 40), ('Cost of sales', 40), (' Cost of inventory sold', 40), ('total expenditure', 38), (' Cost of product sold', 37), ('total expenses', 36), ('expense', 30), ('expenditure', 26), ('purchase of stock-in-trade', 20), (' cost of coal sold', 17), (' Personnel costs', 17)]
2023-06-26 11:17:09+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Cost of goods and services sold', 40), (' Cost of inventory sold', 36), (' Personnel costs', 31), (' Cost of product sold', 29), ('total expenditure', 24), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 23), (' cost of coal sold', 21), ('expense', 19), ('purchase of stock-in-trade', 18), ('total expenses', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Cost of inventory sold', 35), ('cost of sales', 33), ('Cost of sales', 33), (' cost of coal sold', 23), (' Cost of goods and services sold', 22), ('purchase of stock-in-trade', 20), (' Personnel costs', 17), (' Cost of product sold', 16), ('expense', 15), ('total expenses', 12), ('total expenditure', 11), ('expenditure', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Cost of product sold', 54), (' Personnel costs', 52), (' Cost of inventory sold', 43), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' cost of coal sold', 23), ('total expenditure', 21), (' Cost of inventory sold', 19), (' Cost of goods and services sold', 16), ('expense', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), ('total expenses', 35), (' Cost of goods and services sold', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), (' Cost of product sold', 29), ('purchase of stock-in-trade', 27), ('expenditure', 19), ('expense', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' cost of coal sold', 33), (' Cost of inventory sold', 33), (' Cost of product sold', 31), (' Personnel costs', 30), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 22), ('cost of sales', 19), ('Cost of sales', 19), ('total expenditure', 17), ('expenditure', 16), ('total expenses', 15), ('expense', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' Cost of product sold', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Cost of product sold', 42), (' Personnel costs', 40), ('expenditure', 38), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' cost of coal sold', 27), (' Cost of goods and services sold', 24), ('purchase of stock-in-trade', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), (' Cost of goods and services sold', 37), (' Cost of product sold', 34), (' cost of coal sold', 32), (' Personnel costs', 32), ('purchase of stock-in-trade', 28), (' Cost of inventory sold', 19), ('cost of sales', 18), ('Cost of sales', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 43), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of goods and services sold', 22), (' Cost of inventory sold', 19), (' cost of coal sold', 15), (' Cost of product sold', 14), ('cost of sales', 10), ('Cost of sales', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' Cost of product sold', 30), (' Cost of goods and services sold', 29), ('purchase of stock-in-trade', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('total expenditure', 28), ('expenditure', 26), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 25), ('expense', 21), (' Cost of inventory sold', 19), ('cost of sales', 18), ('Cost of sales', 18), ('total expenses', 16), (' Personnel costs', 15), (' Cost of product sold', 7), (' cost of coal sold', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of inventory sold', 26), (' Personnel costs', 23), (' Cost of product sold', 21), (' cost of coal sold', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' Cost of goods and services sold', 39), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' cost of coal sold', 28), ('cost of sales', 26), ('Cost of sales', 26), (' Cost of goods and services sold', 22), (' Personnel costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), (' cost of coal sold', 20), (' Personnel costs', 20), (' Cost of product sold', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('total expenditure', 29), ('total expenses', 27), ('expenditure', 23), (' Cost of goods and services sold', 23), (' Cost of product sold', 21), ('purchase of stock-in-trade', 20), ('expense', 18), (' Cost of inventory sold', 18), ('cost of sales', 17), ('Cost of sales', 17), (' cost of coal sold', 16), (' Personnel costs', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of inventory sold', 34), (' cost of coal sold', 31), (' Cost of goods and services sold', 31), ('purchase of stock-in-trade', 28), ('total expenditure', 23), ('cost of sales', 19), ('Cost of sales', 19), (' Cost of product sold', 19), ('total expenses', 18), (' Personnel costs', 17), ('expenditure', 15), ('expense', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 36), (' Cost of inventory sold', 35), (' cost of coal sold', 34), ('total expenditure', 33), ('expenditure', 32), (' Personnel costs', 29), ('cost of sales', 28), ('Cost of sales', 28), (' Cost of product sold', 27), ('expense', 24), (' Cost of goods and services sold', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 29), (' Personnel costs', 29), ('cost of sales', 24), ('Cost of sales', 24), ('total expenses', 23), ('total expenditure', 22), (' cost of coal sold', 22), ('purchase of stock-in-trade', 18), ('expense', 15), ('expenditure', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 25), (' cost of coal sold', 23), ('cost of sales', 21), ('Cost of sales', 21), (' Cost of inventory sold', 21), ('total expenses', 20), (' Personnel costs', 19), (' Cost of product sold', 18), ('expenditure', 16), (' Cost of goods and services sold', 12), ('expense', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), (' Cost of goods and services sold', 26), (' Cost of inventory sold', 25), (' Personnel costs', 24), ('cost of sales', 23), ('Cost of sales', 23), ('total expenses', 21), (' cost of coal sold', 21), ('total expenditure', 20), ('purchase of stock-in-trade', 16), ('expense', 16), ('expenditure', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('purchase of stock-in-trade', 47), (' Cost of inventory sold', 42), ('total expenditure', 30), ('expenditure', 29), ('total expenses', 28), (' cost of coal sold', 26), ('cost of sales', 24), ('Cost of sales', 24), (' Personnel costs', 21), ('expense', 20), (' Cost of product sold', 20), (' Cost of goods and services sold', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 32), ('total expenses', 31), (' cost of coal sold', 26), (' Personnel costs', 26), ('cost of sales', 25), ('Cost of sales', 25), (' Cost of product sold', 25), (' Cost of goods and services sold', 25), (' Cost of inventory sold', 24), ('expenditure', 21), ('expense', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Cost of goods and services sold', 35), ('total expenditure', 29), ('total expenses', 28), (' Cost of product sold', 26), (' Cost of inventory sold', 25), ('purchase of stock-in-trade', 23), ('cost of sales', 23), ('Cost of sales', 23), (' Personnel costs', 22), ('expenditure', 17), (' cost of coal sold', 14), ('expense', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of inventory sold', 38), (' cost of coal sold', 34), (' Cost of goods and services sold', 34), ('purchase of stock-in-trade', 28), ('total expenditure', 25), ('cost of sales', 21), ('Cost of sales', 21), (' Cost of product sold', 21), ('total expenses', 20), (' Personnel costs', 19), ('expenditure', 16), ('expense', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 9], 'score': 100, 'value': -416304.0, 'line_item_label': ['Cost of sales', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-416304.0, 0.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('cost of sales', 13), ('Cost of sales', 13), ('purchase of stock-in-trade', 8), (' Cost of goods and services sold', 6), (' cost of coal sold', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Cost of goods and services sold', 52), ('cost of sales', 40), ('Cost of sales', 40), (' Cost of inventory sold', 40), ('total expenditure', 38), (' Cost of product sold', 37), ('total expenses', 36), ('expense', 30), ('expenditure', 26), ('purchase of stock-in-trade', 20), (' cost of coal sold', 17), (' Personnel costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Cost of goods and services sold', 40), (' Cost of inventory sold', 36), (' Personnel costs', 31), (' Cost of product sold', 29), ('total expenditure', 24), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 23), (' cost of coal sold', 21), ('expense', 19), ('purchase of stock-in-trade', 18), ('total expenses', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Cost of inventory sold', 35), ('cost of sales', 33), ('Cost of sales', 33), (' cost of coal sold', 23), (' Cost of goods and services sold', 22), ('purchase of stock-in-trade', 20), (' Personnel costs', 17), (' Cost of product sold', 16), ('expense', 15), ('total expenses', 12), ('total expenditure', 11), ('expenditure', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Cost of product sold', 54), (' Personnel costs', 52), (' Cost of inventory sold', 43), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' cost of coal sold', 23), ('total expenditure', 21), (' Cost of inventory sold', 19), (' Cost of goods and services sold', 16), ('expense', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), ('total expenses', 35), (' Cost of goods and services sold', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), (' Cost of product sold', 29), ('purchase of stock-in-trade', 27), ('expenditure', 19), ('expense', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' cost of coal sold', 33), (' Cost of inventory sold', 33), (' Cost of product sold', 31), (' Personnel costs', 30), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 22), ('cost of sales', 19), ('Cost of sales', 19), ('total expenditure', 17), ('expenditure', 16), ('total expenses', 15), ('expense', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' Cost of product sold', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Cost of product sold', 42), (' Personnel costs', 40), ('expenditure', 38), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' cost of coal sold', 27), (' Cost of goods and services sold', 24), ('purchase of stock-in-trade', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), (' Cost of goods and services sold', 37), (' Cost of product sold', 34), (' cost of coal sold', 32), (' Personnel costs', 32), ('purchase of stock-in-trade', 28), (' Cost of inventory sold', 19), ('cost of sales', 18), ('Cost of sales', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 43), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of goods and services sold', 22), (' Cost of inventory sold', 19), (' cost of coal sold', 15), (' Cost of product sold', 14), ('cost of sales', 10), ('Cost of sales', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 31), (' Cost of product sold', 30), (' Cost of goods and services sold', 29), ('purchase of stock-in-trade', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('total expenditure', 28), ('expenditure', 26), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 25), ('expense', 21), (' Cost of inventory sold', 19), ('cost of sales', 18), ('Cost of sales', 18), ('total expenses', 16), (' Personnel costs', 15), (' Cost of product sold', 7), (' cost of coal sold', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of inventory sold', 26), (' Personnel costs', 23), (' Cost of product sold', 21), (' cost of coal sold', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' Cost of goods and services sold', 39), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' cost of coal sold', 28), ('cost of sales', 26), ('Cost of sales', 26), (' Cost of goods and services sold', 22), (' Personnel costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), (' cost of coal sold', 20), (' Personnel costs', 20), (' Cost of product sold', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('total expenditure', 29), ('total expenses', 27), ('expenditure', 23), (' Cost of goods and services sold', 23), (' Cost of product sold', 21), ('purchase of stock-in-trade', 20), ('expense', 18), (' Cost of inventory sold', 18), ('cost of sales', 17), ('Cost of sales', 17), (' cost of coal sold', 16), (' Personnel costs', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of inventory sold', 34), (' cost of coal sold', 31), (' Cost of goods and services sold', 31), ('purchase of stock-in-trade', 28), ('total expenditure', 23), ('cost of sales', 19), ('Cost of sales', 19), (' Cost of product sold', 19), ('total expenses', 18), (' Personnel costs', 17), ('expenditure', 15), ('expense', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 36), (' Cost of inventory sold', 35), (' cost of coal sold', 34), ('total expenditure', 33), ('expenditure', 32), (' Personnel costs', 29), ('cost of sales', 28), ('Cost of sales', 28), (' Cost of product sold', 27), ('expense', 24), (' Cost of goods and services sold', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 29), (' Personnel costs', 29), ('cost of sales', 24), ('Cost of sales', 24), ('total expenses', 23), ('total expenditure', 22), (' cost of coal sold', 22), ('purchase of stock-in-trade', 18), ('expense', 15), ('expenditure', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 25), (' cost of coal sold', 23), ('cost of sales', 21), ('Cost of sales', 21), (' Cost of inventory sold', 21), ('total expenses', 20), (' Personnel costs', 19), (' Cost of product sold', 18), ('expenditure', 16), (' Cost of goods and services sold', 12), ('expense', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), (' Cost of goods and services sold', 26), (' Cost of inventory sold', 25), (' Personnel costs', 24), ('cost of sales', 23), ('Cost of sales', 23), ('total expenses', 21), (' cost of coal sold', 21), ('total expenditure', 20), ('purchase of stock-in-trade', 16), ('expense', 16), ('expenditure', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('purchase of stock-in-trade', 47), (' Cost of inventory sold', 42), ('total expenditure', 30), ('expenditure', 29), ('total expenses', 28), (' cost of coal sold', 26), ('cost of sales', 24), ('Cost of sales', 24), (' Personnel costs', 21), ('expense', 20), (' Cost of product sold', 20), (' Cost of goods and services sold', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 32), ('total expenses', 31), (' cost of coal sold', 26), (' Personnel costs', 26), ('cost of sales', 25), ('Cost of sales', 25), (' Cost of product sold', 25), (' Cost of goods and services sold', 25), (' Cost of inventory sold', 24), ('expenditure', 21), ('expense', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Cost of goods and services sold', 35), ('total expenditure', 29), ('total expenses', 28), (' Cost of product sold', 26), (' Cost of inventory sold', 25), ('purchase of stock-in-trade', 23), ('cost of sales', 23), ('Cost of sales', 23), (' Personnel costs', 22), ('expenditure', 17), (' cost of coal sold', 14), ('expense', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Cost of inventory sold', 38), (' cost of coal sold', 34), (' Cost of goods and services sold', 34), ('purchase of stock-in-trade', 28), ('total expenditure', 25), ('cost of sales', 21), ('Cost of sales', 21), (' Cost of product sold', 21), ('total expenses', 20), (' Personnel costs', 19), ('expenditure', 16), ('expense', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 9], 'score': 100, 'value': -427427.0, 'line_item_label': ['Cost of sales', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-427427.0, 0.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Advertising expenses', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15), (' Sales and marketing', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Sales and marketing', 50), (' Amortisation expenses', 40), (' Selling & distribution expenses', 38), (' Administrative and other expenses', 38), (' Lease expenses', 38), (' Selling Expenses', 38), (' Marketing expenses', 35), (' Depreciation expenses', 34), (' Depreciation expenses', 34), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Management expenses', 30), (' Other expenses', 30), (' Advertising expenses', 28), (' Occupancy expenses', 24), (' depreciation', 21), (' Logistics and distribution', 20), (' Occupancy ', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Sales and marketing', 40), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Administrative and other expenses', 35), (' Administrative expenses', 34), (' Administration expenses', 34), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Selling Expenses', 28), (' Amortisation expenses', 26), (' Advertising expenses', 25), ('Distribution expenses', 24), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Lease expenses', 22), (' Other expenses', 22), (' Marketing expenses', 21), (' Logistics and distribution', 18), (' Management expenses', 16), (' Occupancy ', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Lease expenses', 38), (' Sales and marketing', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Logistics and distribution', 24), (' Amortisation expenses', 23), (' Advertising expenses', 22), (' Administrative and other expenses', 21), (' Occupancy ', 15), ('other expenses', 12), (' Marketing expenses', 12), (' Occupancy expenses', 12), (' Other expenses', 12), (' Selling Expenses', 12), (' Management expenses', 12), (' Other expenses', 12), ('Distribution expenses', 11), (' Depreciation expenses', 11), (' Depreciation expenses', 11), (' Selling & distribution expenses', 10), (' depreciation', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing', 50), (' Lease expenses', 40), (' Selling Expenses', 40), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), (' Administrative and other expenses', 29), (' Logistics and distribution', 28), (' Advertising expenses', 17), (' Amortisation expenses', 17), (' Occupancy ', 14), (' depreciation', 12), ('other expenses', 10), (' Occupancy expenses', 10), (' Other expenses', 10), (' Management expenses', 10), (' Other expenses', 10), (' Marketing expenses', 9), (' Depreciation expenses', 9), (' Depreciation expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Advertising expenses', 30), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Logistics and distribution', 19), (' Selling & distribution expenses', 18), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17), ('Distribution expenses', 14), (' Administrative expenses', 14), (' Administration expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Administrative expenses', 30), (' Administration expenses', 30), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Amortisation expenses', 24), (' Sales and marketing', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Selling & distribution expenses', 19), (' Marketing expenses', 17), (' Depreciation expenses', 16), (' Depreciation expenses', 16), (' Advertising expenses', 15), (' Occupancy ', 12), (' Lease expenses', 9), (' Selling Expenses', 9), (' Management expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administrative and other expenses', 41), (' Administrative expenses', 32), (' Selling & distribution expenses', 32), (' Administration expenses', 32), ('Distribution expenses', 29), (' Sales and marketing', 29), (' Depreciation expenses', 27), (' Depreciation expenses', 27), ('other expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Advertising expenses', 21), (' Selling Expenses', 19), (' Amortisation expenses', 18), (' Lease expenses', 16), (' Marketing expenses', 15), (' Logistics and distribution', 14), (' depreciation', 13), (' Occupancy expenses', 12), (' Management expenses', 12), (' Occupancy ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Lease expenses', 71), (' Selling Expenses', 71), ('other expenses', 67), (' Occupancy expenses', 67), (' Other expenses', 67), (' Management expenses', 67), (' Other expenses', 67), (' Marketing expenses', 63), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Amortisation expenses', 60), (' Advertising expenses', 57), ('Distribution expenses', 55), (' Administrative expenses', 55), (' Administration expenses', 55), (' depreciation', 46), (' Selling & distribution expenses', 44), (' Administrative and other expenses', 38), (' Sales and marketing', 19), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Distribution expenses', 100), (' Selling & distribution expenses', 86), (' Administrative expenses', 75), (' Administration expenses', 75), (' Depreciation expenses', 67), (' Depreciation expenses', 67), (' Advertising expenses', 65), (' Logistics and distribution', 61), (' Amortisation expenses', 60), (' Administrative and other expenses', 57), (' Lease expenses', 44), (' Selling Expenses', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' depreciation', 35), (' Sales and marketing', 32), (' Occupancy ', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Marketing expenses', 70), (' Sales and marketing', 56), (' Administrative and other expenses', 52), ('other expenses', 50), (' Other expenses', 50), (' Management expenses', 50), (' Other expenses', 50), (' Lease expenses', 46), (' Advertising expenses', 46), (' Selling Expenses', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Logistics and distribution', 45), (' Occupancy expenses', 44), (' Selling & distribution expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), ('Distribution expenses', 40), (' depreciation', 26), (' Occupancy ', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), ('other expenses', 67), (' Other expenses', 67), (' Other expenses', 67), (' Lease expenses', 61), (' Selling Expenses', 61), (' Occupancy ', 59), (' Management expenses', 58), (' Marketing expenses', 56), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 42), (' Selling & distribution expenses', 42), (' Administrative and other expenses', 42), (' Logistics and distribution', 19), (' Sales and marketing', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses', 100), (' Administration expenses', 100), (' Administrative and other expenses', 76), ('Distribution expenses', 75), (' Amortisation expenses', 73), (' Advertising expenses', 71), (' Selling & distribution expenses', 65), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Lease expenses', 44), (' Selling Expenses', 44), (' Logistics and distribution', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' depreciation', 35), (' Sales and marketing', 32), (' Occupancy ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' depreciation', 50), (' Administrative expenses', 41), (' Administration expenses', 41), (' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Sales and marketing', 36), (' Administrative and other expenses', 31), (' Amortisation expenses', 22), ('Distribution expenses', 21), (' Selling & distribution expenses', 18), (' Logistics and distribution', 18), (' Lease expenses', 17), (' Selling Expenses', 17), ('other expenses', 16), (' Occupancy expenses', 16), (' Other expenses', 16), (' Management expenses', 16), (' Other expenses', 16), (' Marketing expenses', 15), (' Advertising expenses', 14), (' Occupancy ', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 25), (' Sales and marketing', 22), (' Occupancy ', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Distribution expenses', 30), (' Management expenses', 26), (' Selling & distribution expenses', 25), (' Occupancy ', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 22), (' Administrative expenses', 22), (' Administrative and other expenses', 22), (' Administration expenses', 22), (' Lease expenses', 18), (' Marketing expenses', 17), (' Occupancy expenses', 17), (' Amortisation expenses', 16), (' Advertising expenses', 15), (' Sales and marketing', 15), (' Logistics and distribution', 13), ('other expenses', 9), (' Other expenses', 9), (' Selling Expenses', 9), (' Other expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other expenses', 44), (' Occupancy expenses', 44), (' Other expenses', 44), (' Management expenses', 44), (' Other expenses', 44), (' Marketing expenses', 43), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), (' Advertising expenses', 41), (' Administrative and other expenses', 40), (' Lease expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Selling Expenses', 35), (' Logistics and distribution', 33), (' Sales and marketing', 32), (' depreciation', 22), (' Occupancy ', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' Other expenses', 64), (' Management expenses', 64), (' Other expenses', 64), (' Marketing expenses', 62), (' Lease expenses', 59), (' Occupancy expenses', 57), (' Selling Expenses', 52), (' Administrative and other expenses', 43), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 39), ('Distribution expenses', 38), (' Administrative expenses', 38), (' Selling & distribution expenses', 38), (' Administration expenses', 38), (' depreciation', 35), (' Occupancy ', 10), (' Logistics and distribution', 6), (' Sales and marketing', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Administrative and other expenses', 41), (' Selling & distribution expenses', 37), ('Distribution expenses', 34), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Advertising expenses', 32), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Marketing expenses', 27), (' Occupancy expenses', 27), (' Depreciation expenses', 27), (' Depreciation expenses', 27), (' Management expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 25), (' Selling Expenses', 22), (' Sales and marketing', 16), (' depreciation', 12), (' Occupancy ', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Logistics and distribution', 37), (' Sales and marketing', 33), ('Distribution expenses', 26), (' Administrative expenses', 26), (' Administration expenses', 26), (' Selling & distribution expenses', 24), (' Amortisation expenses', 24), (' Administrative and other expenses', 23), (' Advertising expenses', 23), (' Depreciation expenses', 17), (' Depreciation expenses', 17), (' depreciation', 15), ('other expenses', 14), (' Marketing expenses', 14), (' Occupancy expenses', 14), (' Other expenses', 14), (' Lease expenses', 14), (' Selling Expenses', 14), (' Other expenses', 14), (' Occupancy ', 12), (' Management expenses', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other expenses', 51), (' Other expenses', 51), (' Other expenses', 51), (' Administrative and other expenses', 42), (' Lease expenses', 37), (' Selling Expenses', 37), (' Marketing expenses', 35), (' Logistics and distribution', 34), (' Selling & distribution expenses', 33), (' Occupancy expenses', 31), (' Management expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' depreciation', 24), ('Distribution expenses', 23), (' Advertising expenses', 19), (' Sales and marketing', 19), (' Occupancy ', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 31), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Selling Expenses', 23), (' Logistics and distribution', 23), (' depreciation', 21), ('other expenses', 20), (' Occupancy expenses', 20), (' Other expenses', 20), (' Lease expenses', 20), (' Other expenses', 20), (' Marketing expenses', 19), (' Administrative and other expenses', 19), (' Amortisation expenses', 19), (' Sales and marketing', 19), ('Distribution expenses', 18), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 16), (' Management expenses', 16), (' Occupancy ', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administrative and other expenses', 34), ('Distribution expenses', 29), (' Administrative expenses', 29), (' Administration expenses', 29), (' Selling & distribution expenses', 27), (' Sales and marketing', 26), (' Management expenses', 24), (' Marketing expenses', 23), (' Amortisation expenses', 23), (' Advertising expenses', 22), (' Lease expenses', 20), (' Selling Expenses', 20), (' Depreciation expenses', 19), (' Depreciation expenses', 19), ('other expenses', 16), (' Occupancy expenses', 16), (' Other expenses', 16), (' Other expenses', 16), (' Occupancy ', 14), (' Logistics and distribution', 14), (' depreciation', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), (' Logistics and distribution', 25), (' depreciation', 24), (' Lease expenses', 22), ('other expenses', 21), (' Occupancy expenses', 21), (' Other expenses', 21), (' Amortisation expenses', 21), (' Management expenses', 21), (' Other expenses', 21), (' Administrative and other expenses', 20), (' Selling Expenses', 18), (' Administrative expenses', 17), (' Administration expenses', 17), (' Advertising expenses', 17), (' Occupancy ', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Management expenses', 33), (' Administrative and other expenses', 32), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 29), (' Marketing expenses', 27), (' Selling & distribution expenses', 27), (' depreciation', 26), (' Amortisation expenses', 26), ('Distribution expenses', 25), (' Selling Expenses', 23), ('other expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Advertising expenses', 21), (' Sales and marketing', 21), (' Logistics and distribution', 18), (' Occupancy expenses', 17), (' Occupancy ', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('other expenses', 34), (' Other expenses', 34), (' Other expenses', 34), (' Administrative and other expenses', 33), (' Lease expenses', 28), (' Marketing expenses', 27), (' Management expenses', 27), (' Sales and marketing', 26), (' Occupancy expenses', 24), (' Selling & distribution expenses', 24), (' Selling Expenses', 24), (' Logistics and distribution', 24), (' Depreciation expenses', 20), (' Depreciation expenses', 20), (' Amortisation expenses', 20), (' Administrative expenses', 19), (' Administration expenses', 19), ('Distribution expenses', 16), (' depreciation', 15), (' Advertising expenses', 13), (' Occupancy ', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Administrative and other expenses', 40), (' Selling & distribution expenses', 35), ('Distribution expenses', 29), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Lease expenses', 23), (' Marketing expenses', 22), (' Management expenses', 22), (' Logistics and distribution', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Selling Expenses', 20), (' Occupancy expenses', 19), (' Amortisation expenses', 19), (' Depreciation expenses', 16), (' Depreciation expenses', 16), (' Sales and marketing', 16), (' Advertising expenses', 13), (' depreciation', 12), (' Occupancy ', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Logistics and distribution', 41), (' Sales and marketing', 37), ('Distribution expenses', 29), (' Administrative expenses', 29), (' Administration expenses', 29), (' Selling & distribution expenses', 27), (' Advertising expenses', 26), (' Amortisation expenses', 26), (' Administrative and other expenses', 25), (' Depreciation expenses', 19), (' Depreciation expenses', 19), (' depreciation', 17), ('other expenses', 16), (' Occupancy expenses', 16), (' Other expenses', 16), (' Lease expenses', 16), (' Selling Expenses', 16), (' Other expenses', 16), (' Marketing expenses', 15), (' Management expenses', 12), (' Occupancy ', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 12, 13, 15], 'score': 100, 'value': -164308.0, 'line_item_label': ['Distribution expenses', 'Occupancy expenses', 'Administration expenses', 'Other expenses'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [-20612.0, -3667.0, -139886.0, -143.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Advertising expenses', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15), (' Sales and marketing', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Sales and marketing', 50), (' Amortisation expenses', 40), (' Selling & distribution expenses', 38), (' Administrative and other expenses', 38), (' Lease expenses', 38), (' Selling Expenses', 38), (' Marketing expenses', 35), (' Depreciation expenses', 34), (' Depreciation expenses', 34), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Management expenses', 30), (' Other expenses', 30), (' Advertising expenses', 28), (' Occupancy expenses', 24), (' depreciation', 21), (' Logistics and distribution', 20), (' Occupancy ', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Sales and marketing', 40), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Administrative and other expenses', 35), (' Administrative expenses', 34), (' Administration expenses', 34), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Selling Expenses', 28), (' Amortisation expenses', 26), (' Advertising expenses', 25), ('Distribution expenses', 24), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Lease expenses', 22), (' Other expenses', 22), (' Marketing expenses', 21), (' Logistics and distribution', 18), (' Management expenses', 16), (' Occupancy ', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Lease expenses', 38), (' Sales and marketing', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Logistics and distribution', 24), (' Amortisation expenses', 23), (' Advertising expenses', 22), (' Administrative and other expenses', 21), (' Occupancy ', 15), ('other expenses', 12), (' Marketing expenses', 12), (' Occupancy expenses', 12), (' Other expenses', 12), (' Selling Expenses', 12), (' Management expenses', 12), (' Other expenses', 12), ('Distribution expenses', 11), (' Depreciation expenses', 11), (' Depreciation expenses', 11), (' Selling & distribution expenses', 10), (' depreciation', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing', 50), (' Lease expenses', 40), (' Selling Expenses', 40), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Administrative expenses', 32), (' Administration expenses', 32), (' Administrative and other expenses', 29), (' Logistics and distribution', 28), (' Advertising expenses', 17), (' Amortisation expenses', 17), (' Occupancy ', 14), (' depreciation', 12), ('other expenses', 10), (' Occupancy expenses', 10), (' Other expenses', 10), (' Management expenses', 10), (' Other expenses', 10), (' Marketing expenses', 9), (' Depreciation expenses', 9), (' Depreciation expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Advertising expenses', 30), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Logistics and distribution', 19), (' Selling & distribution expenses', 18), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17), ('Distribution expenses', 14), (' Administrative expenses', 14), (' Administration expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Administrative expenses', 30), (' Administration expenses', 30), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Amortisation expenses', 24), (' Sales and marketing', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Selling & distribution expenses', 19), (' Marketing expenses', 17), (' Depreciation expenses', 16), (' Depreciation expenses', 16), (' Advertising expenses', 15), (' Occupancy ', 12), (' Lease expenses', 9), (' Selling Expenses', 9), (' Management expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administrative and other expenses', 41), (' Administrative expenses', 32), (' Selling & distribution expenses', 32), (' Administration expenses', 32), ('Distribution expenses', 29), (' Sales and marketing', 29), (' Depreciation expenses', 27), (' Depreciation expenses', 27), ('other expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Advertising expenses', 21), (' Selling Expenses', 19), (' Amortisation expenses', 18), (' Lease expenses', 16), (' Marketing expenses', 15), (' Logistics and distribution', 14), (' depreciation', 13), (' Occupancy expenses', 12), (' Management expenses', 12), (' Occupancy ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Lease expenses', 71), (' Selling Expenses', 71), ('other expenses', 67), (' Occupancy expenses', 67), (' Other expenses', 67), (' Management expenses', 67), (' Other expenses', 67), (' Marketing expenses', 63), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Amortisation expenses', 60), (' Advertising expenses', 57), ('Distribution expenses', 55), (' Administrative expenses', 55), (' Administration expenses', 55), (' depreciation', 46), (' Selling & distribution expenses', 44), (' Administrative and other expenses', 38), (' Sales and marketing', 19), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Distribution expenses', 100), (' Selling & distribution expenses', 86), (' Administrative expenses', 75), (' Administration expenses', 75), (' Depreciation expenses', 67), (' Depreciation expenses', 67), (' Advertising expenses', 65), (' Logistics and distribution', 61), (' Amortisation expenses', 60), (' Administrative and other expenses', 57), (' Lease expenses', 44), (' Selling Expenses', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' depreciation', 35), (' Sales and marketing', 32), (' Occupancy ', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Marketing expenses', 70), (' Sales and marketing', 56), (' Administrative and other expenses', 52), ('other expenses', 50), (' Other expenses', 50), (' Management expenses', 50), (' Other expenses', 50), (' Lease expenses', 46), (' Advertising expenses', 46), (' Selling Expenses', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Logistics and distribution', 45), (' Occupancy expenses', 44), (' Selling & distribution expenses', 44), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), ('Distribution expenses', 40), (' depreciation', 26), (' Occupancy ', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), ('other expenses', 67), (' Other expenses', 67), (' Other expenses', 67), (' Lease expenses', 61), (' Selling Expenses', 61), (' Occupancy ', 59), (' Management expenses', 58), (' Marketing expenses', 56), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 42), (' Selling & distribution expenses', 42), (' Administrative and other expenses', 42), (' Logistics and distribution', 19), (' Sales and marketing', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses', 100), (' Administration expenses', 100), (' Administrative and other expenses', 76), ('Distribution expenses', 75), (' Amortisation expenses', 73), (' Advertising expenses', 71), (' Selling & distribution expenses', 65), (' Depreciation expenses', 60), (' Depreciation expenses', 60), (' Lease expenses', 44), (' Selling Expenses', 44), (' Logistics and distribution', 44), ('other expenses', 43), (' Occupancy expenses', 43), (' Other expenses', 43), (' Management expenses', 43), (' Other expenses', 43), (' Marketing expenses', 41), (' depreciation', 35), (' Sales and marketing', 32), (' Occupancy ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' depreciation', 50), (' Administrative expenses', 41), (' Administration expenses', 41), (' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Sales and marketing', 36), (' Administrative and other expenses', 31), (' Amortisation expenses', 22), ('Distribution expenses', 21), (' Selling & distribution expenses', 18), (' Logistics and distribution', 18), (' Lease expenses', 17), (' Selling Expenses', 17), ('other expenses', 16), (' Occupancy expenses', 16), (' Other expenses', 16), (' Management expenses', 16), (' Other expenses', 16), (' Marketing expenses', 15), (' Advertising expenses', 14), (' Occupancy ', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 25), (' Sales and marketing', 22), (' Occupancy ', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Distribution expenses', 30), (' Management expenses', 26), (' Selling & distribution expenses', 25), (' Occupancy ', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 22), (' Administrative expenses', 22), (' Administrative and other expenses', 22), (' Administration expenses', 22), (' Lease expenses', 18), (' Marketing expenses', 17), (' Occupancy expenses', 17), (' Amortisation expenses', 16), (' Advertising expenses', 15), (' Sales and marketing', 15), (' Logistics and distribution', 13), ('other expenses', 9), (' Other expenses', 9), (' Selling Expenses', 9), (' Other expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other expenses', 44), (' Occupancy expenses', 44), (' Other expenses', 44), (' Management expenses', 44), (' Other expenses', 44), (' Marketing expenses', 43), (' Depreciation expenses', 42), (' Depreciation expenses', 42), (' Amortisation expenses', 42), (' Advertising expenses', 41), (' Administrative and other expenses', 40), (' Lease expenses', 40), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Selling Expenses', 35), (' Logistics and distribution', 33), (' Sales and marketing', 32), (' depreciation', 22), (' Occupancy ', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' Other expenses', 64), (' Management expenses', 64), (' Other expenses', 64), (' Marketing expenses', 62), (' Lease expenses', 59), (' Occupancy expenses', 57), (' Selling Expenses', 52), (' Administrative and other expenses', 43), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 39), ('Distribution expenses', 38), (' Administrative expenses', 38), (' Selling & distribution expenses', 38), (' Administration expenses', 38), (' depreciation', 35), (' Occupancy ', 10), (' Logistics and distribution', 6), (' Sales and marketing', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Administrative and other expenses', 41), (' Selling & distribution expenses', 37), ('Distribution expenses', 34), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Advertising expenses', 32), (' Logistics and distribution', 30), (' Amortisation expenses', 29), (' Marketing expenses', 27), (' Occupancy expenses', 27), (' Depreciation expenses', 27), (' Depreciation expenses', 27), (' Management expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 25), (' Selling Expenses', 22), (' Sales and marketing', 16), (' depreciation', 12), (' Occupancy ', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Logistics and distribution', 37), (' Sales and marketing', 33), ('Distribution expenses', 26), (' Administrative expenses', 26), (' Administration expenses', 26), (' Selling & distribution expenses', 24), (' Amortisation expenses', 24), (' Administrative and other expenses', 23), (' Advertising expenses', 23), (' Depreciation expenses', 17), (' Depreciation expenses', 17), (' depreciation', 15), ('other expenses', 14), (' Marketing expenses', 14), (' Occupancy expenses', 14), (' Other expenses', 14), (' Lease expenses', 14), (' Selling Expenses', 14), (' Other expenses', 14), (' Occupancy ', 12), (' Management expenses', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other expenses', 51), (' Other expenses', 51), (' Other expenses', 51), (' Administrative and other expenses', 42), (' Lease expenses', 37), (' Selling Expenses', 37), (' Marketing expenses', 35), (' Logistics and distribution', 34), (' Selling & distribution expenses', 33), (' Occupancy expenses', 31), (' Management expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' depreciation', 24), ('Distribution expenses', 23), (' Advertising expenses', 19), (' Sales and marketing', 19), (' Occupancy ', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 31), (' Depreciation expenses', 25), (' Depreciation expenses', 25), (' Selling Expenses', 23), (' Logistics and distribution', 23), (' depreciation', 21), ('other expenses', 20), (' Occupancy expenses', 20), (' Other expenses', 20), (' Lease expenses', 20), (' Other expenses', 20), (' Marketing expenses', 19), (' Administrative and other expenses', 19), (' Amortisation expenses', 19), (' Sales and marketing', 19), ('Distribution expenses', 18), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 16), (' Management expenses', 16), (' Occupancy ', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administrative and other expenses', 34), ('Distribution expenses', 29), (' Administrative expenses', 29), (' Administration expenses', 29), (' Selling & distribution expenses', 27), (' Sales and marketing', 26), (' Management expenses', 24), (' Marketing expenses', 23), (' Amortisation expenses', 23), (' Advertising expenses', 22), (' Lease expenses', 20), (' Selling Expenses', 20), (' Depreciation expenses', 19), (' Depreciation expenses', 19), ('other expenses', 16), (' Occupancy expenses', 16), (' Other expenses', 16), (' Other expenses', 16), (' Occupancy ', 14), (' Logistics and distribution', 14), (' depreciation', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), (' Logistics and distribution', 25), (' depreciation', 24), (' Lease expenses', 22), ('other expenses', 21), (' Occupancy expenses', 21), (' Other expenses', 21), (' Amortisation expenses', 21), (' Management expenses', 21), (' Other expenses', 21), (' Administrative and other expenses', 20), (' Selling Expenses', 18), (' Administrative expenses', 17), (' Administration expenses', 17), (' Advertising expenses', 17), (' Occupancy ', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Depreciation expenses', 37), (' Depreciation expenses', 37), (' Management expenses', 33), (' Administrative and other expenses', 32), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 29), (' Marketing expenses', 27), (' Selling & distribution expenses', 27), (' depreciation', 26), (' Amortisation expenses', 26), ('Distribution expenses', 25), (' Selling Expenses', 23), ('other expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Advertising expenses', 21), (' Sales and marketing', 21), (' Logistics and distribution', 18), (' Occupancy expenses', 17), (' Occupancy ', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('other expenses', 34), (' Other expenses', 34), (' Other expenses', 34), (' Administrative and other expenses', 33), (' Lease expenses', 28), (' Marketing expenses', 27), (' Management expenses', 27), (' Sales and marketing', 26), (' Occupancy expenses', 24), (' Selling & distribution expenses', 24), (' Selling Expenses', 24), (' Logistics and distribution', 24), (' Depreciation expenses', 20), (' Depreciation expenses', 20), (' Amortisation expenses', 20), (' Administrative expenses', 19), (' Administration expenses', 19), ('Distribution expenses', 16), (' depreciation', 15), (' Advertising expenses', 13), (' Occupancy ', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Administrative and other expenses', 40), (' Selling & distribution expenses', 35), ('Distribution expenses', 29), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Lease expenses', 23), (' Marketing expenses', 22), (' Management expenses', 22), (' Logistics and distribution', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Selling Expenses', 20), (' Occupancy expenses', 19), (' Amortisation expenses', 19), (' Depreciation expenses', 16), (' Depreciation expenses', 16), (' Sales and marketing', 16), (' Advertising expenses', 13), (' depreciation', 12), (' Occupancy ', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Logistics and distribution', 41), (' Sales and marketing', 37), ('Distribution expenses', 29), (' Administrative expenses', 29), (' Administration expenses', 29), (' Selling & distribution expenses', 27), (' Advertising expenses', 26), (' Amortisation expenses', 26), (' Administrative and other expenses', 25), (' Depreciation expenses', 19), (' Depreciation expenses', 19), (' depreciation', 17), ('other expenses', 16), (' Occupancy expenses', 16), (' Other expenses', 16), (' Lease expenses', 16), (' Selling Expenses', 16), (' Other expenses', 16), (' Marketing expenses', 15), (' Management expenses', 12), (' Occupancy ', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 12, 13, 15], 'score': 100, 'value': -181105.0, 'line_item_label': ['Distribution expenses', 'Occupancy expenses', 'Administration expenses', 'Other expenses'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [-22949.0, -3766.0, -152966.0, -1424.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 32), ('Rent', 24), (' Occupancy expenses', 24), (' Occupancy', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Administration expenses', 34), (' Occupancy expenses', 22), ('Rent', 21), (' Rental expenses', 21), (' Occupancy', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Administration expenses', 27), ('Rent', 16), (' Occupancy', 15), (' Rental expenses', 12), (' Occupancy expenses', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 32), ('Rent', 15), (' Occupancy', 14), (' Occupancy expenses', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), (' Occupancy expenses', 26), (' Rental expenses', 17), ('Rent', 13), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 27), ('Rent', 14), (' Occupancy expenses', 12), (' Occupancy', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 63), (' Administration expenses', 55), ('Rent', 40), (' Occupancy', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Administration expenses', 75), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Rental expenses', 54), (' Administration expenses', 45), (' Occupancy expenses', 44), ('Rent', 21), (' Occupancy', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy', 59), (' Rental expenses', 56), (' Administration expenses', 43), ('Rent', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses', 100), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Administration expenses', 41), (' Rental expenses', 31), ('Rent', 24), (' Occupancy expenses', 16), (' Occupancy', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Occupancy', 25), (' Administration expenses', 22), (' Rental expenses', 17), (' Occupancy expenses', 17), ('Rent', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses', 48), (' Occupancy expenses', 44), (' Administration expenses', 36), ('Rent', 24), (' Occupancy', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses', 57), (' Administration expenses', 38), ('Rent', 30), (' Occupancy', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Rental expenses', 30), (' Occupancy expenses', 27), (' Administration expenses', 26), ('Rent', 12), (' Occupancy', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Rental expenses', 28), (' Administration expenses', 26), ('Rent', 16), (' Occupancy expenses', 14), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Occupancy expenses', 31), (' Rental expenses', 30), (' Administration expenses', 28), ('Rent', 26), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 26), (' Occupancy expenses', 20), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administration expenses', 29), (' Rental expenses', 27), ('Rent', 19), (' Occupancy expenses', 16), (' Occupancy', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 25), (' Occupancy expenses', 21), (' Administration expenses', 17), ('Rent', 12), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Rental expenses', 32), (' Administration expenses', 30), ('Rent', 29), (' Occupancy expenses', 17), (' Occupancy', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Occupancy expenses', 24), (' Administration expenses', 19), ('Rent', 16), (' Occupancy', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Rental expenses', 27), (' Administration expenses', 21), (' Occupancy expenses', 19), ('Rent', 12), (' Occupancy', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), ('Rent', 19), (' Occupancy expenses', 16), (' Occupancy', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': -143553.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-3667.0, -139886.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 32), ('Rent', 24), (' Occupancy expenses', 24), (' Occupancy', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Administration expenses', 34), (' Occupancy expenses', 22), ('Rent', 21), (' Rental expenses', 21), (' Occupancy', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Administration expenses', 27), ('Rent', 16), (' Occupancy', 15), (' Rental expenses', 12), (' Occupancy expenses', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 32), ('Rent', 15), (' Occupancy', 14), (' Occupancy expenses', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), (' Occupancy expenses', 26), (' Rental expenses', 17), ('Rent', 13), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 27), ('Rent', 14), (' Occupancy expenses', 12), (' Occupancy', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 63), (' Administration expenses', 55), ('Rent', 40), (' Occupancy', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Administration expenses', 75), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Rental expenses', 54), (' Administration expenses', 45), (' Occupancy expenses', 44), ('Rent', 21), (' Occupancy', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy', 59), (' Rental expenses', 56), (' Administration expenses', 43), ('Rent', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses', 100), (' Occupancy expenses', 43), (' Rental expenses', 41), ('Rent', 30), (' Occupancy', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Administration expenses', 41), (' Rental expenses', 31), ('Rent', 24), (' Occupancy expenses', 16), (' Occupancy', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Occupancy', 25), (' Administration expenses', 22), (' Rental expenses', 17), (' Occupancy expenses', 17), ('Rent', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses', 48), (' Occupancy expenses', 44), (' Administration expenses', 36), ('Rent', 24), (' Occupancy', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses', 57), (' Administration expenses', 38), ('Rent', 30), (' Occupancy', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Rental expenses', 30), (' Occupancy expenses', 27), (' Administration expenses', 26), ('Rent', 12), (' Occupancy', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Rental expenses', 28), (' Administration expenses', 26), ('Rent', 16), (' Occupancy expenses', 14), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Occupancy expenses', 31), (' Rental expenses', 30), (' Administration expenses', 28), ('Rent', 26), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 26), (' Occupancy expenses', 20), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Administration expenses', 29), (' Rental expenses', 27), ('Rent', 19), (' Occupancy expenses', 16), (' Occupancy', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 25), (' Occupancy expenses', 21), (' Administration expenses', 17), ('Rent', 12), (' Occupancy', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Rental expenses', 32), (' Administration expenses', 30), ('Rent', 29), (' Occupancy expenses', 17), (' Occupancy', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Occupancy expenses', 24), (' Administration expenses', 19), ('Rent', 16), (' Occupancy', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Rental expenses', 27), (' Administration expenses', 21), (' Occupancy expenses', 19), ('Rent', 12), (' Occupancy', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), ('Rent', 19), (' Occupancy expenses', 16), (' Occupancy', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': -156732.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-3766.0, -152966.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('Other revenue', 48), (' Other income', 31), ('other operating', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('Other revenue', 54), ('other operating', 34), (' Other income', 28)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Other income', 44), ('other operating', 13), ('Other revenue', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 29), ('other operating', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), ('Other revenue', 17), (' Other income', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('Other revenue', 28), ('other operating', 22), (' Other income', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Other revenue', 29), ('other operating', 15), (' Other income', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other operating', 35), (' Other income', 29), ('Other revenue', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('Other revenue', 40), ('other operating', 35), (' Other income', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Other income', 31), ('other operating', 23), ('Other revenue', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('Other revenue', 21), (' Other income', 21), ('other operating', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Other income', 58), ('other operating', 49), ('Other revenue', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 20), ('other operating', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('Other revenue', 20), (' Other income', 16), ('other operating', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 25), ('other operating', 22), (' Other income', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Other income', 34), ('Other revenue', 28), ('other operating', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' Other income', 38), ('other operating', 35), ('Other revenue', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Other income', 31), ('other operating', 26), ('Other revenue', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('Other revenue', 24), (' Other income', 20), ('other operating', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 1617.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [1617.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('Other revenue', 48), (' Other income', 31), ('other operating', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('Other revenue', 54), ('other operating', 34), (' Other income', 28)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Other income', 44), ('other operating', 13), ('Other revenue', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 29), ('other operating', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), ('Other revenue', 17), (' Other income', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('Other revenue', 28), ('other operating', 22), (' Other income', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('Other revenue', 29), ('other operating', 15), (' Other income', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other operating', 35), (' Other income', 29), ('Other revenue', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('Other revenue', 40), ('other operating', 35), (' Other income', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' Other income', 31), ('other operating', 23), ('Other revenue', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('Other revenue', 21), (' Other income', 21), ('other operating', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' Other income', 58), ('other operating', 49), ('Other revenue', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 20), ('other operating', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('Other revenue', 20), (' Other income', 16), ('other operating', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 25), ('other operating', 22), (' Other income', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Other income', 34), ('Other revenue', 28), ('other operating', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' Other income', 38), ('other operating', 35), ('Other revenue', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Other income', 31), ('other operating', 26), ('Other revenue', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('Other revenue', 24), (' Other income', 20), ('other operating', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 2483.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [2483.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Interest revenue', 44), ('other income', 31), (' Net finance costs', 22), (' Finance income and costs', 19), ('finance income', 18), ('Finance income', 18), (' Finance income and finance costs', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Interest revenue', 50), ('other income', 28), (' Finance income and costs', 17), ('finance income', 16), ('Finance income', 16), (' Finance income and finance costs', 15), (' Net finance costs', 5)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Finance income and costs', 52), (' Finance income and finance costs', 45), ('other income', 44), ('finance income', 42), ('Finance income', 42), (' Interest revenue', 22), (' Net finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19), ('Finance income', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), (' Finance income and costs', 30), (' Finance income and finance costs', 25), ('other income', 17), ('finance income', 17), ('Finance income', 17), (' Interest revenue', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Finance income and costs', 31), (' Net finance costs', 31), (' Finance income and finance costs', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Interest revenue', 44), (' Net finance costs', 26), (' Finance income and finance costs', 25), (' Finance income and costs', 24), ('other income', 22), ('finance income', 18), ('Finance income', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), (' Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Interest revenue', 45), (' Finance income and costs', 27), (' Net finance costs', 26), (' Finance income and finance costs', 23), ('other income', 15), ('finance income', 14), ('Finance income', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Finance income and costs', 40), (' Interest revenue', 36), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), ('other income', 29), (' Net finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 30), ('other income', 26), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Finance income and finance costs', 20), (' Net finance costs', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), (' Finance income and costs', 32), ('other income', 30), (' Finance income and finance costs', 27), (' Net finance costs', 26), ('finance income', 21), ('Finance income', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Interest revenue', 43), ('finance income', 32), ('Finance income', 32), ('other income', 25), (' Finance income and costs', 24), (' Finance income and finance costs', 20), (' Net finance costs', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 30), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), (' Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), ('Finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income', 39), (' Finance income and costs', 32), (' Finance income and finance costs', 28), (' Interest revenue', 23), (' Net finance costs', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), ('Finance income', 50), (' Finance income and costs', 43), (' Finance income and finance costs', 36), (' Net finance costs', 26), (' Interest revenue', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other income', 31), (' Finance income and finance costs', 29), (' Finance income and costs', 27), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 21), (' Net finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and costs', 27), (' Finance income and finance costs', 25), ('other income', 21), (' Interest revenue', 20), ('finance income', 18), ('Finance income', 18), (' Net finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other income', 58), (' Net finance costs', 43), (' Finance income and costs', 38), ('finance income', 36), ('Finance income', 36), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 34), (' Interest revenue', 31), (' Net finance costs', 31), (' Finance income and costs', 29), ('other income', 20), ('finance income', 16), ('Finance income', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Net finance costs', 44), (' Finance income and costs', 33), (' Finance income and finance costs', 33), ('finance income', 24), ('Finance income', 24), (' Interest revenue', 22), ('other income', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 27), (' Finance income and costs', 25), ('other income', 22), (' Finance income and finance costs', 22), ('finance income', 14), ('Finance income', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Finance income and finance costs', 35), ('other income', 34), (' Interest revenue', 31), (' Net finance costs', 31), ('finance income', 28), ('Finance income', 28), (' Finance income and costs', 27)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 38), (' Finance income and costs', 32), (' Finance income and finance costs', 29), (' Interest revenue', 26), ('finance income', 24), ('Finance income', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Finance income and costs', 35), (' Finance income and finance costs', 32), (' Net finance costs', 32), ('other income', 31), ('finance income', 28), ('Finance income', 28), (' Interest revenue', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and costs', 30), (' Finance income and finance costs', 27), (' Interest revenue', 22), ('other income', 20), ('finance income', 20), ('Finance income', 20), (' Net finance costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': 85, 'value': 511.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [1617.0, -1106.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' Interest revenue', 44), ('other income', 31), (' Net finance costs', 22), (' Finance income and costs', 19), ('finance income', 18), ('Finance income', 18), (' Finance income and finance costs', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' Interest revenue', 50), ('other income', 28), (' Finance income and costs', 17), ('finance income', 16), ('Finance income', 16), (' Finance income and finance costs', 15), (' Net finance costs', 5)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' Finance income and costs', 52), (' Finance income and finance costs', 45), ('other income', 44), ('finance income', 42), ('Finance income', 42), (' Interest revenue', 22), (' Net finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19), ('Finance income', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), (' Finance income and costs', 30), (' Finance income and finance costs', 25), ('other income', 17), ('finance income', 17), ('Finance income', 17), (' Interest revenue', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Finance income and costs', 31), (' Net finance costs', 31), (' Finance income and finance costs', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' Interest revenue', 44), (' Net finance costs', 26), (' Finance income and finance costs', 25), (' Finance income and costs', 24), ('other income', 22), ('finance income', 18), ('Finance income', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), (' Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' Interest revenue', 45), (' Finance income and costs', 27), (' Net finance costs', 26), (' Finance income and finance costs', 23), ('other income', 15), ('finance income', 14), ('Finance income', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' Finance income and costs', 40), (' Interest revenue', 36), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), ('other income', 29), (' Net finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 30), ('other income', 26), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Finance income and finance costs', 20), (' Net finance costs', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), (' Finance income and costs', 32), ('other income', 30), (' Finance income and finance costs', 27), (' Net finance costs', 26), ('finance income', 21), ('Finance income', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' Interest revenue', 43), ('finance income', 32), ('Finance income', 32), ('other income', 25), (' Finance income and costs', 24), (' Finance income and finance costs', 20), (' Net finance costs', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 30), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), (' Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), ('Finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income', 39), (' Finance income and costs', 32), (' Finance income and finance costs', 28), (' Interest revenue', 23), (' Net finance costs', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), ('Finance income', 50), (' Finance income and costs', 43), (' Finance income and finance costs', 36), (' Net finance costs', 26), (' Interest revenue', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other income', 31), (' Finance income and finance costs', 29), (' Finance income and costs', 27), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 21), (' Net finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and costs', 27), (' Finance income and finance costs', 25), ('other income', 21), (' Interest revenue', 20), ('finance income', 18), ('Finance income', 18), (' Net finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('other income', 58), (' Net finance costs', 43), (' Finance income and costs', 38), ('finance income', 36), ('Finance income', 36), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 34), (' Interest revenue', 31), (' Net finance costs', 31), (' Finance income and costs', 29), ('other income', 20), ('finance income', 16), ('Finance income', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' Net finance costs', 44), (' Finance income and costs', 33), (' Finance income and finance costs', 33), ('finance income', 24), ('Finance income', 24), (' Interest revenue', 22), ('other income', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 27), (' Finance income and costs', 25), ('other income', 22), (' Finance income and finance costs', 22), ('finance income', 14), ('Finance income', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' Finance income and finance costs', 35), ('other income', 34), (' Interest revenue', 31), (' Net finance costs', 31), ('finance income', 28), ('Finance income', 28), (' Finance income and costs', 27)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 38), (' Finance income and costs', 32), (' Finance income and finance costs', 29), (' Interest revenue', 26), ('finance income', 24), ('Finance income', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' Finance income and costs', 35), (' Finance income and finance costs', 32), (' Net finance costs', 32), ('other income', 31), ('finance income', 28), ('Finance income', 28), (' Interest revenue', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' Finance income and costs', 30), (' Finance income and finance costs', 27), (' Interest revenue', 22), ('other income', 20), ('finance income', 20), ('Finance income', 20), (' Net finance costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 16], 'score': 85, 'value': 1627.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [2483.0, -856.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 22), ('finance cost', 19), ('finance costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 26), ('finance cost', 6), ('finance costs', 6), (' net finance costs ', 5)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' finance expenses', 29), ('finance cost', 19), ('finance costs', 19), (' net finance costs ', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), ('finance cost', 22), ('finance costs', 22), (' finance expenses', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 21), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' finance expenses', 23), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), ('finance cost', 25), ('finance costs', 25), (' net finance costs ', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 21), ('finance cost', 14), ('finance costs', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 18), ('finance costs', 18), (' net finance costs ', 17), (' finance expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 27), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), ('finance cost', 40), ('finance costs', 40), (' net finance costs ', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 39), (' finance expenses', 30), ('finance cost', 21), ('finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 20), ('finance costs', 20), (' net finance costs ', 19), (' finance expenses', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -1106.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-1106.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 22), ('finance cost', 19), ('finance costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 26), ('finance cost', 6), ('finance costs', 6), (' net finance costs ', 5)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' finance expenses', 29), ('finance cost', 19), ('finance costs', 19), (' net finance costs ', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), ('finance cost', 22), ('finance costs', 22), (' finance expenses', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 21), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' finance expenses', 23), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), ('finance cost', 25), ('finance costs', 25), (' net finance costs ', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 21), ('finance cost', 14), ('finance costs', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 18), ('finance costs', 18), (' net finance costs ', 17), (' finance expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 27), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), ('finance cost', 40), ('finance costs', 40), (' net finance costs ', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 39), (' finance expenses', 30), ('finance cost', 21), ('finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 20), ('finance costs', 20), (' net finance costs ', 19), (' finance expenses', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -856.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-856.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 22), ('finance cost', 19), ('finance costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 26), ('finance cost', 6), ('finance costs', 6), (' net finance costs ', 5)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' finance expenses', 29), ('finance cost', 19), ('finance costs', 19), (' net finance costs ', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), ('finance cost', 22), ('finance costs', 22), (' finance expenses', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 21), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' finance expenses', 23), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), ('finance cost', 25), ('finance costs', 25), (' net finance costs ', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 21), ('finance cost', 14), ('finance costs', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 18), ('finance costs', 18), (' net finance costs ', 17), (' finance expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 27), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), ('finance cost', 40), ('finance costs', 40), (' net finance costs ', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 39), (' finance expenses', 30), ('finance cost', 21), ('finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 20), ('finance costs', 20), (' net finance costs ', 19), (' finance expenses', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -1106.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-1106.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [(' finance expenses', 29), (' net finance costs ', 22), ('finance cost', 19), ('finance costs', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' finance expenses', 26), ('finance cost', 6), ('finance costs', 6), (' net finance costs ', 5)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' finance expenses', 29), ('finance cost', 19), ('finance costs', 19), (' net finance costs ', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60), ('finance costs', 60), (' net finance costs ', 58), (' finance expenses', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [(' net finance costs ', 26), ('finance cost', 22), ('finance costs', 22), (' finance expenses', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses', 63), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' finance expenses', 43), (' net finance costs ', 21), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses', 64), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses', 41), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [(' finance expenses', 23), ('finance cost', 17), ('finance costs', 17), (' net finance costs ', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100), ('finance costs', 100), (' net finance costs ', 85), (' finance expenses', 67)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' finance expenses', 48), ('finance cost', 25), ('finance costs', 25), (' net finance costs ', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), ('finance cost', 30), ('finance costs', 30), (' net finance costs ', 26)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' finance expenses', 30), (' net finance costs ', 21), ('finance cost', 14), ('finance costs', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 18), ('finance costs', 18), (' net finance costs ', 17), (' finance expenses', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' net finance costs ', 43), (' finance expenses', 40), ('finance cost', 37), ('finance costs', 37)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 32), ('finance costs', 32), (' finance expenses', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 27), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' finance expenses', 43), ('finance cost', 40), ('finance costs', 40), (' net finance costs ', 31)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 39), (' finance expenses', 30), ('finance cost', 21), ('finance costs', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 25), ('finance cost', 23), ('finance costs', 23)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 20), ('finance costs', 20), (' net finance costs ', 19), (' finance expenses', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': -856.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-856.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), ('prior year ', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18), (' income tax benefit', 17), (' tax (expense)/benefit', 17), (' income tax', 13), (' income tax benefit/(expense)', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('provision for taxation previous year', 44), ('current tax', 38), ('deferred tax', 33), ('prior year ', 32), ('amount transferred to retained earnings', 29), (' income tax', 27), (' income tax benefit', 26), ('earlier year', 24), (' income tax expense', 22), (' income tax benefit/(expense)', 22), (' tax (expense)/benefit', 15), ('minimum alternate tax credit entitlement', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('provision for taxation previous year', 44), (' tax (expense)/benefit', 37), ('prior year ', 34), ('earlier year', 32), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), ('amount transferred to retained earnings', 27), ('deferred tax', 24), (' income tax benefit', 19), (' income tax', 18), (' income tax benefit/(expense)', 16), (' income tax expense', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' income tax', 47), (' income tax benefit', 47), (' income tax expense', 43), ('minimum alternate tax credit entitlement', 42), (' income tax benefit/(expense)', 40), ('prior year ', 39), ('amount transferred to retained earnings', 29), ('provision for taxation previous year', 28), ('current tax', 25), ('deferred tax', 13), ('earlier year', 12), (' tax (expense)/benefit', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), ('provision for taxation previous year', 26), (' income tax benefit', 23), ('amount transferred to retained earnings', 22), (' tax (expense)/benefit', 22), (' income tax benefit/(expense)', 18), ('minimum alternate tax credit entitlement', 15), ('deferred tax', 11), ('earlier year', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 34), (' income tax expense', 29), ('prior year ', 27), ('current tax', 26), ('minimum alternate tax credit entitlement', 23), (' income tax benefit', 21), (' tax (expense)/benefit', 20), ('deferred tax', 19), (' income tax', 19), ('earlier year', 17), (' income tax benefit/(expense)', 17), ('amount transferred to retained earnings', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), (' income tax benefit/(expense)', 40), ('amount transferred to retained earnings', 32), ('earlier year', 26), ('deferred tax', 20), ('current tax', 18), ('minimum alternate tax credit entitlement', 14), ('provision for taxation previous year', 10), ('prior year ', 10), (' tax (expense)/benefit', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 26), ('current tax', 25), ('provision for taxation previous year', 24), (' income tax expense', 23), (' income tax benefit/(expense)', 23), ('earlier year', 22), ('deferred tax', 19), ('prior year ', 19), (' income tax', 16), (' tax (expense)/benefit', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), (' income tax benefit', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 45), (' income tax expense', 38), ('amount transferred to retained earnings', 33), ('prior year ', 31), ('provision for taxation previous year', 27), ('minimum alternate tax credit entitlement', 25), ('deferred tax', 24), ('current tax', 22), (' income tax benefit', 18), (' income tax', 16), ('earlier year', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' income tax expense', 50), (' income tax benefit/(expense)', 50), (' tax (expense)/benefit', 48), (' income tax benefit', 39), ('deferred tax', 36), ('current tax', 29), ('earlier year', 28), ('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), (' income tax', 24), ('prior year ', 18), ('amount transferred to retained earnings', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), ('provision for taxation previous year', 20), (' income tax', 19), ('prior year ', 18), ('current tax', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 22), ('provision for taxation previous year', 22), (' income tax benefit', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('prior year ', 43), ('earlier year', 40), ('amount transferred to retained earnings', 30), ('minimum alternate tax credit entitlement', 27), ('current tax', 25), ('provision for taxation previous year', 24), (' income tax expense', 21), (' income tax benefit', 20), (' tax (expense)/benefit', 19), ('deferred tax', 18), (' income tax', 18), (' income tax benefit/(expense)', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), (' income tax', 29), ('current tax', 26), ('earlier year', 25), (' income tax benefit', 21), ('prior year ', 18), ('minimum alternate tax credit entitlement', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax', 30), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year ', 19), ('earlier year', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('deferred tax', 42), ('current tax', 40), ('minimum alternate tax credit entitlement', 39), ('prior year ', 26), ('earlier year', 24), ('amount transferred to retained earnings', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('provision for taxation previous year', 22), ('amount transferred to retained earnings', 19), ('earlier year', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' income tax benefit/(expense)', 45), ('provision for taxation previous year', 44), (' income tax expense', 42), ('minimum alternate tax credit entitlement', 37), (' income tax benefit', 36), (' tax (expense)/benefit', 33), (' income tax', 26), ('prior year ', 23), ('current tax', 22), ('earlier year', 22), ('deferred tax', 20), ('amount transferred to retained earnings', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 25), (' income tax', 22), (' tax (expense)/benefit', 22), ('earlier year', 21), (' income tax expense', 20), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 19), (' income tax benefit', 19), ('deferred tax', 15), ('provision for taxation previous year', 14), ('prior year ', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' income tax expense', 56), (' income tax benefit/(expense)', 47), (' income tax benefit', 45), (' income tax', 39), ('amount transferred to retained earnings', 33), ('provision for taxation previous year', 32), ('prior year ', 27), (' tax (expense)/benefit', 27), ('current tax', 26), ('earlier year', 21), ('deferred tax', 17), ('minimum alternate tax credit entitlement', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax benefit', 30), (' income tax benefit/(expense)', 30), (' income tax expense', 25), ('prior year ', 24), ('deferred tax', 21), ('current tax', 17), (' income tax', 17), ('earlier year', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' tax (expense)/benefit', 53), (' income tax benefit', 50), (' income tax benefit/(expense)', 48), ('minimum alternate tax credit entitlement', 45), ('amount transferred to retained earnings', 45), ('current tax', 40), ('deferred tax', 33), (' income tax expense', 33), (' income tax', 25), ('provision for taxation previous year', 21), ('earlier year', 20), ('prior year ', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 33), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 31), (' income tax benefit', 30), ('earlier year', 29), (' income tax benefit/(expense)', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), ('current tax', 22), (' income tax', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('current tax', 51), ('amount transferred to retained earnings', 47), (' income tax expense', 40), (' income tax benefit', 39), ('provision for taxation previous year', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax benefit/(expense)', 33), ('prior year ', 29), ('earlier year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' income tax expense', 44), (' income tax benefit', 41), ('provision for taxation previous year', 39), (' income tax benefit/(expense)', 39), ('earlier year', 37), ('prior year ', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 29), (' tax (expense)/benefit', 25), ('amount transferred to retained earnings', 22), ('minimum alternate tax credit entitlement', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' income tax benefit/(expense)', 38), (' income tax expense', 34), (' income tax benefit', 34), ('minimum alternate tax credit entitlement', 33), ('provision for taxation previous year', 29), ('earlier year', 28), ('prior year ', 26), (' tax (expense)/benefit', 26), (' income tax', 23), ('current tax', 20), ('deferred tax', 20), ('amount transferred to retained earnings', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 28), (' tax (expense)/benefit', 25), ('earlier year', 24), (' income tax expense', 22), (' income tax benefit/(expense)', 22), ('amount transferred to retained earnings', 21), (' income tax', 21), (' income tax benefit', 21), ('deferred tax', 17), ('provision for taxation previous year', 15), ('prior year ', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': -8410.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['8'], 'line_item_value': [-8410.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), ('prior year ', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18), (' income tax benefit', 17), (' tax (expense)/benefit', 17), (' income tax', 13), (' income tax benefit/(expense)', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('provision for taxation previous year', 44), ('current tax', 38), ('deferred tax', 33), ('prior year ', 32), ('amount transferred to retained earnings', 29), (' income tax', 27), (' income tax benefit', 26), ('earlier year', 24), (' income tax expense', 22), (' income tax benefit/(expense)', 22), (' tax (expense)/benefit', 15), ('minimum alternate tax credit entitlement', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('provision for taxation previous year', 44), (' tax (expense)/benefit', 37), ('prior year ', 34), ('earlier year', 32), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), ('amount transferred to retained earnings', 27), ('deferred tax', 24), (' income tax benefit', 19), (' income tax', 18), (' income tax benefit/(expense)', 16), (' income tax expense', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [(' income tax', 47), (' income tax benefit', 47), (' income tax expense', 43), ('minimum alternate tax credit entitlement', 42), (' income tax benefit/(expense)', 40), ('prior year ', 39), ('amount transferred to retained earnings', 29), ('provision for taxation previous year', 28), ('current tax', 25), ('deferred tax', 13), ('earlier year', 12), (' tax (expense)/benefit', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), ('provision for taxation previous year', 26), (' income tax benefit', 23), ('amount transferred to retained earnings', 22), (' tax (expense)/benefit', 22), (' income tax benefit/(expense)', 18), ('minimum alternate tax credit entitlement', 15), ('deferred tax', 11), ('earlier year', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 34), (' income tax expense', 29), ('prior year ', 27), ('current tax', 26), ('minimum alternate tax credit entitlement', 23), (' income tax benefit', 21), (' tax (expense)/benefit', 20), ('deferred tax', 19), (' income tax', 19), ('earlier year', 17), (' income tax benefit/(expense)', 17), ('amount transferred to retained earnings', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), (' income tax benefit/(expense)', 40), ('amount transferred to retained earnings', 32), ('earlier year', 26), ('deferred tax', 20), ('current tax', 18), ('minimum alternate tax credit entitlement', 14), ('provision for taxation previous year', 10), ('prior year ', 10), (' tax (expense)/benefit', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 26), ('current tax', 25), ('provision for taxation previous year', 24), (' income tax expense', 23), (' income tax benefit/(expense)', 23), ('earlier year', 22), ('deferred tax', 19), ('prior year ', 19), (' income tax', 16), (' tax (expense)/benefit', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), (' income tax benefit', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 45), (' income tax expense', 38), ('amount transferred to retained earnings', 33), ('prior year ', 31), ('provision for taxation previous year', 27), ('minimum alternate tax credit entitlement', 25), ('deferred tax', 24), ('current tax', 22), (' income tax benefit', 18), (' income tax', 16), ('earlier year', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [(' income tax expense', 50), (' income tax benefit/(expense)', 50), (' tax (expense)/benefit', 48), (' income tax benefit', 39), ('deferred tax', 36), ('current tax', 29), ('earlier year', 28), ('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), (' income tax', 24), ('prior year ', 18), ('amount transferred to retained earnings', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), ('provision for taxation previous year', 20), (' income tax', 19), ('prior year ', 18), ('current tax', 17)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 22), ('provision for taxation previous year', 22), (' income tax benefit', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('prior year ', 43), ('earlier year', 40), ('amount transferred to retained earnings', 30), ('minimum alternate tax credit entitlement', 27), ('current tax', 25), ('provision for taxation previous year', 24), (' income tax expense', 21), (' income tax benefit', 20), (' tax (expense)/benefit', 19), ('deferred tax', 18), (' income tax', 18), (' income tax benefit/(expense)', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), (' income tax', 29), ('current tax', 26), ('earlier year', 25), (' income tax benefit', 21), ('prior year ', 18), ('minimum alternate tax credit entitlement', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax', 30), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year ', 19), ('earlier year', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('deferred tax', 42), ('current tax', 40), ('minimum alternate tax credit entitlement', 39), ('prior year ', 26), ('earlier year', 24), ('amount transferred to retained earnings', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('provision for taxation previous year', 22), ('amount transferred to retained earnings', 19), ('earlier year', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [(' income tax benefit/(expense)', 45), ('provision for taxation previous year', 44), (' income tax expense', 42), ('minimum alternate tax credit entitlement', 37), (' income tax benefit', 36), (' tax (expense)/benefit', 33), (' income tax', 26), ('prior year ', 23), ('current tax', 22), ('earlier year', 22), ('deferred tax', 20), ('amount transferred to retained earnings', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 25), (' income tax', 22), (' tax (expense)/benefit', 22), ('earlier year', 21), (' income tax expense', 20), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 19), (' income tax benefit', 19), ('deferred tax', 15), ('provision for taxation previous year', 14), ('prior year ', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [(' income tax expense', 56), (' income tax benefit/(expense)', 47), (' income tax benefit', 45), (' income tax', 39), ('amount transferred to retained earnings', 33), ('provision for taxation previous year', 32), ('prior year ', 27), (' tax (expense)/benefit', 27), ('current tax', 26), ('earlier year', 21), ('deferred tax', 17), ('minimum alternate tax credit entitlement', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax benefit', 30), (' income tax benefit/(expense)', 30), (' income tax expense', 25), ('prior year ', 24), ('deferred tax', 21), ('current tax', 17), (' income tax', 17), ('earlier year', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [(' tax (expense)/benefit', 53), (' income tax benefit', 50), (' income tax benefit/(expense)', 48), ('minimum alternate tax credit entitlement', 45), ('amount transferred to retained earnings', 45), ('current tax', 40), ('deferred tax', 33), (' income tax expense', 33), (' income tax', 25), ('provision for taxation previous year', 21), ('earlier year', 20), ('prior year ', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 33), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 31), (' income tax benefit', 30), ('earlier year', 29), (' income tax benefit/(expense)', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), ('current tax', 22), (' income tax', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('current tax', 51), ('amount transferred to retained earnings', 47), (' income tax expense', 40), (' income tax benefit', 39), ('provision for taxation previous year', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax benefit/(expense)', 33), ('prior year ', 29), ('earlier year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [(' income tax expense', 44), (' income tax benefit', 41), ('provision for taxation previous year', 39), (' income tax benefit/(expense)', 39), ('earlier year', 37), ('prior year ', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 29), (' tax (expense)/benefit', 25), ('amount transferred to retained earnings', 22), ('minimum alternate tax credit entitlement', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [(' income tax benefit/(expense)', 38), (' income tax expense', 34), (' income tax benefit', 34), ('minimum alternate tax credit entitlement', 33), ('provision for taxation previous year', 29), ('earlier year', 28), ('prior year ', 26), (' tax (expense)/benefit', 26), (' income tax', 23), ('current tax', 20), ('deferred tax', 20), ('amount transferred to retained earnings', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 28), (' tax (expense)/benefit', 25), ('earlier year', 24), (' income tax expense', 22), (' income tax benefit/(expense)', 22), ('amount transferred to retained earnings', 21), (' income tax', 21), (' income tax benefit', 21), ('deferred tax', 17), ('provision for taxation previous year', 15), ('prior year ', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 100, 'value': -9702.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['8'], 'line_item_value': [-9702.0]}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 77), (' income tax expense on continuing operations', 75), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 68), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 61), (' deferred income tax', 60)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' total income tax expense / (benefit)', 67), (' deferred income tax', 60), (' total tax (expense)/benefit in income statement', 55), (' current income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense adjustment recognised for prior periods , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 66), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 63), (' total income tax expense / (benefit)', 63), (' deferred income tax', 60), (' current income tax', 53), (' total tax (expense)/benefit in income statement', 45)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 73), (' current income tax', 71), (' total tax (expense)/benefit in income statement', 68), (' income tax expense on continuing operations', 66), (' total income tax expense / (benefit)', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase in deferred tax assets (note 17) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total tax (expense)/benefit in income statement', 52), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 40)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase/decrease) in deferred tax liabilities (note 23) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 51), (' total tax (expense)/benefit in income statement', 50)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total tax (expense)/benefit in income statement', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 50)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 51), (' total tax (expense)/benefit in income statement', 50)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: entertainment expenses , res_fuzz_match = [(' total income tax expense / (benefit)', 63), (' deferred income tax', 60), (' current income tax', 59), (' income tax expense on continuing operations', 59), ('income tax expense', 56), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: other , res_fuzz_match = [('income tax expense', 59), (' current income tax', 59), (' deferred income tax', 53), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: nan , res_fuzz_match = [('income tax expense', 64), (' current income tax', 59), (' deferred income tax', 53), (' total income tax expense / (benefit)', 49), (' total tax (expense)/benefit in income statement', 49), (' income tax expense on continuing operations', 42), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: adjustment recognised for prior periods , res_fuzz_match = [(' current income tax', 59), ('income tax expense', 56), (' deferred income tax', 53), (' total income tax expense / (benefit)', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 71), (' total income tax expense / (benefit)', 69), (' deferred income tax', 67), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 37)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense current tax , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 77), (' income tax expense on continuing operations', 75), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 68), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 61), (' deferred income tax', 60)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' total income tax expense / (benefit)', 67), (' deferred income tax', 60), (' total tax (expense)/benefit in income statement', 55), (' current income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense adjustment recognised for prior periods , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 66), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 63), (' total income tax expense / (benefit)', 63), (' deferred income tax', 60), (' current income tax', 53), (' total tax (expense)/benefit in income statement', 45)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = income tax expense aggregate income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 73), (' current income tax', 71), (' total tax (expense)/benefit in income statement', 68), (' income tax expense on continuing operations', 66), (' total income tax expense / (benefit)', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase in deferred tax assets (note 17) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total tax (expense)/benefit in income statement', 52), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 40)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: increase/decrease) in deferred tax liabilities (note 23) , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 51), (' total tax (expense)/benefit in income statement', 50)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = deferred tax included in income tax expense comprises: deferred tax - origination and reversal of temporary differences , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 76), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' total tax (expense)/benefit in income statement', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate profit before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' total tax (expense)/benefit in income statement', 50)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense and tax at the statutory rate tax at the statutory tax rate of 30% , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 73), (' income tax expense on continuing operations', 72), (' current income tax', 71), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 51), (' total tax (expense)/benefit in income statement', 50)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: entertainment expenses , res_fuzz_match = [(' total income tax expense / (benefit)', 63), (' deferred income tax', 60), (' current income tax', 59), (' income tax expense on continuing operations', 59), ('income tax expense', 56), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: other , res_fuzz_match = [('income tax expense', 59), (' current income tax', 59), (' deferred income tax', 53), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 21)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: nan , res_fuzz_match = [('income tax expense', 64), (' current income tax', 59), (' deferred income tax', 53), (' total income tax expense / (benefit)', 49), (' total tax (expense)/benefit in income statement', 49), (' income tax expense on continuing operations', 42), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: adjustment recognised for prior periods , res_fuzz_match = [(' current income tax', 59), ('income tax expense', 56), (' deferred income tax', 53), (' total income tax expense / (benefit)', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = tax effect amounts which are not deductile/taxable) in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 71), (' total income tax expense / (benefit)', 69), (' deferred income tax', 67), (' current income tax', 65), (' total tax (expense)/benefit in income statement', 43), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 37)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 33), (' current income tax', 27), (' deferred income tax', 27), (' total income tax expense / (benefit)', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [9046.0, -307.0, 963.0, 9702.0, -68.0, -239.0, -307.0, 38111.0, 11433.0, 9702.0, 11425.0, 1490.0, -4505.0, 8410.0, -488.0, 1978.0, 1490.0, 51428.0, 15428.0, 8410.0], 'label': ['Income tax expense Current tax', 'Income tax expense Deferred tax - origination and reversal of temporary differences', 'Income tax expense Adjustment recognised for prior periods', 'Income tax expense Aggregate income tax expense', 'Deferred tax included in income tax expense comprises: Increase in deferred tax assets (note 17)', 'Deferred tax included in income tax expense comprises: Increase/decrease) in deferred tax liabilities (note 23)', 'Deferred tax included in income tax expense comprises: Deferred tax - origination and reversal of temporary differences', 'Numerical reconciliation of income tax expense and tax at the statutory rate Profit before income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Tax at the statutory tax rate of 30%', 'Tax effect amounts which are not deductile/taxable) in calculating taxable income: Income tax expense', 'Income tax expense Current tax', 'Income tax expense Deferred tax - origination and reversal of temporary differences', 'Income tax expense Adjustment recognised for prior periods', 'Income tax expense Aggregate income tax expense', 'Deferred tax included in income tax expense comprises: Increase in deferred tax assets (note 17)', 'Deferred tax included in income tax expense comprises: Increase/decrease) in deferred tax liabilities (note 23)', 'Deferred tax included in income tax expense comprises: Deferred tax - origination and reversal of temporary differences', 'Numerical reconciliation of income tax expense and tax at the statutory rate Profit before income tax expense', 'Numerical reconciliation of income tax expense and tax at the statutory rate Tax at the statutory tax rate of 30%', 'Tax effect amounts which are not deductile/taxable) in calculating taxable income: Income tax expense'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('share of', 8), ('share in', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('share of', 8), ('share in', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('share of', 33), ('share in', 33)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('prior period', 16), ('exceptional', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('exceptional', 7), ('prior period', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 13), ('prior period', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 17), ('exceptional', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('prior period', 22), ('exceptional', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('prior period', 39), ('exceptional', 33)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 33)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('exceptional', 32), ('prior period', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 21), ('exceptional', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('exceptional', 18), ('prior period', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('exceptional', 27), ('prior period', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('prior period', 17), ('exceptional', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 24), ('exceptional', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('prior period', 16), ('exceptional', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('exceptional', 7), ('prior period', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 13), ('prior period', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 17), ('exceptional', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('prior period', 22), ('exceptional', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('prior period', 39), ('exceptional', 33)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 33)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('exceptional', 32), ('prior period', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 21), ('exceptional', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('exceptional', 18), ('prior period', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('exceptional', 27), ('prior period', 22)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('prior period', 17), ('exceptional', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 24), ('exceptional', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-06-26 11:17:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-06-26 11:17:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-06-26 11:17:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-06-26 11:17:10+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income from leasing activities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = impairment of receivables , res_fuzz_match = [('NULL', 0)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)/income , res_fuzz_match = [('NULL', 13)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss)income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the owners of canon , res_fuzz_match = [('NULL', 6)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-06-26 11:17:10+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
