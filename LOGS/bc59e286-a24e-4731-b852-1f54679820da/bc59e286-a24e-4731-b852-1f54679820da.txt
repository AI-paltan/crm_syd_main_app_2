2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 26), ('bank balances other than above', 24), ('cash and bank balances', 24), ('bank balances other than cash and cash equivalents', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other bank balances', 45), ('bank balances other than above', 31), ('bank balances other than cash and cash equivalents', 20), ('cash and cash equivalents', 15), ('cash and bank balances', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 80.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [80.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 39), ('bank balances other than above', 17), ('other bank balances', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 26), ('bank balances other than above', 24), ('cash and bank balances', 24), ('bank balances other than cash and cash equivalents', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other bank balances', 45), ('bank balances other than above', 31), ('bank balances other than cash and cash equivalents', 20), ('cash and cash equivalents', 15), ('cash and bank balances', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('cash and cash equivalents', 30), ('cash and bank balances', 26), ('bank balances other than above', 17), ('bank balances other than cash and cash equivalents', 16), ('other bank balances', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 119092.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [119092.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('inventories', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 67.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [67.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('inventories', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('inventories', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 67918.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [67918.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 84, 'value': 372.0, 'line_item_label': ['Current assets', 'Total current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 372.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other financial assets', 30), ('other current financial assets', 29), ('other current assets', 25), ('other assets', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other assets', 72), ('other current assets', 61), ('other financial assets', 61), ('other current financial assets', 59)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84), ('other current financial assets', 70), ('other financial assets', 53), ('other assets', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 84, 'value': 388926.0, 'line_item_label': ['Current assets', 'Total current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 388926.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other current assets', 61)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other current assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 84, 'value': 372.0, 'line_item_label': ['Current assets', 'Total current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 372.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other current assets', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('other current assets', 61)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other current assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('other current assets', 84)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 84, 'value': 388926.0, 'line_item_label': ['Current assets', 'Total current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 388926.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('current assets', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('current assets', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 372.0, 'line_item_label': ['Current assets', 'Total current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 372.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('current assets', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('current assets', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('current assets', 81)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': 81, 'value': 388926.0, 'line_item_label': ['Current assets', 'Total current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 388926.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 38.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [38.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets - at cost , res_fuzz_match = [('depreciatio', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('depreciatio', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('depreciatio', 45)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets - at cost , res_fuzz_match = [('depreciatio', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('depreciatio', 78)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('depreciatio', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['depreciatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('depreciatio', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('depreciatio', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('depreciatio', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('depreciatio', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('depreciatio', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('depreciatio', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('depreciatio', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('depreciatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('depreciatio', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('depreciatio', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('depreciatio', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('depreciatio', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('depreciatio', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 38.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [38.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('capital work in progress', 32), ('work in progress', 31), ('tangible', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('capital work-in-progress', 40), ('capital workinprogress', 40), ('capital work in progress', 40), ('right of use', 40), ('right to use', 40), ('work in progress', 40), ('righttouse', 25), ('rightofuse', 22), ('tangible', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 47.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['15'], 'line_item_value': [47.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 37), ('capital workinprogress', 37), ('capital work in progress', 36), ('work in progress', 35), ('tangible', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible', 67), ('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('right of use', 33), ('right to use', 33), ('work in progress', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('capital work in progress', 32), ('work in progress', 31), ('tangible', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('capital work-in-progress', 40), ('capital workinprogress', 40), ('capital work in progress', 40), ('right of use', 40), ('right to use', 40), ('work in progress', 40), ('righttouse', 25), ('rightofuse', 22), ('tangible', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('tangible', 43), ('capital work-in-progress', 40), ('capital workinprogress', 40), ('work in progress', 38), ('capital work in progress', 28), ('rightofuse', 22), ('righttouse', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('tangible', 43), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('capital work in progress', 30), ('work in progress', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 34198.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['15'], 'line_item_value': [34198.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('tangible assets', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('tangible assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('tangible assets', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('tangible assets', 56)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('tangible assets', 75)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 20), ('goodwill', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('goodwill on consolidatio', 20), ('goodwill', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('goodwill on consolidatio', 38), ('goodwill', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('goodwill on consolidatio', 36), ('goodwill', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('intangible under development', 40), ('intangible assets under development', 40), ('intangible', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 99.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['16'], 'line_item_value': [99.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('intangible', 100), ('intangible under development', 100), ('intangible assets under development', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible under development', 38), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('intangible under development', 40), ('intangible assets under development', 40), ('intangible', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 47), ('intangible under development', 38)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('intangible assets under development', 73), ('intangible under development', 36), ('intangible', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 95613.0, 'line_item_label': ['Intangibles'], 'note_numbers': ['16'], 'line_item_value': [95613.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('donations', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('donations', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('donations', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('donations', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('donations', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 37), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('joint ventures and associates', 42), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('joint ventures and associates', 45), ('investment', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('deferred charges', 38), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['17'], 'line_item_value': [1.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred tax', 17), ('deferred charges', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('deferred charges', 38), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 36), ('deferred charges', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('deferred tax assets', 62), ('deferred tax', 40), ('deferred charges', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 1850.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['17'], 'line_item_value': [1850.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('other assets', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('other assets', 62)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('other assets', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('other assets', 73)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('non-current assets total', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 15], 'score': 100, 'value': 314.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 314.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('non-current assets total', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('non-current assets total', 59)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('non-current assets total', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('non-current assets total', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('non-current assets total', 73)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 15], 'score': 100, 'value': 271649.0, 'line_item_label': ['Non-current assets', 'Total non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 271649.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('short term debt', 25), ('short-term debt', 25), ('shortterm debt', 25), ('shortterm borrowings', 25), ('borrowings', 13), ('lease liabilities', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('borrowings', 13), ('lease liabilities', 10), ('short-term debt', 9), ('shortterm debt', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 22], 'score': 100, 'value': 62.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', nan], 'line_item_value': [50.0, 12.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('lease liabilities', 62), ('short-term debt', 14), ('shortterm debt', 14), ('short term debt', 13), ('borrowings', 10), ('shortterm borrowings', 6)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('borrowings', 100), ('shortterm borrowings', 55), ('short-term debt', 40), ('shortterm debt', 40), ('short term debt', 38), ('lease liabilities', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short-term debt', 16), ('shortterm debt', 16), ('short term debt', 15), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('short term debt', 25), ('short-term debt', 25), ('shortterm debt', 25), ('shortterm borrowings', 25), ('borrowings', 13), ('lease liabilities', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('borrowings', 13), ('lease liabilities', 10), ('short-term debt', 9), ('shortterm debt', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('borrowings', 19), ('shortterm borrowings', 19), ('lease liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('lease liabilities', 52), ('short term debt', 29), ('short-term debt', 29), ('shortterm debt', 29), ('borrowings', 23), ('shortterm borrowings', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [21, 22], 'score': 100, 'value': 12196.0, 'line_item_label': ['Borrowings', 'Lease liabilities'], 'note_numbers': ['19', nan], 'line_item_value': [0.0, 12196.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('other financial liabilities', 36), ('current maturities of long-term debt', 26), ('current maturities of longterm debt', 26), ('current maturities', 19), ('other current liabilities', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other financial liabilities', 21), ('other current liabilities', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 85, 'value': 184.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 184.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other financial liabilities', 57), ('other current liabilities', 57), ('current maturities', 36), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other financial liabilities', 23), ('other current liabilities', 23), ('current maturities', 21), ('current maturities of long-term debt', 18), ('current maturities of longterm debt', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('other financial liabilities', 36), ('current maturities of long-term debt', 26), ('current maturities of longterm debt', 26), ('current maturities', 19), ('other current liabilities', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other financial liabilities', 21), ('other current liabilities', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('current maturities of long-term debt', 38), ('current maturities of longterm debt', 38), ('current maturities', 36), ('other financial liabilities', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('current maturities', 61), ('other financial liabilities', 55), ('current maturities of long-term debt', 47), ('current maturities of longterm debt', 47)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 85, 'value': 130656.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 130656.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('note payable(debt)', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('note payable(debt)', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('note payable(debt)', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('note payable(debt)', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('outstanding dues of creditors other than', 30), ('accounts payable', 25), ('other trade payables', 20), ('trade payable', 19), ('micro enterprises and small enterprises', 18), ('outstanding dues of micro enterprises and small enterprises', 18), ('total outstanding due of other creditors other than micro and small', 18), ('other than micro and small enterprises', 18), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 11), ('small enterprises', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other trade payables', 30), ('trade payable', 29), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('other than micro and small enterprises', 22), ('micro enterprises', 17), ('outstanding dues of micro enterprises and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 10), ('micro enterprises and small enterprises', 5)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10), ('total outstanding due of other creditors other than micro and small', 9), ('other trade payables', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 97.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [97.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('accounts payable', 48), ('small enterprises', 40), ('micro enterprises', 33), ('micro enterprises and small enterprises', 24), ('other trade payables', 24), ('other than micro and small enterprises', 24), ('trade payable', 22), ('outstanding dues of micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 19), ('outstanding dues of creditors other than', 17), ('total outstanding due of other creditors other than micro and small', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('micro enterprises', 29), ('other trade payables', 25), ('trade payable', 22), ('small enterprises', 19), ('outstanding dues of creditors other than', 16), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than', 14), ('total outstanding due of other creditors other than micro and small', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('outstanding dues of creditors other than', 30), ('accounts payable', 25), ('other trade payables', 20), ('trade payable', 19), ('micro enterprises and small enterprises', 18), ('outstanding dues of micro enterprises and small enterprises', 18), ('total outstanding due of other creditors other than micro and small', 18), ('other than micro and small enterprises', 18), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 11), ('small enterprises', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other trade payables', 30), ('trade payable', 29), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('other than micro and small enterprises', 22), ('micro enterprises', 17), ('outstanding dues of micro enterprises and small enterprises', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 10), ('micro enterprises and small enterprises', 5)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 40), ('small enterprises', 40), ('accounts payable', 34), ('trade payable', 22), ('outstanding dues of creditors other than', 21), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises and small enterprises', 16), ('outstanding dues of micro enterprises and small enterprises', 16), ('total outstanding due of other creditors other than micro and small', 16), ('other than micro and small enterprises', 16), ('other trade payables', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10), ('total outstanding due of other creditors other than micro and small', 9), ('other trade payables', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('accounts payable', 47), ('other trade payables', 42), ('small enterprises', 40), ('trade payable', 38), ('micro enterprises', 34), ('micro enterprises and small enterprises', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 32), ('outstanding dues of creditors other than', 31), ('total outstanding due of other creditors other than micro and small', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [19], 'score': 90, 'value': 79504.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [79504.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('other current financial liabilities', 43), ('other financial liabilities', 36), ('other current liabilities', 16), ('other liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21), ('other financial liabilities', 21), ('other liabilities', 19), ('other current financial liabilities', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 85, 'value': 184.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 184.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57), ('other financial liabilities', 57), ('other current financial liabilities', 56), ('other liabilities', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other liabilities', 33), ('other current liabilities', 23), ('other financial liabilities', 23), ('other current financial liabilities', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('other current financial liabilities', 43), ('other financial liabilities', 36), ('other current liabilities', 16), ('other liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21), ('other financial liabilities', 21), ('other liabilities', 19), ('other current financial liabilities', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other financial liabilities', 34), ('other current financial liabilities', 33), ('other liabilities', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85), ('other current financial liabilities', 71), ('other liabilities', 56), ('other financial liabilities', 55)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 85, 'value': 130656.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 130656.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [24], 'score': 100, 'value': 0.0, 'line_item_label': ['Income tax'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('tax', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('tax', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('tax', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [24], 'score': 100, 'value': 12015.0, 'line_item_label': ['Income tax'], 'note_numbers': [nan], 'line_item_value': [12015.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('other current liabilities', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 85, 'value': 184.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 184.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('other current liabilities', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other current liabilities', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('other current liabilities', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('other current liabilities', 85)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 85, 'value': 130656.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 130656.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('current liabilities', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 82, 'value': 184.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 184.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract liabilities , res_fuzz_match = [('current liabilities', 69)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments forward contracts , res_fuzz_match = [('current liabilities', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current liabilities , res_fuzz_match = [('current liabilities', 82)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [18, 27], 'score': 82, 'value': 130656.0, 'line_item_label': ['Current liabilities', 'Total current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 130656.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('long term debt', 48)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('long term debt', 48)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term debt', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term debt', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 43), ('longterm borrowings', 43), ('borrowings', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term borrowings', 28), ('longterm borrowings', 27), ('borrowings', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term borrowings', 40), ('longterm borrowings', 40), ('borrowings', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term borrowings', 43), ('longterm borrowings', 43), ('borrowings', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term borrowings', 28), ('longterm borrowings', 27), ('borrowings', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('longterm borrowings', 37), ('long term borrowings', 33), ('borrowings', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term borrowings', 40), ('longterm borrowings', 40), ('borrowings', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('borrowings', 33), ('longterm borrowings', 33), ('long term borrowings', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('borrowings', 22), ('long term borrowings', 17), ('longterm borrowings', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('(bond)', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('(bond)', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('(bond)', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('(bond)', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('(bond)', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('lease liabilities', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 36.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': [nan], 'line_item_value': [36.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('lease liabilities', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('lease liabilities', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('lease liabilities', 52)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [30], 'score': 100, 'value': 24944.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': [nan], 'line_item_value': [24944.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('deferred tax liabilities', 37), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [31], 'score': 100, 'value': 0.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['22'], 'line_item_value': [0.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('deferred tax liabilities', 52), ('deferred taxes', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes', 43), ('deferred tax liabilities', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('deferred tax liabilities', 37), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 50), ('deferred taxes', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('deferred tax liabilities', 75), ('deferred taxes', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [31], 'score': 100, 'value': 7178.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['22'], 'line_item_value': [7178.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('other long term liabilities', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other long term liabilities', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other long term liabilities', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('other long term liabilities', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('other long term liabilities', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('other long term liabilities', 53)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('minority interest', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('minority interest', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('minority interest', 42)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('minority interest', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('minority interest', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('long term liabilities', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retirement benefit obligations , res_fuzz_match = [('long term liabilities', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current liabilities , res_fuzz_match = [('long term liabilities', 61)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total liabilities , res_fuzz_match = [('long term liabilities', 57)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('share capital', 24), ('equity share capital', 17), ('common stock', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('share capital', 24), ('equity share capital', 17), ('common stock', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 39), ('perpetual equity instrument', 26), ('common stock', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('equity share capital', 53), ('perpetual equity instrument', 49), ('share capital', 35), ('common stock', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 24), ('reserves and surplus', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('additional paid in capital', 29), ('additional paid up capital', 29), ('other reserves', 17), ('reserves and surplus', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other reserves', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 24), ('reserves surplus', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('other equity', 75), ('reserves surplus', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('non controlling interest', 30), ('minority interest', 15), ('noncontrolling interest', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('noncontrolling interest', 39), ('minority interest', 31), ('non controlling interest', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total equity , res_fuzz_match = [('shareholders equity(a)', 48)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['gross']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 38.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [38.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = intangibles , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total non-current assets , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total assets , res_fuzz_match = [('plant property equipment', 32), ('property plant equipment', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 91, 'value': 28627.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['14'], 'line_item_value': [28627.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets - at cost , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress at cost , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 26], 'score': [80, 80], 'value': [631.0, 1421.0], 'label': [' Construction in progress at cost', ' Construction in progress at cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['gross'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('gross', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('gross', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = leasehold improvements $'000 , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('gross', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('gross', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('gross', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('gross', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = office equipment $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('gross', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('gross', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = rental assets $'000 , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('gross', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('gross', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = construction in progress $'000 , res_fuzz_match = [('gross', 80)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('gross', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('gross', 44)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = foreign exchange differences , res_fuzz_match = [('gross', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = transfers in/(out) , res_fuzz_match = [('gross', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('gross', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('gross', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('gross', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [28, 29, 30, 31, 32, 33, 34], 'score': [80, 80, 80, 80, 80, 80, 80], 'value': [1421.0, 0.0, 0.0, 0.0, -790.0, 0.0, 631.0], 'label': ["Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000", "Construction in progress $'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('account receivables', 43), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 22), ('unbilled', 20), ('billed', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('government subsidies receivable', 60), ('account receivables', 40), ('trade receivables', 40), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 211.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['10'], 'line_item_value': [211.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('receivable', 50), ('billed', 50), ('account receivables', 36), ('trade receivables', 35), ('government subsidies receivable', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = contract assets , res_fuzz_match = [('account receivables', 43), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 22), ('unbilled', 20), ('billed', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other , res_fuzz_match = [('government subsidies receivable', 60), ('account receivables', 40), ('trade receivables', 40), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = total current assets , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 32), ('billed', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 186308.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['10'], 'line_item_value': [186308.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('revenue from operations', 70), ('sale of products', 55), ('revenue from contracts with customers', 45), ('from trading business', 44), ('net sales', 41), ('transmission and distribution business', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 46), ('from trading business', 40), ('sale of products', 38), ('net sales', 30), ('transmission and distribution business', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 56), ('from trading business', 49), ('sale of products', 29), ('net sales', 27), ('transmission and distribution business', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 15), ('net sales', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 33), ('net sales', 21), ('transmission and distribution business', 21), ('sale of products', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('revenue from contracts with customers', 42), ('revenue from operations', 32), ('net sales', 20), ('sale of products', 18), ('transmission and distribution business', 15), ('from trading business', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), ('sale of products', 36), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('net sales', 25), ('from trading business', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('transmission and distribution business', 38), ('from trading business', 31), ('revenue from contracts with customers', 29), ('net sales', 25), ('sale of products', 22), ('revenue from operations', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 41), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('from trading business', 26), ('net sales', 25), ('sale of products', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 36), ('transmission and distribution business', 32), ('revenue from operations', 31), ('sale of products', 29), ('revenue from contracts with customers', 26), ('net sales', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('sale of products', 29), ('transmission and distribution business', 27), ('net sales', 25), ('revenue from contracts with customers', 21), ('revenue from operations', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('revenue from operations', 31), ('transmission and distribution business', 29), ('from trading business', 29), ('revenue from contracts with customers', 28), ('sale of products', 19), ('net sales', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 36), ('revenue from contracts with customers', 26), ('from trading business', 20), ('net sales', 19), ('sale of products', 18), ('revenue from operations', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('revenue from contracts with customers', 37), ('revenue from operations', 33), ('from trading business', 33), ('sale of products', 26), ('transmission and distribution business', 22), ('net sales', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 35), ('sale of products', 26), ('transmission and distribution business', 23), ('revenue from operations', 22), ('net sales', 21), ('from trading business', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('from trading business', 26), ('revenue from contracts with customers', 23), ('net sales', 21), ('sale of products', 20), ('revenue from operations', 15), ('transmission and distribution business', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('from trading business', 30), ('revenue from contracts with customers', 23), ('net sales', 21), ('sale of products', 20), ('revenue from operations', 15), ('transmission and distribution business', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 34), ('transmission and distribution business', 31), ('sale of products', 25), ('revenue from operations', 23), ('from trading business', 20), ('net sales', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('from trading business', 41), ('transmission and distribution business', 35), ('net sales', 31), ('sale of products', 28), ('revenue from operations', 25), ('revenue from contracts with customers', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 35), ('from trading business', 35), ('revenue from operations', 31), ('sale of products', 27), ('transmission and distribution business', 24), ('net sales', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 28), ('from trading business', 22), ('net sales', 21), ('sale of products', 20), ('revenue from operations', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('sale of products', 22), ('net sales', 14), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('revenue from operations', 70), ('sale of products', 55), ('revenue from contracts with customers', 45), ('from trading business', 44), ('net sales', 41), ('transmission and distribution business', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 46), ('from trading business', 40), ('sale of products', 38), ('net sales', 30), ('transmission and distribution business', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 56), ('from trading business', 49), ('sale of products', 29), ('net sales', 27), ('transmission and distribution business', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 15), ('net sales', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), ('revenue from contracts with customers', 33), ('net sales', 21), ('transmission and distribution business', 21), ('sale of products', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('revenue from contracts with customers', 42), ('revenue from operations', 32), ('net sales', 20), ('sale of products', 18), ('transmission and distribution business', 15), ('from trading business', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('transmission and distribution business', 55), ('sale of products', 36), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('net sales', 25), ('from trading business', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('transmission and distribution business', 38), ('from trading business', 31), ('revenue from contracts with customers', 29), ('net sales', 25), ('sale of products', 22), ('revenue from operations', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('transmission and distribution business', 41), ('revenue from operations', 31), ('revenue from contracts with customers', 29), ('from trading business', 26), ('net sales', 25), ('sale of products', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 36), ('transmission and distribution business', 32), ('revenue from operations', 31), ('sale of products', 29), ('revenue from contracts with customers', 26), ('net sales', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('sale of products', 29), ('transmission and distribution business', 27), ('net sales', 25), ('revenue from contracts with customers', 21), ('revenue from operations', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('revenue from operations', 31), ('transmission and distribution business', 29), ('from trading business', 29), ('revenue from contracts with customers', 28), ('sale of products', 19), ('net sales', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 36), ('revenue from contracts with customers', 26), ('from trading business', 20), ('net sales', 19), ('sale of products', 18), ('revenue from operations', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('revenue from contracts with customers', 37), ('revenue from operations', 33), ('from trading business', 33), ('sale of products', 26), ('transmission and distribution business', 22), ('net sales', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 35), ('sale of products', 26), ('transmission and distribution business', 23), ('revenue from operations', 22), ('net sales', 21), ('from trading business', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('from trading business', 26), ('revenue from contracts with customers', 23), ('net sales', 21), ('sale of products', 20), ('revenue from operations', 15), ('transmission and distribution business', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('from trading business', 30), ('revenue from contracts with customers', 23), ('net sales', 21), ('sale of products', 20), ('revenue from operations', 15), ('transmission and distribution business', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 34), ('transmission and distribution business', 31), ('sale of products', 25), ('revenue from operations', 23), ('from trading business', 20), ('net sales', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('from trading business', 41), ('transmission and distribution business', 35), ('net sales', 31), ('sale of products', 28), ('revenue from operations', 25), ('revenue from contracts with customers', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 35), ('from trading business', 35), ('revenue from operations', 31), ('sale of products', 27), ('transmission and distribution business', 24), ('net sales', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('transmission and distribution business', 39), ('revenue from contracts with customers', 28), ('from trading business', 22), ('net sales', 21), ('sale of products', 20), ('revenue from operations', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('cost of sales', 40), ('total expenditure', 38), ('total expenses', 36), ('expense', 30), ('expenditure', 26), ('purchase of stock-in-trade', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('total expenditure', 24), ('cost of sales', 24), ('expenditure', 23), ('expense', 19), ('purchase of stock-in-trade', 18), ('total expenses', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('cost of sales', 32), ('expenditure', 25), ('purchase of stock-in-trade', 24), ('expense', 21), ('total expenditure', 21), ('total expenses', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('expense', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('total expenditure', 30), ('purchase of stock-in-trade', 27), ('expenditure', 19), ('expense', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('purchase of stock-in-trade', 22), ('cost of sales', 19), ('total expenditure', 17), ('expenditure', 16), ('total expenses', 15), ('expense', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 28), ('cost of sales', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), ('expenditure', 36), ('expense', 34), ('purchase of stock-in-trade', 29), ('cost of sales', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('total expenditure', 29), ('total expenses', 27), ('expenditure', 23), ('purchase of stock-in-trade', 20), ('expense', 18), ('cost of sales', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 23), ('cost of sales', 19), ('total expenses', 18), ('expenditure', 15), ('expense', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 36), ('total expenditure', 33), ('expenditure', 32), ('cost of sales', 28), ('expense', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('cost of sales', 24), ('total expenses', 23), ('total expenditure', 22), ('purchase of stock-in-trade', 18), ('expense', 15), ('expenditure', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 25), ('cost of sales', 21), ('total expenses', 20), ('expenditure', 16), ('expense', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 25), ('cost of sales', 25), ('expenditure', 16), ('expense', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('cost of sales', 23), ('total expenses', 21), ('total expenditure', 20), ('purchase of stock-in-trade', 16), ('expense', 16), ('expenditure', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('purchase of stock-in-trade', 47), ('total expenditure', 30), ('expenditure', 29), ('total expenses', 28), ('cost of sales', 24), ('expense', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('total expenses', 30), ('cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 25), ('cost of sales', 21), ('total expenses', 20), ('expenditure', 16), ('expense', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8], 'score': 100, 'value': -429439.0, 'line_item_label': ['Cost of sales', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-429439.0, 0.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('cost of sales', 13), ('purchase of stock-in-trade', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('cost of sales', 40), ('total expenditure', 38), ('total expenses', 36), ('expense', 30), ('expenditure', 26), ('purchase of stock-in-trade', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('total expenditure', 24), ('cost of sales', 24), ('expenditure', 23), ('expense', 19), ('purchase of stock-in-trade', 18), ('total expenses', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('cost of sales', 32), ('expenditure', 25), ('purchase of stock-in-trade', 24), ('expense', 21), ('total expenditure', 21), ('total expenses', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('expense', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('total expenses', 35), ('total expenditure', 30), ('purchase of stock-in-trade', 27), ('expenditure', 19), ('expense', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('purchase of stock-in-trade', 22), ('cost of sales', 19), ('total expenditure', 17), ('expenditure', 16), ('total expenses', 15), ('expense', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 28), ('cost of sales', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), ('expenditure', 36), ('expense', 34), ('purchase of stock-in-trade', 29), ('cost of sales', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('total expenditure', 29), ('total expenses', 27), ('expenditure', 23), ('purchase of stock-in-trade', 20), ('expense', 18), ('cost of sales', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 23), ('cost of sales', 19), ('total expenses', 18), ('expenditure', 15), ('expense', 8)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('purchase of stock-in-trade', 39), ('total expenses', 36), ('total expenditure', 33), ('expenditure', 32), ('cost of sales', 28), ('expense', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('cost of sales', 24), ('total expenses', 23), ('total expenditure', 22), ('purchase of stock-in-trade', 18), ('expense', 15), ('expenditure', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 25), ('cost of sales', 21), ('total expenses', 20), ('expenditure', 16), ('expense', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenses', 27), ('total expenditure', 25), ('cost of sales', 25), ('expenditure', 16), ('expense', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('cost of sales', 23), ('total expenses', 21), ('total expenditure', 20), ('purchase of stock-in-trade', 16), ('expense', 16), ('expenditure', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('purchase of stock-in-trade', 47), ('total expenditure', 30), ('expenditure', 29), ('total expenses', 28), ('cost of sales', 24), ('expense', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('total expenses', 30), ('cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('purchase of stock-in-trade', 28), ('total expenditure', 25), ('cost of sales', 21), ('total expenses', 20), ('expenditure', 16), ('expense', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8], 'score': 100, 'value': -416304.0, 'line_item_label': ['Cost of sales', 'Expenses'], 'note_numbers': [nan, nan], 'line_item_value': [-416304.0, 0.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('other expenses', 30), (' depreciation', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' depreciation', 31), ('other expenses', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [(' depreciation', 21), ('other expenses', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' depreciation', 12), ('other expenses', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('other expenses', 22), (' depreciation', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other expenses', 44), (' depreciation', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other expenses', 33), (' depreciation', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' depreciation', 15), ('other expenses', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('other expenses', 51), (' depreciation', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' depreciation', 21), ('other expenses', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('other expenses', 16), (' depreciation', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('other expenses', 20), (' depreciation', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' depreciation', 24), ('other expenses', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' depreciation', 26), ('other expenses', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('other expenses', 33), (' depreciation', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' depreciation', 17), ('other expenses', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': -3787.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-3787.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('other expenses', 30), (' depreciation', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [(' depreciation', 31), ('other expenses', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [(' depreciation', 21), ('other expenses', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' depreciation', 12), ('other expenses', 10)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' depreciation', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('other expenses', 22), (' depreciation', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other expenses', 44), (' depreciation', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other expenses', 33), (' depreciation', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [(' depreciation', 15), ('other expenses', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('other expenses', 51), (' depreciation', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [(' depreciation', 21), ('other expenses', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('other expenses', 16), (' depreciation', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('other expenses', 20), (' depreciation', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' depreciation', 24), ('other expenses', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [(' depreciation', 26), ('other expenses', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('other expenses', 33), (' depreciation', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [(' depreciation', 17), ('other expenses', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': -143.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-143.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('rent', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('rent', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('rent', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('rent', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('rent', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('rent', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('rent', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('rent', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('rent', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('rent', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('rent', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('rent', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('rent', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('rent', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('rent', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('rent', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('rent', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('rent', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('rent', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('rent', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('rent', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('rent', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('rent', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('rent', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('rent', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('rent', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('rent', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('rent', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('rent', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('rent', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('rent', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('rent', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('rent', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('rent', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('rent', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('rent', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('rent', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('other operating ', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('other operating ', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('other operating ', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('other operating ', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other operating ', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other operating ', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other operating ', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other operating ', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other operating ', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('other operating ', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('other operating ', 49)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('other operating ', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('other operating ', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('other operating ', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('other operating ', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('other operating ', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('other operating ', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('other operating ', 26)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('other operating ', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('other operating ', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other operating ', 67)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('other operating ', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other operating ', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('other operating ', 35)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other operating ', 15)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other operating ', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other operating ', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('other operating ', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('other operating ', 49)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('other operating ', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('other operating ', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('other operating ', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('other operating ', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('other operating ', 24)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('other operating ', 34)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('other operating ', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('other income', 31), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('other income', 28), ('finance income', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('other income', 36), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 17), ('finance income', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('other income', 22), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other income', 15), ('finance income', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('finance income', 33), ('other income', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other income', 30), ('finance income', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other income', 31), ('finance income', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('other income', 21), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('other income', 58), ('finance income', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('other income', 20), ('finance income', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('finance income', 24), ('other income', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('finance income', 24), ('other income', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('other income', 22), ('finance income', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('other income', 34), ('finance income', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('other income', 37), ('finance income', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('other income', 20), ('finance income', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': 158.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [158.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('other income', 31), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('other income', 28), ('finance income', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('other income', 36), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 17), ('finance income', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('other income', 22), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('other income', 15), ('finance income', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('finance income', 33), ('other income', 29)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('other income', 30), ('finance income', 21)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('other income', 31), ('finance income', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('other income', 21), ('finance income', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('other income', 58), ('finance income', 36)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('other income', 20), ('finance income', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('finance income', 24), ('other income', 16)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('finance income', 24), ('other income', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('other income', 22), ('finance income', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('other income', 34), ('finance income', 28)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('other income', 37), ('finance income', 23)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('other income', 20), ('finance income', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': 1617.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [1617.0]}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['interest'] , match_type = partial , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = net foreign exchange gain , res_fuzz_match = [('interest', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('interest', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = net foreign exchange gain , res_fuzz_match = [('interest', 40)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('interest', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('interest', 31)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('interest', 20)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:56+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-03-25 11:32:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:56+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('finance cost', 19)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('finance cost', 6)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('finance cost', 22)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('finance cost', 25)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('finance cost', 14)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 18)]
2023-03-25 11:32:56+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('finance cost', 37)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('finance cost', 23)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('finance cost', 32)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('finance cost', 32)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('finance cost', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('finance cost', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('finance cost', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': -2308.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2308.0]}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('finance cost', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('finance cost', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('finance cost', 27)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('finance cost', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('finance cost', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 30)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('finance cost', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('finance cost', 37)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('finance cost', 23)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('finance cost', 32)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('finance cost', 32)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('finance cost', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('finance cost', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('finance cost', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('finance cost', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': -1106.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['7'], 'line_item_value': [-1106.0]}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('provision for taxation previous year', 44), ('current tax', 38), ('deferred tax', 33), ('prior year', 32), ('amount transferred to retained earnings', 29), ('earlier year', 24), ('minimum alternate tax credit entitlement', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('provision for taxation previous year', 44), ('prior year', 34), ('earlier year', 32), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), ('amount transferred to retained earnings', 27), ('deferred tax', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('prior year', 38), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 33), ('current tax', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('minimum alternate tax credit entitlement', 15), ('deferred tax', 11), ('earlier year', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 34), ('prior year', 27), ('current tax', 26), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 19), ('earlier year', 17), ('amount transferred to retained earnings', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('amount transferred to retained earnings', 32), ('earlier year', 26), ('deferred tax', 20), ('current tax', 18), ('minimum alternate tax credit entitlement', 14), ('provision for taxation previous year', 10), ('prior year', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 35), ('current tax', 25), ('provision for taxation previous year', 24), ('earlier year', 22), ('deferred tax', 19), ('prior year', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('amount transferred to retained earnings', 33), ('prior year', 31), ('provision for taxation previous year', 27), ('minimum alternate tax credit entitlement', 25), ('deferred tax', 24), ('current tax', 22), ('earlier year', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('deferred tax', 36), ('current tax', 29), ('earlier year', 28), ('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('prior year', 18), ('amount transferred to retained earnings', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 22), ('provision for taxation previous year', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 42), ('current tax', 40), ('minimum alternate tax credit entitlement', 39), ('prior year', 26), ('earlier year', 24), ('amount transferred to retained earnings', 21)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('provision for taxation previous year', 22), ('amount transferred to retained earnings', 19), ('earlier year', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 37), ('prior year', 23), ('current tax', 22), ('earlier year', 22), ('deferred tax', 20), ('amount transferred to retained earnings', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 25), ('earlier year', 21), ('amount transferred to retained earnings', 19), ('deferred tax', 15), ('provision for taxation previous year', 14), ('prior year', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('amount transferred to retained earnings', 33), ('provision for taxation previous year', 32), ('prior year', 27), ('current tax', 26), ('earlier year', 21), ('deferred tax', 17), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('minimum alternate tax credit entitlement', 32), ('prior year', 24), ('deferred tax', 21), ('current tax', 17), ('earlier year', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('amount transferred to retained earnings', 45), ('current tax', 40), ('deferred tax', 33), ('provision for taxation previous year', 21), ('earlier year', 20), ('prior year', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('deferred tax', 33), ('provision for taxation previous year', 24), ('earlier year', 24), ('prior year', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 33), ('amount transferred to retained earnings', 31), ('earlier year', 29), ('prior year', 26), ('deferred tax', 23), ('current tax', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('current tax', 51), ('amount transferred to retained earnings', 47), ('provision for taxation previous year', 38), ('deferred tax', 36), ('prior year', 29), ('earlier year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 39), ('earlier year', 33), ('current tax', 31), ('prior year', 31), ('deferred tax', 28), ('amount transferred to retained earnings', 21), ('minimum alternate tax credit entitlement', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 28), ('earlier year', 24), ('amount transferred to retained earnings', 21), ('deferred tax', 17), ('provision for taxation previous year', 15), ('prior year', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('earlier year', 22), ('amount transferred to retained earnings', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('provision for taxation previous year', 44), ('current tax', 38), ('deferred tax', 33), ('prior year', 32), ('amount transferred to retained earnings', 29), ('earlier year', 24), ('minimum alternate tax credit entitlement', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('provision for taxation previous year', 44), ('prior year', 34), ('earlier year', 32), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), ('amount transferred to retained earnings', 27), ('deferred tax', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('prior year', 38), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 33), ('current tax', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('minimum alternate tax credit entitlement', 15), ('deferred tax', 11), ('earlier year', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 34), ('prior year', 27), ('current tax', 26), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 19), ('earlier year', 17), ('amount transferred to retained earnings', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('amount transferred to retained earnings', 32), ('earlier year', 26), ('deferred tax', 20), ('current tax', 18), ('minimum alternate tax credit entitlement', 14), ('provision for taxation previous year', 10), ('prior year', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 35), ('current tax', 25), ('provision for taxation previous year', 24), ('earlier year', 22), ('deferred tax', 19), ('prior year', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('amount transferred to retained earnings', 33), ('prior year', 31), ('provision for taxation previous year', 27), ('minimum alternate tax credit entitlement', 25), ('deferred tax', 24), ('current tax', 22), ('earlier year', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('deferred tax', 36), ('current tax', 29), ('earlier year', 28), ('provision for taxation previous year', 26), ('minimum alternate tax credit entitlement', 25), ('prior year', 18), ('amount transferred to retained earnings', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 22), ('provision for taxation previous year', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('provision for taxation previous year', 59), ('deferred tax', 42), ('current tax', 40), ('minimum alternate tax credit entitlement', 39), ('prior year', 26), ('earlier year', 24), ('amount transferred to retained earnings', 21)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('provision for taxation previous year', 22), ('amount transferred to retained earnings', 19), ('earlier year', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 37), ('prior year', 23), ('current tax', 22), ('earlier year', 22), ('deferred tax', 20), ('amount transferred to retained earnings', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 25), ('earlier year', 21), ('amount transferred to retained earnings', 19), ('deferred tax', 15), ('provision for taxation previous year', 14), ('prior year', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('amount transferred to retained earnings', 33), ('provision for taxation previous year', 32), ('prior year', 27), ('current tax', 26), ('earlier year', 21), ('deferred tax', 17), ('minimum alternate tax credit entitlement', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('minimum alternate tax credit entitlement', 32), ('prior year', 24), ('deferred tax', 21), ('current tax', 17), ('earlier year', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('minimum alternate tax credit entitlement', 45), ('amount transferred to retained earnings', 45), ('current tax', 40), ('deferred tax', 33), ('provision for taxation previous year', 21), ('earlier year', 20), ('prior year', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('deferred tax', 33), ('provision for taxation previous year', 24), ('earlier year', 24), ('prior year', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 33), ('amount transferred to retained earnings', 31), ('earlier year', 29), ('prior year', 26), ('deferred tax', 23), ('current tax', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('current tax', 51), ('amount transferred to retained earnings', 47), ('provision for taxation previous year', 38), ('deferred tax', 36), ('prior year', 29), ('earlier year', 22), ('minimum alternate tax credit entitlement', 21)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 39), ('earlier year', 33), ('current tax', 31), ('prior year', 31), ('deferred tax', 28), ('amount transferred to retained earnings', 21), ('minimum alternate tax credit entitlement', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('current tax', 28), ('earlier year', 24), ('amount transferred to retained earnings', 21), ('deferred tax', 17), ('provision for taxation previous year', 15), ('prior year', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('prior period', 16), ('exceptional', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('exceptional', 14), ('prior period', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 13), ('prior period', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 17), ('exceptional', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('prior period', 22), ('exceptional', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('prior period', 39), ('exceptional', 33)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 21), ('exceptional', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('exceptional', 18), ('prior period', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('exceptional', 27), ('prior period', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 24), ('exceptional', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('prior period', 30), ('exceptional', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('prior period', 16), ('exceptional', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('exceptional', 14), ('prior period', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 13), ('prior period', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 17), ('exceptional', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('prior period', 22), ('exceptional', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('prior period', 39), ('exceptional', 33)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('exceptional', 27), ('prior period', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('prior period', 27), ('exceptional', 18)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 21), ('exceptional', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('exceptional', 18), ('prior period', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('prior period', 20), ('exceptional', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('exceptional', 27), ('prior period', 22)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('prior period', 24), ('exceptional', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-03-25 11:32:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-03-25 11:32:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:32:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-03-25 11:32:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from sale of goods , res_fuzz_match = [('NULL', 24)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from rendering of services , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = revenue from leasing activities , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = interest revenue calculated using the effective interest method , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = distribution expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = marketing and promotional expenses , res_fuzz_match = [('NULL', 7)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of , res_fuzz_match = [('NULL', 3)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = canon australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 16)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) , res_fuzz_match = [('NULL', 13)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that will not be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 15)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial gain on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 9)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = actuarial loss on defined benefit plans, net of tax , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 4)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = foreign currency translation , res_fuzz_match = [('NULL', 14)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - txt_particular = australia pty. ltd. and its controlled entities , res_fuzz_match = [('NULL', 19)]
2023-03-25 11:32:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-03-25 11:40:26+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-03-25 11:40:26+0530 - sLogger - DEBUG - {'fileid': '4e6adc33-7e81-4db0-9787-28053fdd39bf', 'filename': '21 YMA Consol Statutory Accounts SIGNED.pdf', 'filepath': '/home/jayesh/mgs_ai/crm_syd_1/CRM_SYD_main_app_2/classification/../FILE_DB/FILES/21 YMA Consol Statutory Accounts SIGNED.pdf'}
2023-03-25 11:40:26+0530 - sLogger - DEBUG - save file completed
2023-03-25 11:40:26+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-03-25 11:40:26+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-03-25 11:40:26+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-03-25 11:40:26+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-03-25 11:40:26+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-03-25 11:40:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 11:40:26+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 11:40:29+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 11:40:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 11:40:29+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 11:40:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 11:40:29+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 11:40:29+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 11:40:29+0530 - sLogger - DEBUG - filetype: pdf
2023-03-25 11:40:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-03-25 11:40:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-03-25 11:40:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-03-25 11:40:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-03-25 11:40:31+0530 - sLogger - DEBUG - function: predict completed.
2023-03-25 11:40:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-03-25 11:40:31+0530 - sLogger - DEBUG - filetype: pdf
